<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>KubeSphere</title>
    <link href="/2023/06/27/KubeSphere/"/>
    <url>/2023/06/27/KubeSphere/</url>
    
    <content type="html"><![CDATA[<p>K8s 中安装 KubeSphere 界面管理及本地 k8s 暴露 80 端口访问</p><span id="more"></span><h1 id="KubeSphere"><a href="#KubeSphere" class="headerlink" title="KubeSphere"></a>KubeSphere</h1><h1 id="安装方式一"><a href="#安装方式一" class="headerlink" title="安装方式一"></a>安装方式一</h1><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">git <span class="hljs-keyword">clone</span> <span class="hljs-title">git</span>@github.com:code-lives/KubeSphere.git<br></code></pre></td></tr></table></figure><h2 id="缩短了域名"><a href="#缩短了域名" class="headerlink" title="缩短了域名"></a>缩短了域名</h2><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-string">kubectl</span> <span class="hljs-string">apply</span> <span class="hljs-string">-f</span> <span class="hljs-string">kubesphere-installer.yaml</span><br><br><span class="hljs-string">kubectl</span> <span class="hljs-string">apply</span> <span class="hljs-string">-f</span> <span class="hljs-string">cluster-configuration.yaml</span><br></code></pre></td></tr></table></figure><h2 id="安装方式二"><a href="#安装方式二" class="headerlink" title="安装方式二"></a>安装方式二</h2><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-string">kubectl</span> <span class="hljs-string">apply</span> <span class="hljs-string">-f</span> <span class="hljs-string">https://github.com/kubesphere/ks-installer/releases/download/v3.3.1/kubesphere-installer.yaml</span><br><br><span class="hljs-string">kubectl</span> <span class="hljs-string">apply</span> <span class="hljs-string">-f</span> <span class="hljs-string">https://github.com/kubesphere/ks-installer/releases/download/v3.3.1/cluster-configuration.yaml</span><br></code></pre></td></tr></table></figure><h3 id="查看安装进度及日志"><a href="#查看安装进度及日志" class="headerlink" title="查看安装进度及日志"></a>查看安装进度及日志</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-string">kubectl</span> <span class="hljs-string">logs</span> <span class="hljs-string">-n</span> <span class="hljs-string">kubesphere-system</span> <span class="hljs-string">$(kubectl</span> <span class="hljs-string">get</span> <span class="hljs-string">pod</span> <span class="hljs-string">-n</span> <span class="hljs-string">kubesphere-system</span> <span class="hljs-string">-l</span> <span class="hljs-string">&#x27;app in (ks-install, ks-installer)&#x27;</span> <span class="hljs-string">-o</span> <span class="hljs-string">jsonpath=&#x27;&#123;.items[0].metadata.name&#125;&#x27;)</span> <span class="hljs-string">-f</span><br></code></pre></td></tr></table></figure><h3 id="访问"><a href="#访问" class="headerlink" title="访问"></a>访问</h3><p><a href="http://127.0.0.1:30880/">http://127.0.0.1:30880</a></p><h3 id="账号密码"><a href="#账号密码" class="headerlink" title="账号密码"></a>账号密码</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs css">admin<br><span class="hljs-selector-tag">P</span><span class="hljs-keyword">@88w0rd</span><br></code></pre></td></tr></table></figure><h3 id="部署一个简单的-Nginx-应用到-k8s"><a href="#部署一个简单的-Nginx-应用到-k8s" class="headerlink" title="部署一个简单的 Nginx 应用到 k8s"></a>部署一个简单的 Nginx 应用到 k8s</h3><figure class="highlight coq"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs coq">kubectl <span class="hljs-built_in">apply</span> -f deployment.yml<br></code></pre></td></tr></table></figure><h1 id="把-k8s-里面的-80-端口暴露出来（在正式环境中不需要，80-直接可以访问，因为是在本地部署的）"><a href="#把-k8s-里面的-80-端口暴露出来（在正式环境中不需要，80-直接可以访问，因为是在本地部署的）" class="headerlink" title="把 k8s 里面的 80 端口暴露出来（在正式环境中不需要，80 直接可以访问，因为是在本地部署的）"></a>把 k8s 里面的 80 端口暴露出来（在正式环境中不需要，80 直接可以访问，因为是在本地部署的）</h1><p>执行该命令会需要权限</p><figure class="highlight vhdl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vhdl">kubectl <span class="hljs-keyword">port</span>-forward service/app-<span class="hljs-keyword">release</span> -n <span class="hljs-keyword">release</span> <span class="hljs-number">80</span>:<span class="hljs-number">80</span><br></code></pre></td></tr></table></figure><h1 id="请注意"><a href="#请注意" class="headerlink" title="请注意"></a>请注意</h1><p>在生产环境中，直接在 Kubernetes YAML 文件中包含 kubectl port-forward 命令是不推荐的，因为它违反了最佳实践和基于声明式配置的思想。端口转发通常用于开发和调试阶段，在生产环境中应采用适当的负载均衡和服务发现机制。</p><h1 id="卸载-KubeSphere"><a href="#卸载-KubeSphere" class="headerlink" title="卸载 KubeSphere"></a>卸载 KubeSphere</h1><p>这里查看最新卸载方式<br><a href="https://github.com/kubesphere/ks-installer/blob/master/scripts/kubesphere-delete.sh">https://github.com/kubesphere/ks-installer/blob/master/scripts/kubesphere-delete.sh</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">./uninstall.sh<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Docker</category>
      
      <category>KubeSphere</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Docker</tag>
      
      <tag>K8s</tag>
      
      <tag>Go</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Laravel中如何使用ES</title>
    <link href="/2023/06/16/ElasticSearchLaravel/"/>
    <url>/2023/06/16/ElasticSearchLaravel/</url>
    
    <content type="html"><![CDATA[<p>composer 安装 es 扩展</p><span id="more"></span><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">composer <span class="hljs-keyword">require</span> elasticsearch/elasticsearch<br></code></pre></td></tr></table></figure><h2 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title class_">App</span>\<span class="hljs-title class_">Http</span>\<span class="hljs-title class_">Controllers</span>;<br><br><span class="hljs-keyword">use</span> <span class="hljs-title">Elastic</span>\<span class="hljs-title">Elasticsearch</span>\<span class="hljs-title">ClientBuilder</span>;<br><span class="hljs-keyword">use</span> <span class="hljs-title">Illuminate</span>\<span class="hljs-title">Support</span>\<span class="hljs-title">Facades</span>\<span class="hljs-title">DB</span>;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ElasticSearch</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">Controller</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$client</span> = <span class="hljs-literal">null</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;client = <span class="hljs-title class_">ClientBuilder</span>::<span class="hljs-title function_ invoke__">create</span>()<br>            -&gt;<span class="hljs-title function_ invoke__">setHosts</span>([<span class="hljs-string">&quot;http://elasticsearch:9200&quot;</span>])<br>            -&gt;<span class="hljs-title function_ invoke__">setBasicAuthentication</span>(<span class="hljs-string">&#x27;elastic&#x27;</span>, <span class="hljs-string">&quot;123456&quot;</span>)<br>            -&gt;<span class="hljs-title function_ invoke__">build</span>();<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">infos</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable">$response</span> = <span class="hljs-variable language_">$this</span>-&gt;client-&gt;<span class="hljs-title function_ invoke__">info</span>();<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;pre&gt;&quot;</span>;<br>        <span class="hljs-title function_ invoke__">print_R</span>(<span class="hljs-variable">$response</span>);<br>    &#125;<br>    <span class="hljs-comment">// 创建分词索引</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">esCreateIk</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable">$params</span> = [<br>            <span class="hljs-string">&#x27;index&#x27;</span> =&gt; <span class="hljs-string">&#x27;ik&#x27;</span>,<br>            <span class="hljs-string">&#x27;body&#x27;</span> =&gt; [<br>                <span class="hljs-string">&#x27;mappings&#x27;</span> =&gt; [<br>                    <span class="hljs-string">&#x27;properties&#x27;</span> =&gt; [<br>                        <span class="hljs-string">&#x27;content&#x27;</span> =&gt; [<br>                            <span class="hljs-string">&#x27;type&#x27;</span> =&gt; <span class="hljs-string">&#x27;text&#x27;</span>,<br>                            <span class="hljs-string">&#x27;analyzer&#x27;</span> =&gt; <span class="hljs-string">&#x27;ik_max_word&#x27;</span>,<br>                        ],<br>                    ],<br>                ],<br>            ],<br>        ];<br><br>        <span class="hljs-variable">$ik</span> = <span class="hljs-variable language_">$this</span>-&gt;client-&gt;<span class="hljs-title function_ invoke__">indices</span>()-&gt;<span class="hljs-title function_ invoke__">create</span>(<span class="hljs-variable">$params</span>);<br>        <span class="hljs-title function_ invoke__">dd</span>(<span class="hljs-variable">$ik</span>-&gt;<span class="hljs-title function_ invoke__">asArray</span>());<br>    &#125;<br>    <span class="hljs-comment">//判断索引是否存在</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">isIndex</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable">$index</span> = <span class="hljs-variable language_">$this</span>-&gt;client-&gt;<span class="hljs-title function_ invoke__">indices</span>()-&gt;<span class="hljs-title function_ invoke__">exists</span>(<br>            [<span class="hljs-string">&#x27;index&#x27;</span> =&gt; <span class="hljs-string">&#x27;ik&#x27;</span>]<br>        )-&gt;<span class="hljs-title function_ invoke__">asBool</span>();<br>        <span class="hljs-title function_ invoke__">dd</span>(<span class="hljs-variable">$index</span>);<br>    &#125;<br>    <span class="hljs-comment">//查看索引的的信息</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">indexInfo</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable">$index</span> = <span class="hljs-variable language_">$this</span>-&gt;client-&gt;<span class="hljs-title function_ invoke__">indices</span>()-&gt;<span class="hljs-title function_ invoke__">getMapping</span>(<br>            [<span class="hljs-string">&#x27;index&#x27;</span> =&gt; <span class="hljs-string">&#x27;ik&#x27;</span>]<br>        );<br>        <span class="hljs-title function_ invoke__">dd</span>(<span class="hljs-variable">$index</span>-&gt;<span class="hljs-title function_ invoke__">asArray</span>());<br>    &#125;<br>    <span class="hljs-comment">//删除索引及数据</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">indexDelete</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable">$index</span> = <span class="hljs-variable language_">$this</span>-&gt;client-&gt;<span class="hljs-title function_ invoke__">indices</span>()-&gt;<span class="hljs-title function_ invoke__">delete</span>(<br>            [<span class="hljs-string">&#x27;index&#x27;</span> =&gt; <span class="hljs-string">&#x27;ik&#x27;</span>]<br>        );<br>        <span class="hljs-title function_ invoke__">dd</span>(<span class="hljs-variable">$index</span>-&gt;<span class="hljs-title function_ invoke__">asArray</span>());<br>    &#125;<br>    <span class="hljs-comment">//删除索引下面id=1的数据</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">esDelete</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable">$params</span> = [<br>            <span class="hljs-string">&#x27;index&#x27;</span> =&gt; <span class="hljs-string">&#x27;ik&#x27;</span>,<br>            <span class="hljs-string">&#x27;id&#x27;</span> =&gt; <span class="hljs-number">1</span>,<br>        ];<br>        <span class="hljs-variable">$response</span> = <span class="hljs-variable language_">$this</span>-&gt;client-&gt;<span class="hljs-title function_ invoke__">delete</span>(<span class="hljs-variable">$params</span>);<br>        <span class="hljs-title function_ invoke__">dd</span>(<span class="hljs-variable">$response</span>-&gt;<span class="hljs-title function_ invoke__">asArray</span>());<br>    &#125;<br>    <span class="hljs-comment">// 数据插入</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">esCreateIkData</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable">$array</span> = [<br>            <span class="hljs-string">&#x27;index&#x27;</span> =&gt; <span class="hljs-string">&#x27;ik&#x27;</span>,<br>            <span class="hljs-string">&#x27;type&#x27;</span> =&gt; <span class="hljs-string">&#x27;doc&#x27;</span>,<br>            <span class="hljs-string">&#x27;id&#x27;</span> =&gt; <span class="hljs-number">1</span>,<br>            <span class="hljs-string">&#x27;body&#x27;</span> =&gt; [<br>                <span class="hljs-string">&#x27;content&#x27;</span> =&gt; <span class="hljs-string">&#x27;测试数据&#x27;</span>,<br>            ],<br>        ];<br>        <span class="hljs-variable">$result</span> = <span class="hljs-variable language_">$this</span>-&gt;client-&gt;<span class="hljs-title function_ invoke__">index</span>(<span class="hljs-variable">$array</span>);<br>        <span class="hljs-title function_ invoke__">dd</span>(<span class="hljs-variable">$result</span>);<br>    &#125;<br>    <span class="hljs-comment">// 批量插入数据</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">eaCreateIkDataBulk</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br><br>        <span class="hljs-title function_ invoke__">set_time_limit</span>(<span class="hljs-number">0</span>);<br>        <span class="hljs-variable">$data</span> = DB::<span class="hljs-title function_ invoke__">table</span>(<span class="hljs-string">&#x27;faq&#x27;</span>)-&gt;<span class="hljs-title function_ invoke__">get</span>();<br>        <span class="hljs-comment">// 一条一条插入</span><br>        <span class="hljs-keyword">foreach</span> (<span class="hljs-variable">$data</span> <span class="hljs-keyword">as</span> <span class="hljs-variable">$key</span> =&gt; <span class="hljs-variable">$value</span>) &#123;<br>            <span class="hljs-variable">$array</span>[<span class="hljs-string">&#x27;body&#x27;</span>][] = [<span class="hljs-string">&#x27;index&#x27;</span> =&gt; [<span class="hljs-string">&#x27;_index&#x27;</span> =&gt; <span class="hljs-string">&#x27;ik&#x27;</span>, <span class="hljs-string">&#x27;_id&#x27;</span> =&gt; <span class="hljs-variable">$value</span>-&gt;id]];<br>            <span class="hljs-variable">$array</span>[<span class="hljs-string">&#x27;body&#x27;</span>][] = [<span class="hljs-string">&#x27;content&#x27;</span> =&gt; <span class="hljs-variable">$value</span>-&gt;content];<br>        &#125;<br>        <span class="hljs-variable">$result</span> = <span class="hljs-variable language_">$this</span>-&gt;client-&gt;<span class="hljs-title function_ invoke__">bulk</span>(<span class="hljs-variable">$array</span>);<br>        <span class="hljs-title function_ invoke__">dd</span>(<span class="hljs-variable">$result</span>);<br>    &#125;<br>    <span class="hljs-comment">// 查询当前索引下有多少数据</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">esCountData</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable">$params</span> = [<br>            <span class="hljs-string">&#x27;index&#x27;</span> =&gt; <span class="hljs-string">&#x27;ik&#x27;</span>,<br>        ];<br>        <span class="hljs-keyword">echo</span> <span class="hljs-variable language_">$this</span>-&gt;client-&gt;<span class="hljs-title function_ invoke__">count</span>(<span class="hljs-variable">$params</span>);<br>    &#125;<br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 查询 ik 下面所有数据</span><br><span class="hljs-comment">     * 默认返回最多10数据</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">esIkSearch</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable">$query</span> = [<br>            <span class="hljs-string">&#x27;index&#x27;</span> =&gt; <span class="hljs-string">&#x27;ik&#x27;</span>,<br>            <span class="hljs-comment">// &#x27;id&#x27; =&gt; 1, // 查询id 的话就加这个字段</span><br>        ];<br>        <span class="hljs-variable">$result</span> = <span class="hljs-variable language_">$this</span>-&gt;client-&gt;<span class="hljs-title function_ invoke__">search</span>(<span class="hljs-variable">$query</span>);<br>        <span class="hljs-title function_ invoke__">dd</span>(<span class="hljs-variable">$result</span>-&gt;<span class="hljs-title function_ invoke__">asArray</span>());<br>    &#125;<br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 查询 ik 下面数据 加各种条件</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">esIkSearchWhere</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable">$query</span> = [<br>            <span class="hljs-string">&#x27;index&#x27;</span> =&gt; <span class="hljs-string">&#x27;ik&#x27;</span>,<br>            <span class="hljs-string">&#x27;body&#x27;</span> =&gt; [<br>                <span class="hljs-string">&#x27;query&#x27;</span> =&gt; [<br>                    <span class="hljs-string">&#x27;match&#x27;</span> =&gt; [<br>                        <span class="hljs-string">&#x27;content&#x27;</span> =&gt; <span class="hljs-string">&#x27;被骗了几千块钱，有微信怎么要回来&#x27;</span><br>                    ]<br>                ]<br>            ],<br>            <span class="hljs-string">&#x27;_source&#x27;</span> =&gt; [<span class="hljs-string">&#x27;content&#x27;</span>], <span class="hljs-comment">//目前只有content 如果字段多了 想要那个返回哪个。可以不设置。默认返回所有数据</span><br>            <span class="hljs-string">&#x27;size&#x27;</span> =&gt; <span class="hljs-number">5</span>, <span class="hljs-comment">//设置一次返回5条数据、可以不设置</span><br>            <span class="hljs-string">&#x27;from&#x27;</span> =&gt; <span class="hljs-number">2</span>, <span class="hljs-comment">//从第几条开始 类似于limit 5,2 可以不设置</span><br>        ];<br>        <span class="hljs-variable">$result</span> = <span class="hljs-variable language_">$this</span>-&gt;client-&gt;<span class="hljs-title function_ invoke__">search</span>(<span class="hljs-variable">$query</span>);<br>        <span class="hljs-title function_ invoke__">dd</span>(<span class="hljs-variable">$result</span>-&gt;<span class="hljs-title function_ invoke__">asArray</span>());<br>    &#125;<br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 修改数据</span><br><span class="hljs-comment">     * 把 ik 下面 id=1 的content 修改</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">esIkedit</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable">$query</span> = [<br>            <span class="hljs-string">&#x27;index&#x27;</span> =&gt; <span class="hljs-string">&#x27;ik&#x27;</span>,<br>            <span class="hljs-string">&#x27;id&#x27;</span> =&gt; <span class="hljs-number">1</span>,<br>            <span class="hljs-string">&#x27;body&#x27;</span> =&gt; [<br>                <span class="hljs-string">&#x27;doc&#x27;</span> =&gt; [<br>                    <span class="hljs-string">&#x27;content&#x27;</span> =&gt; <span class="hljs-string">&#x27;修改数据&#x27;</span><br>                ],<br>            ],<br>        ];<br>        <span class="hljs-variable">$result</span> = <span class="hljs-variable language_">$this</span>-&gt;client-&gt;<span class="hljs-title function_ invoke__">update</span>(<span class="hljs-variable">$query</span>);<br>        <span class="hljs-title function_ invoke__">dd</span>(<span class="hljs-variable">$result</span>);<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>PHP</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Docker</tag>
      
      <tag>ElasticSearch</tag>
      
      <tag>Laravel</tag>
      
      <tag>Composer</tag>
      
      <tag>PHP</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ElasticSearch 在 Kibana中的操作</title>
    <link href="/2023/06/15/ElasticSearch/"/>
    <url>/2023/06/15/ElasticSearch/</url>
    
    <content type="html"><![CDATA[<h1 id="Kibana-命令使用"><a href="#Kibana-命令使用" class="headerlink" title="Kibana 命令使用"></a>Kibana 命令使用</h1><h2 id="PUT-创建"><a href="#PUT-创建" class="headerlink" title="PUT 创建"></a>PUT 创建</h2><p>创建 一个 test 名字的索引</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">PUT /test<br></code></pre></td></tr></table></figure><h2 id="查询所有的索引列表"><a href="#查询所有的索引列表" class="headerlink" title="查询所有的索引列表"></a>查询所有的索引列表</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">GET <span class="hljs-regexp">/_cat/i</span>ndices<br></code></pre></td></tr></table></figure><h2 id="GET-查看-test-索引信息"><a href="#GET-查看-test-索引信息" class="headerlink" title="GET 查看 test 索引信息"></a>GET 查看 test 索引信息</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-built_in">GET</span> /test<br></code></pre></td></tr></table></figure><h2 id="PUT-带参数"><a href="#PUT-带参数" class="headerlink" title="PUT 带参数"></a>PUT 带参数</h2><p>1、Text 会分词、然后进行索引，字段能被全文搜索<br>2、keyword 不分词，直接搜索，适合索引结构化的字段 如商品分类 文字标签【类似于 mysql nickname&#x3D;’张三’，精准匹配】<br>3、byte 适用于 年龄<br>4、integer 类似于 mysql int</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-comment">// PUT /test1</span><br><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;settings&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;number_of_shards&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">1</span><span class="hljs-punctuation">,</span> <span class="hljs-comment">//默认1</span><br>    <span class="hljs-attr">&quot;number_of_replicas&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">1</span> <span class="hljs-comment">//副本</span><br>  <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;mappings&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-comment">//属性</span><br>    <span class="hljs-attr">&quot;properties&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;nickname&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span> <span class="hljs-attr">&quot;type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;text&quot;</span> <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span> <span class="hljs-comment">//设置名字</span><br>      <span class="hljs-attr">&quot;age&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span> <span class="hljs-attr">&quot;type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;byte&quot;</span> <span class="hljs-punctuation">&#125;</span> <span class="hljs-comment">//设置年龄</span><br>    <span class="hljs-punctuation">&#125;</span><br>  <span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><h2 id="DELETE-删除"><a href="#DELETE-删除" class="headerlink" title="DELETE 删除"></a>DELETE 删除</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">DELETE /test<br></code></pre></td></tr></table></figure><h2 id="判断索引是否存在"><a href="#判断索引是否存在" class="headerlink" title="判断索引是否存在"></a>判断索引是否存在</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">HEAD /test<br></code></pre></td></tr></table></figure><h2 id="POST-添加数据"><a href="#POST-添加数据" class="headerlink" title="POST 添加数据"></a>POST 添加数据</h2><p>test 索引名称<br>_doc 类型<br>1 id 唯一表示类似于 mysql id 自增</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs json">POST /test/_doc/<span class="hljs-number">1</span><br><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;nickname&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;张三&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;age&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">18</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>查询 id &#x3D; 1 的数据</p><h3 id="根据-ID-查询"><a href="#根据-ID-查询" class="headerlink" title="根据 ID 查询"></a>根据 ID 查询</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">GET <span class="hljs-regexp">/test/</span>_doc/<span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><p>查询 test 索引的所有数据</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">GET <span class="hljs-regexp">/test/</span>_search<br></code></pre></td></tr></table></figure><h3 id="根据-ID-修改数据"><a href="#根据-ID-修改数据" class="headerlink" title="根据 ID 修改数据"></a>根据 ID 修改数据</h3><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs json">POST /test/_update/<span class="hljs-number">1</span><br><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;doc&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;nickname&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;李四&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;age&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">22</span><br>  <span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><h2 id="bulk-批量操作"><a href="#bulk-批量操作" class="headerlink" title="_bulk 批量操作"></a>_bulk 批量操作</h2><p>create 没有就是新增，有的话报错<br>index 没有就是新增，有的话修改<br>update 更新<br>delete 删除</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs json">POST /_bulk<span class="hljs-punctuation">&#123;</span><br><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;index&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;_index&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;two&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;_id&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-number">1</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;nickname&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;李四&quot;</span><span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;index&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;_index&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;two&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;_id&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-number">2</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;nickname&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;王武&quot;</span><span class="hljs-punctuation">&#125;</span><br><br></code></pre></td></tr></table></figure><h3 id="create"><a href="#create" class="headerlink" title="create"></a>create</h3><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs json">POST /_bulk<span class="hljs-punctuation">&#123;</span><br><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;create&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;_index&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;two&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;id&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-number">1</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;nickname&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;李四&quot;</span><span class="hljs-punctuation">&#125;</span><br><br></code></pre></td></tr></table></figure><h3 id="update"><a href="#update" class="headerlink" title="update"></a>update</h3><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs json">POST /_bulk<span class="hljs-punctuation">&#123;</span><br><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;create&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;_index&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;two&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;id&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-number">1</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;doc&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-attr">&quot;&#123;nickname&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;李四&quot;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">&#125;</span><br><br></code></pre></td></tr></table></figure><h3 id="deltete"><a href="#deltete" class="headerlink" title="deltete"></a>deltete</h3><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs json">POST /_bulk<span class="hljs-punctuation">&#123;</span><br><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;deltete&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;_index&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;two&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;_id&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-number">1</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;deltete&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;_index&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;two&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;_id&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-number">2</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><h3 id="多个-ID-搜索"><a href="#多个-ID-搜索" class="headerlink" title="多个 ID 搜索"></a>多个 ID 搜索</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs awk">GET <span class="hljs-regexp">/test/</span>_mget<br>&#123;<br>  <span class="hljs-string">&quot;ids&quot;</span>:[<span class="hljs-number">1</span>,<span class="hljs-number">2</span>]<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="URL-条件查询"><a href="#URL-条件查询" class="headerlink" title="URL 条件查询"></a>URL 条件查询</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">//</span> id 查询<br>GET <span class="hljs-regexp">/test/</span>_doc/<span class="hljs-number">1</span><br><br><span class="hljs-regexp">//</span> 限制字段显示 类似于 select nickname,age from table where id=<span class="hljs-number">1</span><br>GETT <span class="hljs-regexp">/test/</span>_doc/<span class="hljs-number">1</span>?_source=nickname,age<br><br><span class="hljs-regexp">//</span> 查询nickname<br>GET <span class="hljs-regexp">/test/</span>_search?q=nickname:李四<br><br><span class="hljs-regexp">//</span> 分页 size=每页数量 from=从哪里开始<br>GET <span class="hljs-regexp">/test/</span>_search?size=<span class="hljs-number">10</span>&amp;from=<span class="hljs-number">1</span><br><br></code></pre></td></tr></table></figure><h2 id="DSL-查询"><a href="#DSL-查询" class="headerlink" title="DSL 查询"></a>DSL 查询</h2><h3 id="普通查询"><a href="#普通查询" class="headerlink" title="普通查询"></a>普通查询</h3><p>查询年龄字段 &gt;40 &amp; &lt;50 的 ,每页 10 条，从第三条开始展示,年龄从大到小（先排序在分页）,只要 nickname 字段</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs json">POST /test/_search<br><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;query&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;range&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;age&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;gte&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">40</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;lte&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">50</span><br>      <span class="hljs-punctuation">&#125;</span><br>    <span class="hljs-punctuation">&#125;</span><br>  <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;_source&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-string">&quot;nickname&quot;</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;from&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">2</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;size&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">10</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;sort&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>    <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;age&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;order&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;desc&quot;</span><br>      <span class="hljs-punctuation">&#125;</span><br>    <span class="hljs-punctuation">&#125;</span><br>  <span class="hljs-punctuation">]</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><h3 id="match"><a href="#match" class="headerlink" title="match"></a>match</h3><p>match 会根据查询的字短进行分词，在进行分词查询 模糊匹配 (select * from table where nickname like ‘%张%’ or nickname like ‘%山%’)</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs json">POST /test/_search<br><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;query&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;match&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;nickname&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;张三&quot;</span><br>    <span class="hljs-punctuation">&#125;</span><br>  <span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><h3 id="multi-match"><a href="#multi-match" class="headerlink" title="multi_match"></a>multi_match</h3><p>multi_match 根据哪个字段进行搜索,比如搜索用户和描述 两个字段中有没有张三</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;query&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;multi_match&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;query&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;张三&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;fields&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-string">&quot;nickname&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;desc&quot;</span><span class="hljs-punctuation">]</span><br>    <span class="hljs-punctuation">&#125;</span><br>  <span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><h3 id="trem"><a href="#trem" class="headerlink" title="trem"></a>trem</h3><p>trem 不会进行分词,会采用精确匹配，也是类似于模糊查询(select * from table where nickname like ‘%张三%’)</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs json">POST /test/_search<br><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;query&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;trem&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;nickname&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;张三&quot;</span><br>    <span class="hljs-punctuation">&#125;</span><br>  <span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><h3 id="高亮展示"><a href="#高亮展示" class="headerlink" title="高亮展示"></a>高亮展示</h3><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;query&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;trem&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;nickname&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;张三&quot;</span><br>    <span class="hljs-punctuation">&#125;</span><br>  <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;highlight&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;fields&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;nickname&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><span class="hljs-punctuation">&#125;</span><br>    <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-comment">// &quot;tags_schema&quot;: &quot;styled&quot;, //默认标签包裹 和下面两个字段不能一起</span><br>    <span class="hljs-comment">// 下面的是自定义标签包括</span><br>    <span class="hljs-attr">&quot;pre_tags&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-string">&quot;&lt;font class=&#x27;style:red&#x27;&gt;&quot;</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;post_tags&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-string">&quot;&lt;/font&gt;&quot;</span><span class="hljs-punctuation">]</span><br>  <span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><h2 id="分词"><a href="#分词" class="headerlink" title="分词"></a>分词</h2><p>默认是以空格为分词的,对英文友好.中文分词是每个字进行匹配</p><h3 id="查询分词效果"><a href="#查询分词效果" class="headerlink" title="查询分词效果"></a>查询分词效果</h3><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs json">GET /\_analyze<br><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;tokenizer&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;standard&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;text&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;张三&quot;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><h3 id="安装中文分词器"><a href="#安装中文分词器" class="headerlink" title="安装中文分词器"></a>安装中文分词器</h3><h3 id="ik-smart-分少个词"><a href="#ik-smart-分少个词" class="headerlink" title="ik_smart 分少个词"></a>ik_smart 分少个词</h3><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs json">GET /\_analyze<br><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;tokenizer&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;ik_smart&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;text&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;北京市海淀区&quot;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><h3 id="ik-max-word-分多个词"><a href="#ik-max-word-分多个词" class="headerlink" title="ik_max_word 分多个词"></a>ik_max_word 分多个词</h3><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs json">GET /\_analyze<br><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;tokenizer&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;ik_max_word&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;text&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;北京市海淀区&quot;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><h3 id="分词要在创建索引的时候，指定分词器"><a href="#分词要在创建索引的时候，指定分词器" class="headerlink" title="分词要在创建索引的时候，指定分词器"></a>分词要在创建索引的时候，指定分词器</h3><p>创建索引 里面有 nickname age addr 三个字段，add 设置了分词器和搜索分词器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs bash">PUT /ik<br>&#123;<br>    <span class="hljs-string">&quot;mappings&quot;</span>:&#123;<br>        <span class="hljs-string">&quot;properties&quot;</span>:&#123;<br>            <span class="hljs-string">&quot;nickname&quot;</span>:&#123;<br>                <span class="hljs-string">&quot;type&quot;</span>:<span class="hljs-string">&quot;text&quot;</span><br>            &#125;,<br>            <span class="hljs-string">&quot;age&quot;</span>:&#123;<br>                <span class="hljs-string">&quot;type&quot;</span>:<span class="hljs-string">&quot;byte&quot;</span><br>            &#125;,<br>            <span class="hljs-string">&quot;addr&quot;</span>:&#123;<br>                <span class="hljs-string">&quot;type&quot;</span>:<span class="hljs-string">&quot;text&quot;</span>,<br>                <span class="hljs-string">&quot;analyzer&quot;</span>:<span class="hljs-string">&quot;ik_max_word&quot;</span>,<br>                <span class="hljs-string">&quot;search_analyzer&quot;</span>:<span class="hljs-string">&quot;ik_smart&quot;</span><br>            &#125;<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="插入测试数据"><a href="#插入测试数据" class="headerlink" title="插入测试数据"></a>插入测试数据</h3><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs n1ql">POST /_bulk<br>&#123;&quot;<span class="hljs-keyword">index</span><span class="hljs-string">&quot;:&#123;&quot;</span>_index<span class="hljs-string">&quot;:&quot;</span>ik<span class="hljs-string">&quot;,&quot;</span>_id<span class="hljs-string">&quot;:1&#125;&#125;</span><br><span class="hljs-string">&#123;&quot;</span>nickname<span class="hljs-string">&quot;:&quot;</span>李四<span class="hljs-string">&quot;,&quot;</span>age<span class="hljs-string">&quot;:18,&quot;</span>addr<span class="hljs-string">&quot;:&quot;</span>山西省忻州市忻府区<span class="hljs-string">&quot;&#125;</span><br><span class="hljs-string">&#123;&quot;</span><span class="hljs-keyword">index</span><span class="hljs-string">&quot;:&#123;&quot;</span>_index<span class="hljs-string">&quot;:&quot;</span>ik<span class="hljs-string">&quot;,&quot;</span>_id<span class="hljs-string">&quot;:2&#125;&#125;</span><br><span class="hljs-string">&#123;&quot;</span>nickname<span class="hljs-string">&quot;:&quot;</span>王武<span class="hljs-string">&quot;,&quot;</span>age<span class="hljs-string">&quot;:25,&quot;</span>addr<span class="hljs-string">&quot;:&quot;</span>山西省忻州市忻府区<span class="hljs-string">&quot;&#125;</span><br><span class="hljs-string">&#123;&quot;</span><span class="hljs-keyword">index</span><span class="hljs-string">&quot;:&#123;&quot;</span>_index<span class="hljs-string">&quot;:&quot;</span>ik<span class="hljs-string">&quot;,&quot;</span>_id<span class="hljs-string">&quot;:3&#125;&#125;</span><br><span class="hljs-string">&#123;&quot;</span>nickname<span class="hljs-string">&quot;:&quot;</span>赵四<span class="hljs-string">&quot;,&quot;</span>age<span class="hljs-string">&quot;:30,&quot;</span>addr<span class="hljs-string">&quot;:&quot;</span>河南省郑州市<span class="hljs-string">&quot;&#125;</span><br><span class="hljs-string">&#123;&quot;</span><span class="hljs-keyword">index</span><span class="hljs-string">&quot;:&#123;&quot;</span>_index<span class="hljs-string">&quot;:&quot;</span>ik<span class="hljs-string">&quot;,&quot;</span>_id<span class="hljs-string">&quot;:4&#125;&#125;</span><br><span class="hljs-string">&#123;&quot;</span>nickname<span class="hljs-string">&quot;:&quot;</span>赵五<span class="hljs-string">&quot;,&quot;</span>age<span class="hljs-string">&quot;:30,&quot;</span>addr<span class="hljs-string">&quot;:&quot;</span>河南省信阳市<span class="hljs-string">&quot;&#125;</span><br><span class="hljs-string">&#123;&quot;</span><span class="hljs-keyword">index</span><span class="hljs-string">&quot;:&#123;&quot;</span>_index<span class="hljs-string">&quot;:&quot;</span>ik<span class="hljs-string">&quot;,&quot;</span>_id<span class="hljs-string">&quot;:5&#125;&#125;</span><br><span class="hljs-string">&#123;&quot;</span>nickname<span class="hljs-string">&quot;:&quot;</span>王老五<span class="hljs-string">&quot;,&quot;</span>age<span class="hljs-string">&quot;:30,&quot;</span>addr<span class="hljs-string">&quot;:&quot;</span>河南省漯河市<span class="hljs-string">&quot;&#125;</span><br><span class="hljs-string"></span><br><span class="hljs-string"></span><br></code></pre></td></tr></table></figure><h3 id="match-phrase"><a href="#match-phrase" class="headerlink" title="match_phrase"></a>match_phrase</h3><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;query&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;match_phrase&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;addr&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;query&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;山西省&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;slop&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">20</span><br>      <span class="hljs-punctuation">&#125;</span><br>    <span class="hljs-punctuation">&#125;</span><br>  <span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><h2 id="悲观锁"><a href="#悲观锁" class="headerlink" title="悲观锁"></a>悲观锁</h2><p>单线程 和 redis 一样</p><h3 id="乐观锁"><a href="#乐观锁" class="headerlink" title="乐观锁"></a>乐观锁</h3><p>根据版本号 进行并发控制，进行版本对比，不一致重新生成新的数据和版本号</p>]]></content>
    
    
    <categories>
      
      <category>Docker</category>
      
      <category>ELK</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Docker</tag>
      
      <tag>ElasticSearch</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Sentry 异常日志记录</title>
    <link href="/2023/05/31/Sentry/"/>
    <url>/2023/05/31/Sentry/</url>
    
    <content type="html"><![CDATA[<p>Sentry 记录异常抛出</p><span id="more"></span><h1 id="服务器要求"><a href="#服务器要求" class="headerlink" title="服务器要求"></a>服务器要求</h1><p>实际项目中使用最低 8 核(vCPU)16 GiB,不然会 cpu100%，测试本地无所谓你可以重启</p><h1 id="拉取"><a href="#拉取" class="headerlink" title="拉取"></a>拉取</h1><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">git clone https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/getsentry/</span>self-hosted.git<br></code></pre></td></tr></table></figure><p>运行</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">docker-compose up -d</span><br></code></pre></td></tr></table></figure><h1 id="email-通知【sentry-x2F-config-yml】"><a href="#email-通知【sentry-x2F-config-yml】" class="headerlink" title="email 通知【sentry&#x2F;config.yml】"></a>email 通知【sentry&#x2F;config.yml】</h1><figure class="highlight profile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs profile">mail.host: <span class="hljs-string">&#x27;smtp&#x27;</span><br># mail.port: <span class="hljs-number">25</span><br># mail.username: <span class="hljs-string">&#x27;&#x27;</span><br># mail.password: <span class="hljs-string">&#x27;&#x27;</span><br># mail.use-tls: false<br># mail.use-ssl: false<br></code></pre></td></tr></table></figure><h1 id="https"><a href="#https" class="headerlink" title="https"></a>https</h1><p>代理或者修改 nginx 配置即可</p><h1 id="飞书或钉钉机器人通知"><a href="#飞书或钉钉机器人通知" class="headerlink" title="飞书或钉钉机器人通知"></a>飞书或钉钉机器人通知</h1><h4 id="进入项目-gt-设置-gt-集成插件-gt-搜索【WebHooks】-gt-添加"><a href="#进入项目-gt-设置-gt-集成插件-gt-搜索【WebHooks】-gt-添加" class="headerlink" title="进入项目-&gt;设置-&gt;集成插件-&gt;搜索【WebHooks】-&gt;添加"></a>进入项目-&gt;设置-&gt;集成插件-&gt;搜索【WebHooks】-&gt;添加</h4><p>1、飞书或钉钉创建机器人<br>2、把机器人链接配置到 WebHooks<br>3、设置警报 选择 WebHooks 通知即可<br>⚠️ 记得需要在项目里点击创建警报，才可以看到 WebHooks 选项</p>]]></content>
    
    
    <categories>
      
      <category>Docker</category>
      
      <category>Sentry</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Docker</tag>
      
      <tag>Sentry</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Laravel</title>
    <link href="/2023/05/19/Laravel/"/>
    <url>/2023/05/19/Laravel/</url>
    
    <content type="html"><![CDATA[<p>Laravel 一些使用记录 如 Trait</p><span id="more"></span><h1 id="composer"><a href="#composer" class="headerlink" title="composer"></a>composer</h1><h3 id="时间处理-Github"><a href="#时间处理-Github" class="headerlink" title="时间处理 Github"></a><a href="https://github.com/briannesbitt/Carbon">时间处理 Github</a></h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">composer <span class="hljs-keyword">require</span> nesbot/carbon<br></code></pre></td></tr></table></figure><h1 id="Trait"><a href="#Trait" class="headerlink" title="Trait"></a>Trait</h1><p>封装一个时间段处理</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br></pre></td><td class="code"><pre><code class="hljs php"><br><span class="hljs-meta">&lt;?php</span><br><span class="hljs-keyword">namespace</span> <span class="hljs-title class_">App</span>\<span class="hljs-title class_">Traits</span>;<br><span class="hljs-keyword">use</span> <span class="hljs-title">Carbon</span>\<span class="hljs-title">Carbon</span>;<br><br><span class="hljs-class"><span class="hljs-keyword">trait</span> <span class="hljs-title">TimeGroupTrait</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 获取时间 进行统计对比，根据开始（月、周、日） 向前多取一月 一周 一日，截止时间为当月or当周or当日</span><br><span class="hljs-comment">     * 按年查询 如【2023-01-01】-【2023-12-13】 返回 【2022-12-1】-【2023-04-31】（返回的结束时间是当前时间的月份日志）2022-12-1开始日期 是为了2023-1-31进行对比上一个月</span><br><span class="hljs-comment">     * 按月查询 也是多返回第一周的上一周 和目前的最后一周，如果是第二周 就只有 三周</span><br><span class="hljs-comment">     * 按天查询 也是多返回开始时间一天 和当天时间</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> [type] $start_time 开始时间 【2022-11-11】</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> [type] $end_time 截止时间 【2022-12-12】</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> string $type 类型【year、month、week】</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span> array</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getDate</span>(<span class="hljs-params"><span class="hljs-variable">$start_time</span>, <span class="hljs-variable">$end_time</span>, <span class="hljs-variable">$type</span> = <span class="hljs-string">&#x27;year&#x27;</span></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable">$start</span> = <span class="hljs-title class_">Carbon</span>::<span class="hljs-title function_ invoke__">parse</span>(<span class="hljs-variable">$start_time</span>);<br>        <span class="hljs-variable">$end</span> = <span class="hljs-title class_">Carbon</span>::<span class="hljs-title function_ invoke__">parse</span>(<span class="hljs-variable">$end_time</span>);<br>        <span class="hljs-keyword">switch</span> (<span class="hljs-variable">$type</span>) &#123;<br>            <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;year&#x27;</span>:<br>                <span class="hljs-comment"># code...</span><br>                <span class="hljs-keyword">return</span> <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">timeMonth</span>(<span class="hljs-variable">$start</span>, <span class="hljs-variable">$end</span>);<br>                <span class="hljs-keyword">break</span>;<br>            <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;month&#x27;</span>:<br>                <span class="hljs-comment"># code...</span><br>                <span class="hljs-keyword">return</span> <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">timeWeek</span>(<span class="hljs-variable">$start</span>, <span class="hljs-variable">$end</span>);<br>                <span class="hljs-keyword">break</span>;<br>            <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;week&#x27;</span>:<br>                <span class="hljs-comment"># code...</span><br>                <span class="hljs-keyword">return</span> <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">timeDay</span>(<span class="hljs-variable">$start</span>, <span class="hljs-variable">$end</span>);<br>                <span class="hljs-keyword">break</span>;<br>            <span class="hljs-keyword">default</span>:<br>                <span class="hljs-comment"># code...</span><br>                <span class="hljs-keyword">return</span> <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">timeMonth</span>(<span class="hljs-variable">$start</span>, <span class="hljs-variable">$end</span>);<br>                <span class="hljs-keyword">break</span>;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">timeDay</span>(<span class="hljs-params"><span class="hljs-variable">$startDate</span>, <span class="hljs-variable">$endDate</span></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable">$startDate</span> = <span class="hljs-variable">$startDate</span>-&gt;<span class="hljs-title function_ invoke__">subDay</span>();<br>        <span class="hljs-variable">$days</span> = <span class="hljs-variable">$endDate</span>-&gt;<span class="hljs-title function_ invoke__">diffInDays</span>(<span class="hljs-variable">$startDate</span>) + <span class="hljs-number">1</span>;<br>        <span class="hljs-variable">$currentday</span> = <span class="hljs-title class_">Carbon</span>::<span class="hljs-title function_ invoke__">now</span>()-&gt;day;<br>        <span class="hljs-variable">$currentyear</span> = <span class="hljs-title class_">Carbon</span>::<span class="hljs-title function_ invoke__">now</span>()-&gt;year;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-variable">$i</span> = <span class="hljs-number">0</span>; <span class="hljs-variable">$i</span> &lt; <span class="hljs-variable">$days</span>; <span class="hljs-variable">$i</span>++) &#123;<br>            <span class="hljs-variable">$date</span> = <span class="hljs-variable">$startDate</span>-&gt;<span class="hljs-title function_ invoke__">copy</span>()-&gt;<span class="hljs-title function_ invoke__">addDays</span>(<span class="hljs-variable">$i</span>);<br>            <span class="hljs-variable">$dayStart</span> = <span class="hljs-variable">$date</span>-&gt;<span class="hljs-title function_ invoke__">startOfDay</span>();<br>            <span class="hljs-variable">$dayEnd</span> = <span class="hljs-variable">$date</span>-&gt;<span class="hljs-title function_ invoke__">copy</span>()-&gt;<span class="hljs-title function_ invoke__">addDay</span>()-&gt;<span class="hljs-title function_ invoke__">startOfDay</span>()-&gt;<span class="hljs-title function_ invoke__">subSecond</span>();<br>            <span class="hljs-keyword">if</span> (<span class="hljs-variable">$dayStart</span>-&gt;month &gt; <span class="hljs-variable">$currentday</span> &amp;&amp; <span class="hljs-variable">$dayStart</span>-&gt;year == <span class="hljs-variable">$currentyear</span>) &#123;<br>                <span class="hljs-comment">// 如果当前天之后，跳过该天</span><br>                <span class="hljs-keyword">continue</span>;<br>            &#125;<br>            <span class="hljs-variable">$time</span>[] = [<br>                <span class="hljs-string">&#x27;start_time&#x27;</span> =&gt; <span class="hljs-variable">$dayStart</span>-&gt;<span class="hljs-title function_ invoke__">toDateTimeString</span>(),<br>                <span class="hljs-string">&#x27;end_time&#x27;</span> =&gt; <span class="hljs-variable">$dayEnd</span>-&gt;<span class="hljs-title function_ invoke__">toDateTimeString</span>(),<br>                <span class="hljs-string">&#x27;at_time&#x27;</span> =&gt; <span class="hljs-variable">$dayStart</span>-&gt;<span class="hljs-title function_ invoke__">toDateString</span>(),<br>            ];<br>        &#125;<br>        <span class="hljs-variable">$date</span> = <span class="hljs-variable">$startDate</span>-&gt;<span class="hljs-title function_ invoke__">copy</span>()-&gt;<span class="hljs-title function_ invoke__">subDays</span>(<span class="hljs-variable">$i</span>);<br>        <span class="hljs-variable">$dayStart</span> = <span class="hljs-variable">$date</span>-&gt;<span class="hljs-title function_ invoke__">startOfDay</span>();<br>        <span class="hljs-variable">$dayEnd</span> = <span class="hljs-variable">$date</span>-&gt;<span class="hljs-title function_ invoke__">copy</span>()-&gt;<span class="hljs-title function_ invoke__">addDay</span>()-&gt;<span class="hljs-title function_ invoke__">startOfDay</span>()-&gt;<span class="hljs-title function_ invoke__">subSecond</span>();<br>        <span class="hljs-keyword">return</span> <span class="hljs-variable">$time</span>;<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">timeWeek</span>(<span class="hljs-params"><span class="hljs-variable">$startDate</span>, <span class="hljs-variable">$endDate</span></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable">$startDate</span> = <span class="hljs-variable">$startDate</span>-&gt;<span class="hljs-title function_ invoke__">subWeek</span>();<br>        <span class="hljs-variable">$startDate</span> = <span class="hljs-title class_">Carbon</span>::<span class="hljs-title function_ invoke__">parse</span>(<span class="hljs-variable">$startDate</span>);<br>        <span class="hljs-variable">$endDate</span> = <span class="hljs-title class_">Carbon</span>::<span class="hljs-title function_ invoke__">parse</span>(<span class="hljs-variable">$endDate</span>);<br>        <span class="hljs-variable">$numOfWeeks</span> = <span class="hljs-variable">$endDate</span>-&gt;<span class="hljs-title function_ invoke__">diffInWeeks</span>(<span class="hljs-variable">$startDate</span>);<br>        <span class="hljs-variable">$currentWeek</span> = <span class="hljs-title class_">Carbon</span>::<span class="hljs-title function_ invoke__">now</span>()-&gt;week;<br>        <span class="hljs-variable">$currentyear</span> = <span class="hljs-title class_">Carbon</span>::<span class="hljs-title function_ invoke__">now</span>()-&gt;year;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-variable">$i</span> = <span class="hljs-number">0</span>; <span class="hljs-variable">$i</span> &lt;= <span class="hljs-variable">$numOfWeeks</span>; <span class="hljs-variable">$i</span>++) &#123;<br>            <span class="hljs-variable">$weekStart</span> = <span class="hljs-variable">$startDate</span>-&gt;<span class="hljs-title function_ invoke__">copy</span>()-&gt;<span class="hljs-title function_ invoke__">startOfWeek</span>()-&gt;<span class="hljs-title function_ invoke__">addWeeks</span>(<span class="hljs-variable">$i</span>);<br>            <span class="hljs-variable">$weekEnd</span> = <span class="hljs-variable">$startDate</span>-&gt;<span class="hljs-title function_ invoke__">copy</span>()-&gt;<span class="hljs-title function_ invoke__">endOfWeek</span>()-&gt;<span class="hljs-title function_ invoke__">addWeeks</span>(<span class="hljs-variable">$i</span>);<br>            <span class="hljs-keyword">if</span> (<span class="hljs-variable">$weekStart</span>-&gt;week &gt; <span class="hljs-variable">$currentWeek</span> &amp;&amp; <span class="hljs-variable">$weekStart</span>-&gt;year == <span class="hljs-variable">$currentyear</span>) &#123;<br>                <span class="hljs-comment">// 如果当前周之后，跳过该周</span><br>                <span class="hljs-keyword">continue</span>;<br>            &#125;<br>            <span class="hljs-variable">$time</span>[] = [<br>                <span class="hljs-string">&#x27;start_time&#x27;</span> =&gt; <span class="hljs-variable">$weekStart</span>-&gt;<span class="hljs-title function_ invoke__">toDateTimeString</span>(),<br>                <span class="hljs-string">&#x27;end_time&#x27;</span> =&gt; <span class="hljs-variable">$weekEnd</span>-&gt;<span class="hljs-title function_ invoke__">toDateTimeString</span>(),<br>                <span class="hljs-string">&#x27;at_time&#x27;</span> =&gt; <span class="hljs-variable">$weekStart</span>-&gt;<span class="hljs-title function_ invoke__">format</span>(<span class="hljs-string">&quot;m.d&quot;</span>) . <span class="hljs-string">&quot;-&quot;</span> . <span class="hljs-variable">$weekEnd</span>-&gt;<span class="hljs-title function_ invoke__">format</span>(<span class="hljs-string">&#x27;m.d&#x27;</span>),<br>            ];<br>        &#125;<br>        <span class="hljs-keyword">return</span> <span class="hljs-variable">$time</span>;<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">timeMonth</span>(<span class="hljs-params"><span class="hljs-variable">$startDate</span>, <span class="hljs-variable">$endDate</span></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable">$startDate</span> = <span class="hljs-variable">$startDate</span>-&gt;<span class="hljs-title function_ invoke__">subMonth</span>();<br>        <span class="hljs-variable">$startDate</span> = <span class="hljs-title class_">Carbon</span>::<span class="hljs-title function_ invoke__">parse</span>(<span class="hljs-variable">$startDate</span>);<br>        <span class="hljs-variable">$endDate</span> = <span class="hljs-title class_">Carbon</span>::<span class="hljs-title function_ invoke__">parse</span>(<span class="hljs-variable">$endDate</span>);<br>        <span class="hljs-variable">$currentMonth</span> = <span class="hljs-title class_">Carbon</span>::<span class="hljs-title function_ invoke__">now</span>()-&gt;month;<br>        <span class="hljs-variable">$currentyear</span> = <span class="hljs-title class_">Carbon</span>::<span class="hljs-title function_ invoke__">now</span>()-&gt;year;<br>        <span class="hljs-variable">$numOfMonths</span> = <span class="hljs-variable">$endDate</span>-&gt;<span class="hljs-title function_ invoke__">diffInMonths</span>(<span class="hljs-variable">$startDate</span>);<br>        <span class="hljs-keyword">for</span> (<span class="hljs-variable">$i</span> = <span class="hljs-number">0</span>; <span class="hljs-variable">$i</span> &lt;= <span class="hljs-variable">$numOfMonths</span>; <span class="hljs-variable">$i</span>++) &#123;<br>            <span class="hljs-variable">$monthStart</span> = <span class="hljs-variable">$startDate</span>-&gt;<span class="hljs-title function_ invoke__">copy</span>()-&gt;<span class="hljs-title function_ invoke__">startOfMonth</span>()-&gt;<span class="hljs-title function_ invoke__">addMonths</span>(<span class="hljs-variable">$i</span>);<br>            <span class="hljs-variable">$monthEnd</span> = <span class="hljs-variable">$startDate</span>-&gt;<span class="hljs-title function_ invoke__">copy</span>()-&gt;<span class="hljs-title function_ invoke__">endOfMonth</span>()-&gt;<span class="hljs-title function_ invoke__">addMonths</span>(<span class="hljs-variable">$i</span>);<br>            <span class="hljs-keyword">if</span> (<span class="hljs-variable">$monthStart</span>-&gt;month &gt; <span class="hljs-variable">$currentMonth</span> &amp;&amp; <span class="hljs-variable">$monthStart</span>-&gt;year == <span class="hljs-variable">$currentyear</span>) &#123;<br>                <span class="hljs-comment">// 如果当前月份之后，跳过该月份</span><br>                <span class="hljs-keyword">continue</span>;<br>            &#125;<br>            <span class="hljs-variable">$time</span>[] = [<br>                <span class="hljs-string">&#x27;start_time&#x27;</span> =&gt; <span class="hljs-variable">$monthStart</span>-&gt;<span class="hljs-title function_ invoke__">toDateTimeString</span>(),<br>                <span class="hljs-string">&#x27;end_time&#x27;</span> =&gt; <span class="hljs-variable">$monthEnd</span>-&gt;<span class="hljs-title function_ invoke__">toDateTimeString</span>(),<br>                <span class="hljs-string">&#x27;at_time&#x27;</span> =&gt; <span class="hljs-variable">$monthStart</span>-&gt;<span class="hljs-title function_ invoke__">format</span>(<span class="hljs-string">&#x27;Y-m&#x27;</span>),<br>            ];<br>        &#125;<br>        <span class="hljs-keyword">return</span> <span class="hljs-variable">$time</span>;<br>    &#125;<br>&#125;<br><br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>PHP</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Laravel</tag>
      
      <tag>PHP</tag>
      
      <tag>Trait</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ELK使用Docker安装</title>
    <link href="/2023/05/04/elk/"/>
    <url>/2023/05/04/elk/</url>
    
    <content type="html"><![CDATA[<h2 id="下载-docker-compose-文件"><a href="#下载-docker-compose-文件" class="headerlink" title="下载 docker-compose 文件"></a>下载 docker-compose 文件</h2><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">git <span class="hljs-keyword">clone</span> <span class="hljs-title">git</span>@github.com:code-lives/elk.git<br></code></pre></td></tr></table></figure><h2 id="注意-增加了分词"><a href="#注意-增加了分词" class="headerlink" title="注意 (增加了分词)"></a>注意 (增加了分词)</h2><p>⚠️ kibana 连接 es 的账号密码 对应的 kibana.yml 以及第三步里面 kibana 的密码。</p><h2 id="前置条件"><a href="#前置条件" class="headerlink" title="前置条件"></a>前置条件</h2><p>logstash 文件下的内容 是提前从容器复制出来的一份，修改了 logstash.yml 的连接 es 内容</p><p>logstash 连接器 用于连接 msyql <a href="https://mvnrepository.com/artifact/mysql/mysql-connector-java">https://mvnrepository.com/artifact/mysql/mysql-connector-java</a></p><h3 id="conf-d-文件-写了-mysql-conf-连接配置等。"><a href="#conf-d-文件-写了-mysql-conf-连接配置等。" class="headerlink" title="conf.d 文件 写了 mysql.conf 连接配置等。"></a>conf.d 文件 写了 mysql.conf 连接配置等。</h3><p>如果自己写的脚本运行报错 会产生一个.lock 的文件 记得删除【config】文件下</p><h3 id="logstash-x2F-config-文件下的-pipelines-yml-配置了-自动执行-mysql-conf"><a href="#logstash-x2F-config-文件下的-pipelines-yml-配置了-自动执行-mysql-conf" class="headerlink" title="logstash&#x2F;config 文件下的 pipelines.yml 配置了 自动执行 mysql.conf"></a>logstash&#x2F;config 文件下的 pipelines.yml 配置了 自动执行 mysql.conf</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php">elasticsearch.username: <span class="hljs-string">&quot;kibana&quot;</span><br>elasticsearch.password: <span class="hljs-string">&quot;123456&quot;</span><br></code></pre></td></tr></table></figure><h5 id="启动命令"><a href="#启动命令" class="headerlink" title="启动命令"></a>启动命令</h5><pre><code class="hljs">docker-compose up -d</code></pre><h6 id="第一步-进入-es-容器"><a href="#第一步-进入-es-容器" class="headerlink" title="第一步 进入 es 容器"></a>第一步 进入 es 容器</h6><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">docker exec -it elasticsearch sh<br></code></pre></td></tr></table></figure><h6 id="第二步-进入-es-容器"><a href="#第二步-进入-es-容器" class="headerlink" title="第二步 进入 es 容器"></a>第二步 进入 es 容器</h6><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">bin/elasticsearch-setup-passwords interactive<br></code></pre></td></tr></table></figure><h6 id="第三步-输入-y-下一步，进行密码设置"><a href="#第三步-输入-y-下一步，进行密码设置" class="headerlink" title="第三步 输入 y 下一步，进行密码设置"></a>第三步 输入 y 下一步，进行密码设置</h6><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs php">Enter password <span class="hljs-keyword">for</span> [elastic]:<br>Reenter password <span class="hljs-keyword">for</span> [elastic]:<br>Enter password <span class="hljs-keyword">for</span> [apm_system]:<br>Reenter password <span class="hljs-keyword">for</span> [apm_system]:<br>Enter password <span class="hljs-keyword">for</span> [kibana_system]:<br>Reenter password <span class="hljs-keyword">for</span> [kibana_system]:<br>Enter password <span class="hljs-keyword">for</span> [logstash_system]:<br>Reenter password <span class="hljs-keyword">for</span> [logstash_system]:<br>Enter password <span class="hljs-keyword">for</span> [beats_system]:<br>Reenter password <span class="hljs-keyword">for</span> [beats_system]:<br>Enter password <span class="hljs-keyword">for</span> [remote_monitoring_user]:<br>Reenter password <span class="hljs-keyword">for</span> [remote_monitoring_user]:<br>Changed password <span class="hljs-keyword">for</span> user [apm_system]<br>Changed password <span class="hljs-keyword">for</span> user [kibana_system]<br>Changed password <span class="hljs-keyword">for</span> user [kibana]<br>Changed password <span class="hljs-keyword">for</span> user [logstash_system]<br>Changed password <span class="hljs-keyword">for</span> user [beats_system]<br>Changed password <span class="hljs-keyword">for</span> user [remote_monitoring_user]<br>Changed password <span class="hljs-keyword">for</span> user [elastic]<br></code></pre></td></tr></table></figure><h5 id="登录，账号密码对应的-第三步-第一个设置的密码"><a href="#登录，账号密码对应的-第三步-第一个设置的密码" class="headerlink" title="登录，账号密码对应的 第三步 第一个设置的密码"></a>登录，账号密码对应的 第三步 第一个设置的密码</h5><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span>:<span class="hljs-number">5601</span><br>账号 elastic<br>密码 <span class="hljs-number">123456</span><br></code></pre></td></tr></table></figure><h2 id="logstash"><a href="#logstash" class="headerlink" title="logstash"></a>logstash</h2><p>启动后默认连接数据库 test 表 读取了 att_faq 表数据，id,content 两个字段存储在 es 的 test 索引中（不需要的话 修改 pipelines.yml 配置）</p><h3 id="配置文件【logstash】，是预先从-config-里面复制出来的"><a href="#配置文件【logstash】，是预先从-config-里面复制出来的" class="headerlink" title="配置文件【logstash】，是预先从 config 里面复制出来的"></a>配置文件【logstash】，是预先从 config 里面复制出来的</h3><h3 id="mysql-connector-java-5-1-49-jar-上面的提到连接器（可能映射后有权限问题-可以提前自定义镜像，或者加命令行）"><a href="#mysql-connector-java-5-1-49-jar-上面的提到连接器（可能映射后有权限问题-可以提前自定义镜像，或者加命令行）" class="headerlink" title="mysql-connector-java-5.1.49.jar 上面的提到连接器（可能映射后有权限问题,可以提前自定义镜像，或者加命令行）"></a>mysql-connector-java-5.1.49.jar 上面的提到连接器（可能映射后有权限问题,可以提前自定义镜像，或者加命令行）</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php">ls -l /usr/share/logstash/config/mysql-connector-java-<span class="hljs-number">5.1</span>.<span class="hljs-number">49</span>.jar<br>chmod +r /usr/share/logstash/config/mysql-connector-java-<span class="hljs-number">5.1</span>.<span class="hljs-number">49</span>.jar<br><br></code></pre></td></tr></table></figure><h3 id="Laravel"><a href="#Laravel" class="headerlink" title="Laravel"></a>Laravel</h3><p>使用了分词</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title class_">App</span>\<span class="hljs-title class_">Http</span>\<span class="hljs-title class_">Controllers</span>;<br><br><span class="hljs-keyword">use</span> <span class="hljs-title">Elastic</span>\<span class="hljs-title">Elasticsearch</span>\<span class="hljs-title">ClientBuilder</span>;<br><span class="hljs-keyword">use</span> <span class="hljs-title">Illuminate</span>\<span class="hljs-title">Support</span>\<span class="hljs-title">Facades</span>\<span class="hljs-title">DB</span>;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ElasticSearch</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">Controller</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$client</span> = <span class="hljs-literal">null</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;client = <span class="hljs-title class_">ClientBuilder</span>::<span class="hljs-title function_ invoke__">create</span>()<br>            -&gt;<span class="hljs-title function_ invoke__">setHosts</span>([<span class="hljs-string">&quot;http://elasticsearch:9200&quot;</span>])<br>            -&gt;<span class="hljs-title function_ invoke__">setBasicAuthentication</span>(<span class="hljs-string">&#x27;elastic&#x27;</span>, <span class="hljs-string">&quot;123456&quot;</span>)<br>            -&gt;<span class="hljs-title function_ invoke__">build</span>();<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">infos</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable">$response</span> = <span class="hljs-variable language_">$this</span>-&gt;client-&gt;<span class="hljs-title function_ invoke__">info</span>();<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;pre&gt;&quot;</span>;<br>        <span class="hljs-title function_ invoke__">print_R</span>(<span class="hljs-variable">$response</span>);<br>    &#125;<br>    <span class="hljs-comment">// 创建分词索引</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">esCreateIk</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable">$params</span> = [<br>            <span class="hljs-string">&#x27;index&#x27;</span> =&gt; <span class="hljs-string">&#x27;ik&#x27;</span>,<br>            <span class="hljs-string">&#x27;body&#x27;</span> =&gt; [<br>                <span class="hljs-string">&#x27;mappings&#x27;</span> =&gt; [<br>                    <span class="hljs-string">&#x27;properties&#x27;</span> =&gt; [<br>                        <span class="hljs-string">&#x27;content&#x27;</span> =&gt; [<br>                            <span class="hljs-string">&#x27;type&#x27;</span> =&gt; <span class="hljs-string">&#x27;text&#x27;</span>,<br>                            <span class="hljs-string">&#x27;analyzer&#x27;</span> =&gt; <span class="hljs-string">&#x27;ik_max_word&#x27;</span>,<br>                        ],<br>                    ],<br>                ],<br>            ],<br>        ];<br><br>        <span class="hljs-variable">$ik</span> = <span class="hljs-variable language_">$this</span>-&gt;client-&gt;<span class="hljs-title function_ invoke__">indices</span>()-&gt;<span class="hljs-title function_ invoke__">create</span>(<span class="hljs-variable">$params</span>);<br>        <span class="hljs-title function_ invoke__">dd</span>(<span class="hljs-variable">$ik</span>-&gt;<span class="hljs-title function_ invoke__">asArray</span>());<br>    &#125;<br>    <span class="hljs-comment">//判断索引是否存在</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">isIndex</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable">$index</span> = <span class="hljs-variable language_">$this</span>-&gt;client-&gt;<span class="hljs-title function_ invoke__">indices</span>()-&gt;<span class="hljs-title function_ invoke__">exists</span>(<br>            [<span class="hljs-string">&#x27;index&#x27;</span> =&gt; <span class="hljs-string">&#x27;ik&#x27;</span>]<br>        )-&gt;<span class="hljs-title function_ invoke__">asBool</span>();<br>        <span class="hljs-title function_ invoke__">dd</span>(<span class="hljs-variable">$index</span>);<br>    &#125;<br>    <span class="hljs-comment">//查看索引的的信息</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">indexInfo</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable">$index</span> = <span class="hljs-variable language_">$this</span>-&gt;client-&gt;<span class="hljs-title function_ invoke__">indices</span>()-&gt;<span class="hljs-title function_ invoke__">getMapping</span>(<br>            [<span class="hljs-string">&#x27;index&#x27;</span> =&gt; <span class="hljs-string">&#x27;ik&#x27;</span>]<br>        );<br>        <span class="hljs-title function_ invoke__">dd</span>(<span class="hljs-variable">$index</span>-&gt;<span class="hljs-title function_ invoke__">asArray</span>());<br>    &#125;<br>    <span class="hljs-comment">//删除索引及数据</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">indexDelete</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable">$index</span> = <span class="hljs-variable language_">$this</span>-&gt;client-&gt;<span class="hljs-title function_ invoke__">indices</span>()-&gt;<span class="hljs-title function_ invoke__">delete</span>(<br>            [<span class="hljs-string">&#x27;index&#x27;</span> =&gt; <span class="hljs-string">&#x27;ik&#x27;</span>]<br>        );<br>        <span class="hljs-title function_ invoke__">dd</span>(<span class="hljs-variable">$index</span>-&gt;<span class="hljs-title function_ invoke__">asArray</span>());<br>    &#125;<br>    <span class="hljs-comment">//删除索引下面id=1的数据</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">esDelete</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable">$params</span> = [<br>            <span class="hljs-string">&#x27;index&#x27;</span> =&gt; <span class="hljs-string">&#x27;ik&#x27;</span>,<br>            <span class="hljs-string">&#x27;id&#x27;</span> =&gt; <span class="hljs-number">1</span>,<br>        ];<br>        <span class="hljs-variable">$response</span> = <span class="hljs-variable language_">$this</span>-&gt;client-&gt;<span class="hljs-title function_ invoke__">delete</span>(<span class="hljs-variable">$params</span>);<br>        <span class="hljs-title function_ invoke__">dd</span>(<span class="hljs-variable">$response</span>-&gt;<span class="hljs-title function_ invoke__">asArray</span>());<br>    &#125;<br>    <span class="hljs-comment">// 数据插入</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">esCreateIkData</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable">$array</span> = [<br>            <span class="hljs-string">&#x27;index&#x27;</span> =&gt; <span class="hljs-string">&#x27;ik&#x27;</span>,<br>            <span class="hljs-string">&#x27;type&#x27;</span> =&gt; <span class="hljs-string">&#x27;doc&#x27;</span>,<br>            <span class="hljs-string">&#x27;id&#x27;</span> =&gt; <span class="hljs-number">1</span>,<br>            <span class="hljs-string">&#x27;body&#x27;</span> =&gt; [<br>                <span class="hljs-string">&#x27;content&#x27;</span> =&gt; <span class="hljs-string">&#x27;测试数据&#x27;</span>,<br>            ],<br>        ];<br>        <span class="hljs-variable">$result</span> = <span class="hljs-variable language_">$this</span>-&gt;client-&gt;<span class="hljs-title function_ invoke__">index</span>(<span class="hljs-variable">$array</span>);<br>        <span class="hljs-title function_ invoke__">dd</span>(<span class="hljs-variable">$result</span>);<br>    &#125;<br>    <span class="hljs-comment">// 批量插入数据</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">eaCreateIkDataBulk</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br><br>        <span class="hljs-title function_ invoke__">set_time_limit</span>(<span class="hljs-number">0</span>);<br>        <span class="hljs-variable">$data</span> = DB::<span class="hljs-title function_ invoke__">table</span>(<span class="hljs-string">&#x27;faq&#x27;</span>)-&gt;<span class="hljs-title function_ invoke__">get</span>();<br>        <span class="hljs-comment">// 一条一条插入</span><br>        <span class="hljs-keyword">foreach</span> (<span class="hljs-variable">$data</span> <span class="hljs-keyword">as</span> <span class="hljs-variable">$key</span> =&gt; <span class="hljs-variable">$value</span>) &#123;<br>            <span class="hljs-variable">$array</span>[<span class="hljs-string">&#x27;body&#x27;</span>][] = [<span class="hljs-string">&#x27;index&#x27;</span> =&gt; [<span class="hljs-string">&#x27;_index&#x27;</span> =&gt; <span class="hljs-string">&#x27;ik&#x27;</span>, <span class="hljs-string">&#x27;_id&#x27;</span> =&gt; <span class="hljs-variable">$value</span>-&gt;id]];<br>            <span class="hljs-variable">$array</span>[<span class="hljs-string">&#x27;body&#x27;</span>][] = [<span class="hljs-string">&#x27;content&#x27;</span> =&gt; <span class="hljs-variable">$value</span>-&gt;content];<br>        &#125;<br>        <span class="hljs-variable">$result</span> = <span class="hljs-variable language_">$this</span>-&gt;client-&gt;<span class="hljs-title function_ invoke__">bulk</span>(<span class="hljs-variable">$array</span>);<br>        <span class="hljs-title function_ invoke__">dd</span>(<span class="hljs-variable">$result</span>);<br>    &#125;<br>    <span class="hljs-comment">// 查询当前索引下有多少数据</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">esCountData</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable">$params</span> = [<br>            <span class="hljs-string">&#x27;index&#x27;</span> =&gt; <span class="hljs-string">&#x27;ik&#x27;</span>,<br>        ];<br>        <span class="hljs-keyword">echo</span> <span class="hljs-variable language_">$this</span>-&gt;client-&gt;<span class="hljs-title function_ invoke__">count</span>(<span class="hljs-variable">$params</span>);<br>    &#125;<br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 查询 ik 下面所有数据</span><br><span class="hljs-comment">     * 默认返回最多10数据</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">esIkSearch</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable">$query</span> = [<br>            <span class="hljs-string">&#x27;index&#x27;</span> =&gt; <span class="hljs-string">&#x27;ik&#x27;</span>,<br>            <span class="hljs-comment">// &#x27;id&#x27; =&gt; 1, // 查询id 的话就加这个字段</span><br>        ];<br>        <span class="hljs-variable">$result</span> = <span class="hljs-variable language_">$this</span>-&gt;client-&gt;<span class="hljs-title function_ invoke__">search</span>(<span class="hljs-variable">$query</span>);<br>        <span class="hljs-title function_ invoke__">dd</span>(<span class="hljs-variable">$result</span>-&gt;<span class="hljs-title function_ invoke__">asArray</span>());<br>    &#125;<br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 查询 ik 下面数据 加各种条件</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">esIkSearchWhere</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable">$query</span> = [<br>            <span class="hljs-string">&#x27;index&#x27;</span> =&gt; <span class="hljs-string">&#x27;ik&#x27;</span>,<br>            <span class="hljs-string">&#x27;body&#x27;</span> =&gt; [<br>                <span class="hljs-string">&#x27;query&#x27;</span> =&gt; [<br>                    <span class="hljs-string">&#x27;match&#x27;</span> =&gt; [<br>                        <span class="hljs-string">&#x27;content&#x27;</span> =&gt; <span class="hljs-string">&#x27;被骗了几千块钱，有微信怎么要回来&#x27;</span><br>                    ]<br>                ]<br>            ],<br>            <span class="hljs-string">&#x27;_source&#x27;</span> =&gt; [<span class="hljs-string">&#x27;content&#x27;</span>], <span class="hljs-comment">//目前只有content 如果字段多了 想要那个返回哪个。可以不设置。默认返回所有数据</span><br>            <span class="hljs-string">&#x27;size&#x27;</span> =&gt; <span class="hljs-number">5</span>, <span class="hljs-comment">//设置一次返回5条数据、可以不设置</span><br>            <span class="hljs-string">&#x27;from&#x27;</span> =&gt; <span class="hljs-number">2</span>, <span class="hljs-comment">//从第几条开始 类似于limit 5,2 可以不设置</span><br>        ];<br>        <span class="hljs-variable">$result</span> = <span class="hljs-variable language_">$this</span>-&gt;client-&gt;<span class="hljs-title function_ invoke__">search</span>(<span class="hljs-variable">$query</span>);<br>        <span class="hljs-title function_ invoke__">dd</span>(<span class="hljs-variable">$result</span>-&gt;<span class="hljs-title function_ invoke__">asArray</span>());<br>    &#125;<br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 修改数据</span><br><span class="hljs-comment">     * 把 ik 下面 id=1 的content 修改</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">esIkedit</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable">$query</span> = [<br>            <span class="hljs-string">&#x27;index&#x27;</span> =&gt; <span class="hljs-string">&#x27;ik&#x27;</span>,<br>            <span class="hljs-string">&#x27;id&#x27;</span> =&gt; <span class="hljs-number">1</span>,<br>            <span class="hljs-string">&#x27;body&#x27;</span> =&gt; [<br>                <span class="hljs-string">&#x27;doc&#x27;</span> =&gt; [<br>                    <span class="hljs-string">&#x27;content&#x27;</span> =&gt; <span class="hljs-string">&#x27;修改数据&#x27;</span><br>                ],<br>            ],<br>        ];<br>        <span class="hljs-variable">$result</span> = <span class="hljs-variable language_">$this</span>-&gt;client-&gt;<span class="hljs-title function_ invoke__">update</span>(<span class="hljs-variable">$query</span>);<br>        <span class="hljs-title function_ invoke__">dd</span>(<span class="hljs-variable">$result</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="go"><a href="#go" class="headerlink" title="go"></a>go</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-keyword">package</span> main<br><br><span class="hljs-keyword">import</span> (<br><span class="hljs-string">&quot;bytes&quot;</span><br><span class="hljs-string">&quot;context&quot;</span><br><span class="hljs-string">&quot;encoding/json&quot;</span><br><span class="hljs-string">&quot;fmt&quot;</span><br><span class="hljs-string">&quot;log&quot;</span><br><span class="hljs-string">&quot;strings&quot;</span><br><br>elasticsearch <span class="hljs-string">&quot;github.com/elastic/go-elasticsearch/v8&quot;</span><br><span class="hljs-string">&quot;github.com/elastic/go-elasticsearch/v8/esapi&quot;</span><br>)<br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span> &#123;<br>cfg := elasticsearch.Config&#123;<br>Addresses: []<span class="hljs-type">string</span>&#123;<br><span class="hljs-string">&quot;http://127.0.0.1:9200&quot;</span>,<br>&#125;,<br>Username: <span class="hljs-string">&quot;elastic&quot;</span>,<br>Password: <span class="hljs-string">&quot;123456&quot;</span>,<br>&#125;<br>es, err := elasticsearch.NewClient(cfg)<br><span class="hljs-keyword">if</span> err != <span class="hljs-literal">nil</span> &#123;<br>log.Fatalf(<span class="hljs-string">&quot;Error creating the client: %s&quot;</span>, err)<br>&#125;<br>res, err := es.Info()<br><span class="hljs-keyword">if</span> err != <span class="hljs-literal">nil</span> &#123;<br>log.Fatalf(<span class="hljs-string">&quot;Error getting response: %s&quot;</span>, err)<br>&#125;<br><span class="hljs-keyword">defer</span> res.Body.Close()<br>fmt.Println(<span class="hljs-string">&quot;connect to es success&quot;</span>)<br><span class="hljs-comment">// 新增</span><br>add := add(es)<br>fmt.Println(<span class="hljs-string">&quot;新增：&quot;</span>, add)<br><span class="hljs-comment">// 查询</span><br>query := query(es)<br>fmt.Println(<span class="hljs-string">&quot;query:&quot;</span>, query.String())<br><span class="hljs-comment">//删除</span><br>deltete := <span class="hljs-built_in">delete</span>(es)<br>fmt.Println(<span class="hljs-string">&quot;query:&quot;</span>, deltete)<br>&#125;<br><br><span class="hljs-comment">// 新增</span><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">add</span><span class="hljs-params">(es *elasticsearch.Client)</span></span> *esapi.Response &#123;<br>add, err := es.Index(<br><span class="hljs-string">&quot;test&quot;</span>,<br>strings.NewReader(<span class="hljs-string">`&#123;&quot;title&quot; : &quot;hello word&quot;&#125;`</span>),<br>es.Index.WithRefresh(<span class="hljs-string">&quot;true&quot;</span>),<br>es.Index.WithPretty(),<br>es.Index.WithFilterPath(<span class="hljs-string">&quot;result&quot;</span>, <span class="hljs-string">&quot;_id&quot;</span>),<br>)<br><span class="hljs-keyword">if</span> err != <span class="hljs-literal">nil</span> &#123;<br><span class="hljs-built_in">panic</span>(err)<br>&#125;<br><span class="hljs-keyword">return</span> add<br>&#125;<br><br><span class="hljs-comment">// 查询</span><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">query</span><span class="hljs-params">(es *elasticsearch.Client)</span></span> *esapi.Response &#123;<br><br><span class="hljs-keyword">var</span> buf bytes.Buffer<br>where := <span class="hljs-keyword">map</span>[<span class="hljs-type">string</span>]<span class="hljs-keyword">interface</span>&#123;&#125;&#123;<br><span class="hljs-string">&quot;query&quot;</span>: <span class="hljs-keyword">map</span>[<span class="hljs-type">string</span>]<span class="hljs-keyword">interface</span>&#123;&#125;&#123;<br><span class="hljs-string">&quot;match&quot;</span>: <span class="hljs-keyword">map</span>[<span class="hljs-type">string</span>]<span class="hljs-keyword">interface</span>&#123;&#125;&#123;<br><span class="hljs-string">&quot;title&quot;</span>: <span class="hljs-string">&quot;hello word&quot;</span>,<br>&#125;,<br>&#125;,<br>&#125;<br><span class="hljs-keyword">if</span> err := json.NewEncoder(&amp;buf).Encode(where); err != <span class="hljs-literal">nil</span> &#123;<br>log.Fatalf(<span class="hljs-string">&quot;Error encoding query: %s&quot;</span>, err)<br>&#125;<br>query, err := es.Search(<br>es.Search.WithContext(context.Background()),<br>es.Search.WithIndex(<span class="hljs-string">&quot;test&quot;</span>),<br>es.Search.WithBody(&amp;buf),<br>es.Search.WithTrackTotalHits(<span class="hljs-literal">true</span>),<br>es.Search.WithPretty(),<br>)<br><span class="hljs-keyword">if</span> err != <span class="hljs-literal">nil</span> &#123;<br><span class="hljs-built_in">panic</span>(err)<br>&#125;<br><span class="hljs-keyword">return</span> query<br>&#125;<br><br><span class="hljs-comment">// 删除</span><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">delete</span><span class="hljs-params">(es *elasticsearch.Client)</span></span> *esapi.Response &#123;<br><span class="hljs-comment">// 删除test索引下id=dae5NoYBvw08KezVlFPX</span><br><span class="hljs-built_in">delete</span>, err := es.Delete(<span class="hljs-string">&quot;test&quot;</span>, <span class="hljs-string">&quot;dae5NoYBvw08KezVlFPX&quot;</span>)<br><span class="hljs-keyword">if</span> err != <span class="hljs-literal">nil</span> &#123;<br><span class="hljs-built_in">panic</span>(err)<br>&#125;<br><span class="hljs-keyword">return</span> <span class="hljs-built_in">delete</span><br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Docker</category>
      
      <category>ELK</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Docker</tag>
      
      <tag>PHP</tag>
      
      <tag>Go</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Dockerfile生成PHP7.4+Nginx</title>
    <link href="/2023/05/04/dockerfiles/"/>
    <url>/2023/05/04/dockerfiles/</url>
    
    <content type="html"><![CDATA[<h3 id="拉取"><a href="#拉取" class="headerlink" title="拉取"></a>拉取</h3><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">git <span class="hljs-keyword">clone</span> <span class="hljs-title">git</span>@github.com:code-lives/dockerfile.git<br></code></pre></td></tr></table></figure><h3 id="版本说明-test"><a href="#版本说明-test" class="headerlink" title="版本说明(test)"></a>版本说明(test)</h3><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">debian</span> 系统<br><span class="hljs-attribute">php</span> <span class="hljs-number">7</span>.<span class="hljs-number">4</span><br><span class="hljs-attribute">nginx</span><br><span class="hljs-attribute">supervisor</span> 防止 nginx和php挂掉的守护进程<br><br></code></pre></td></tr></table></figure><h3 id="生成镜像"><a href="#生成镜像" class="headerlink" title="生成镜像"></a>生成镜像</h3><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">docker</span> build -f Dockerfile -t test:<span class="hljs-number">1</span>.<span class="hljs-number">0</span>  .<br></code></pre></td></tr></table></figure><h3 id="启动容器和项目访问"><a href="#启动容器和项目访问" class="headerlink" title="启动容器和项目访问"></a>启动容器和项目访问</h3><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">1</span>.先修改 docker-compose.yml 设置本地对应的项目目录到容器<br><br><br><span class="hljs-attribute">2</span>.启动容器 【记得在当前目录执行 因为你得有Dockerfile文件】<br>  <span class="hljs-attribute">docker</span>-compose up -d<br><br><span class="hljs-attribute">3</span>.关闭容器<br> <span class="hljs-attribute">docker</span>-compose down<br><br><span class="hljs-attribute">4</span>.本地项目挂载到容器<br> <span class="hljs-attribute">127</span>.<span class="hljs-number">0</span>.<span class="hljs-number">0</span>.<span class="hljs-number">1</span> 直接访问<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>Docker</tag>
      
      <tag>PHP</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>百度敏感词图检测</title>
    <link href="/2023/05/04/sensitive-words/"/>
    <url>/2023/05/04/sensitive-words/</url>
    
    <content type="html"><![CDATA[<h1 id="百度智能云-敏感字检测"><a href="#百度智能云-敏感字检测" class="headerlink" title="百度智能云 敏感字检测"></a>百度智能云 敏感字检测</h1><p><a href="https://cloud.baidu.com/doc/ANTIPORN/s/Rk3h6xb3i">https://cloud.baidu.com/doc/ANTIPORN/s/Rk3h6xb3i</a></p><h3 id="config"><a href="#config" class="headerlink" title="config"></a>config</h3><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs dart">$config = [<br>    <span class="hljs-string">&#x27;client_id&#x27;</span> =&gt; <span class="hljs-string">&#x27;&#x27;</span>,<br>    <span class="hljs-string">&#x27;client_secret&#x27;</span> =&gt; <span class="hljs-string">&#x27;&#x27;</span>,<br>];<br></code></pre></td></tr></table></figure><h3 id="获取-Token"><a href="#获取-Token" class="headerlink" title="获取 Token"></a>获取 Token</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$token</span> = <span class="hljs-title class_">\Baidu\Sensitive\Words</span>::<span class="hljs-title function_ invoke__">getInstance</span>()-&gt;<span class="hljs-title function_ invoke__">config</span>(<span class="hljs-variable">$config</span>)-&gt;<span class="hljs-title function_ invoke__">getToken</span>();<br><span class="hljs-keyword">echo</span> <span class="hljs-variable">$token</span>[<span class="hljs-string">&#x27;access_token&#x27;</span>];<span class="hljs-keyword">die</span>;<br></code></pre></td></tr></table></figure><h3 id="检测文本敏感字"><a href="#检测文本敏感字" class="headerlink" title="检测文本敏感字"></a>检测文本敏感字</h3><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs elixir"><span class="hljs-variable">$data</span> = \<span class="hljs-title class_">Baidu</span>\<span class="hljs-title class_">Sensitive</span>\<span class="hljs-title class_">Words</span>::getInstance()-&gt;config(<span class="hljs-variable">$config</span>)-&gt;ckContent(<span class="hljs-variable">$token</span>, <span class="hljs-string">&quot;文本内容&quot;</span>);<br></code></pre></td></tr></table></figure><h3 id="检测图片"><a href="#检测图片" class="headerlink" title="检测图片"></a>检测图片</h3><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs elixir"><span class="hljs-variable">$data</span> = \<span class="hljs-title class_">Baidu</span>\<span class="hljs-title class_">Sensitive</span>\<span class="hljs-title class_">Words</span>::getInstance()-&gt;config(<span class="hljs-variable">$config</span>)-&gt;ckImage(<span class="hljs-variable">$token</span>, <span class="hljs-variable">$image</span>);<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Composer</category>
      
      <category>PHP</category>
      
      <category>敏感词图检测</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Composer</tag>
      
      <tag>PHP</tag>
      
      <tag>百度敏感词图</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>k8s的yml编写</title>
    <link href="/2023/05/04/k8s-yml/"/>
    <url>/2023/05/04/k8s-yml/</url>
    
    <content type="html"><![CDATA[<h1 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h1><h3 id="服务器鉴权-把公司镜像服务地址-账号-密码绑定到-k8s"><a href="#服务器鉴权-把公司镜像服务地址-账号-密码绑定到-k8s" class="headerlink" title="服务器鉴权 [把公司镜像服务地址+账号+密码绑定到 k8s]"></a>服务器鉴权 [把公司镜像服务地址+账号+密码绑定到 k8s]</h3><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">kubectl create secret docker-registry lsbb-reg <span class="hljs-attr">--docker-server</span>=registry<span class="hljs-selector-class">.cn-beijing</span><span class="hljs-selector-class">.aliyuncs</span><span class="hljs-selector-class">.com</span> <span class="hljs-attr">--docker-username</span>=<span class="hljs-selector-attr">[$Username]</span> <span class="hljs-attr">--docker-password</span>=<span class="hljs-selector-attr">[$Password]</span> <span class="hljs-attr">--docker-email</span>=<span class="hljs-selector-attr">[$Email]</span><br></code></pre></td></tr></table></figure><h3 id="ssl-证书"><a href="#ssl-证书" class="headerlink" title="ssl 证书"></a>ssl 证书</h3><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs n1ql">kubectl <span class="hljs-keyword">create</span> secret tls 【自定义名称】 --<span class="hljs-keyword">key</span> 【证书<span class="hljs-keyword">key</span>】 --cert 【证书pem】 【<span class="hljs-keyword">namespace</span>】<br></code></pre></td></tr></table></figure><h3 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h3><figure class="highlight sqf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sqf">kubectl <span class="hljs-built_in">get</span> pod<br>kubectl <span class="hljs-built_in">exec</span> -it pod名字 sh<br>kubectl <span class="hljs-built_in">apply</span> -f deployment.yml<br></code></pre></td></tr></table></figure><h3 id="pod-扩展数量"><a href="#pod-扩展数量" class="headerlink" title="pod 扩展数量"></a>pod 扩展数量</h3><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">kubectl scale deployment pod名称 <span class="hljs-attribute">--replicas</span>=100<br></code></pre></td></tr></table></figure><h3 id="yml-更新"><a href="#yml-更新" class="headerlink" title="yml 更新"></a>yml 更新</h3><figure class="highlight coq"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs coq">kubectl create -f deployment.yml --dry-run=client -o yaml |<span class="hljs-type">kubectl</span> <span class="hljs-built_in">apply</span>  -f -<br></code></pre></td></tr></table></figure><h3 id="启动-pod"><a href="#启动-pod" class="headerlink" title="启动 pod"></a>启动 pod</h3><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs dts"><span class="hljs-symbol">apiVersion:</span> apps/v1<br><span class="hljs-symbol">kind:</span> Deployment<br><span class="hljs-symbol">metadata:</span><br><span class="hljs-symbol">  name:</span> app-release<br><span class="hljs-symbol">  namespace:</span> release<br><span class="hljs-symbol">spec:</span><br><span class="hljs-symbol">  replicas:</span> <span class="hljs-number">1</span> <span class="hljs-meta"># 启动几个pod</span><br><span class="hljs-symbol">  selector:</span><br><span class="hljs-symbol">    matchLabels:</span><br><span class="hljs-symbol">      app:</span> app-release<br><span class="hljs-symbol">  template:</span><br><span class="hljs-symbol">    metadata:</span><br><span class="hljs-symbol">      labels:</span><br><span class="hljs-symbol">        app:</span> app-release <span class="hljs-meta">#  pod的名称 对应Service 下面app-name</span><br><span class="hljs-symbol">    spec:</span><br><span class="hljs-symbol">      containers:</span><br>        - name: app-release<br><span class="hljs-symbol">          image:</span> nginx <span class="hljs-comment">//容器的路径+版本 docker pull nginx:1.1 或者 某个容器库</span><br><span class="hljs-symbol">          imagePullPolicy:</span> <span class="hljs-string">&quot;Always&quot;</span><br><span class="hljs-symbol">          ports:</span><br>            - containerPort: <span class="hljs-number">80</span><br></code></pre></td></tr></table></figure><h3 id="Service-对外暴露-配置"><a href="#Service-对外暴露-配置" class="headerlink" title="Service 对外暴露 配置"></a>Service 对外暴露 配置</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">v1</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">Service</span><br><span class="hljs-attr">metadata:</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">app-release</span><br>  <span class="hljs-attr">namespace:</span> <span class="hljs-string">release</span><br><span class="hljs-attr">spec:</span><br>  <span class="hljs-attr">selector:</span><br>    <span class="hljs-attr">app:</span> <span class="hljs-string">app-release</span> <span class="hljs-comment"># 对应的app-name</span><br>  <span class="hljs-attr">ports:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">protocol:</span> <span class="hljs-string">TCP</span><br>      <span class="hljs-attr">port:</span> <span class="hljs-number">80</span><br>      <span class="hljs-attr">targetPort:</span> <span class="hljs-number">80</span> <span class="hljs-comment"># 容器的端口</span><br></code></pre></td></tr></table></figure><h3 id="Ingress-网络配置"><a href="#Ingress-网络配置" class="headerlink" title="Ingress 网络配置"></a>Ingress 网络配置</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">networking.k8s.io/v1</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">Ingress</span><br><span class="hljs-attr">metadata:</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">app-release</span><br>  <span class="hljs-attr">namespace:</span> <span class="hljs-string">release</span><br><span class="hljs-attr">spec:</span><br>  <span class="hljs-attr">rules:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">host:</span> <span class="hljs-string">www.baidu.com</span><br>      <span class="hljs-attr">http:</span><br>        <span class="hljs-attr">paths:</span><br>          <span class="hljs-bullet">-</span> <span class="hljs-attr">path:</span> <span class="hljs-string">/</span><br>            <span class="hljs-attr">pathType:</span> <span class="hljs-string">Prefix</span><br>            <span class="hljs-attr">backend:</span><br>              <span class="hljs-attr">service:</span><br>                <span class="hljs-attr">name:</span> <span class="hljs-string">app-release</span> <span class="hljs-comment"># Service下面 metadata-&gt;name</span><br>                <span class="hljs-attr">port:</span><br>                  <span class="hljs-attr">number:</span> <span class="hljs-number">80</span>  <span class="hljs-comment"># Service下面 metadata-&gt;port</span><br>  <span class="hljs-attr">tls:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">hosts:</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-string">www.baidu.com</span><br>      <span class="hljs-attr">secretName:</span> <span class="hljs-string">app-release</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>K8S</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Docker</tag>
      
      <tag>K8S</tag>
      
      <tag>Yml</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Redis知识</title>
    <link href="/2023/05/03/redis-doc/"/>
    <url>/2023/05/03/redis-doc/</url>
    
    <content type="html"><![CDATA[<h1 id="要在-PHP-中使用-Redis-分布式，需要以下步骤："><a href="#要在-PHP-中使用-Redis-分布式，需要以下步骤：" class="headerlink" title="要在 PHP 中使用 Redis 分布式，需要以下步骤："></a>要在 PHP 中使用 Redis 分布式，需要以下步骤：</h1><h3 id="安装-Redis-扩展"><a href="#安装-Redis-扩展" class="headerlink" title="安装 Redis 扩展"></a>安装 Redis 扩展</h3><p>首先，需要安装 Redis 扩展。在 Ubuntu 或 Debian 系统中，可以使用以下命令进行安装：</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">sudo apt-<span class="hljs-keyword">get</span> <span class="hljs-keyword">update</span><br>sudo apt-<span class="hljs-keyword">get</span> install php-redis redis-<span class="hljs-keyword">server</span><br></code></pre></td></tr></table></figure><span id="more"></span><h3 id="连接-Redis-集群"><a href="#连接-Redis-集群" class="headerlink" title="连接 Redis 集群"></a>连接 Redis 集群</h3><p>使用 Redis 集群需要连接到多个 Redis 实例。可以使用 Redis 扩展提供的 RedisCluster 类来连接到 Redis 集群。可以在 PHP 代码中使用以下代码连接到 Redis 集群：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$redis</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">RedisCluster</span>(<span class="hljs-literal">null</span>, [<br>    <span class="hljs-string">&#x27;redis://127.0.0.1:7000&#x27;</span>,<br>    <span class="hljs-string">&#x27;redis://127.0.0.1:7001&#x27;</span>,<br>    <span class="hljs-string">&#x27;redis://127.0.0.1:7002&#x27;</span>,<br>]);<br></code></pre></td></tr></table></figure><p>在这里，我们传递了 Redis 实例的地址和端口号，这些信息是在启动 Redis 集群时配置的。RedisCluster 类会自动将数据分片到 Redis 集群中的不同节点。</p><p>使用 Redis 命令</p><p>一旦连接到 Redis 集群，就可以使用 Redis 命令来对数据进行操作。例如，可以使用以下代码在 Redis 集群中设置一个键值对：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$redis</span>-&gt;<span class="hljs-title function_ invoke__">set</span>(<span class="hljs-string">&#x27;mykey&#x27;</span>, <span class="hljs-string">&#x27;myvalue&#x27;</span>);<br></code></pre></td></tr></table></figure><p>要从 Redis 集群中获取值，请使用以下代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$value</span> = <span class="hljs-variable">$redis</span>-&gt;<span class="hljs-title function_ invoke__">get</span>(<span class="hljs-string">&#x27;mykey&#x27;</span>);<br></code></pre></td></tr></table></figure><h4 id="这些命令将自动将数据路由到-Redis-集群中的正确节点。"><a href="#这些命令将自动将数据路由到-Redis-集群中的正确节点。" class="headerlink" title="这些命令将自动将数据路由到 Redis 集群中的正确节点。"></a>这些命令将自动将数据路由到 Redis 集群中的正确节点。</h4><p>请注意，在使用 Redis 分布式时，需要考虑数据的一致性和可用性。如果一个 Redis 节点出现故障，需要确保集群中的其他节点可以处理数据并保持数据的一致性。</p><h3 id="如何保持数据的一致性？"><a href="#如何保持数据的一致性？" class="headerlink" title="如何保持数据的一致性？"></a>如何保持数据的一致性？</h3><p>在 Redis 分布式环境中，保持数据的一致性是非常重要的，因为数据可能会分散在多个 Redis 节点上。以下是一些可以帮助保持数据一致性的建议：</p><h4 id="使用-Redis-集群"><a href="#使用-Redis-集群" class="headerlink" title="使用 Redis 集群"></a>使用 Redis 集群</h4><p>Redis 集群使用数据分片的方式将数据存储在多个 Redis 节点上。当一个节点出现故障时，集群会自动将数据迁移到其他节点上。这种方式可以确保数据的可用性和一致性。</p><h4 id="使用-Redis-哈希槽（Hash-Slot）"><a href="#使用-Redis-哈希槽（Hash-Slot）" class="headerlink" title="使用 Redis 哈希槽（Hash Slot）"></a>使用 Redis 哈希槽（Hash Slot）</h4><p>Redis 哈希槽是一种将数据分片的方式，它将数据分成固定数量的哈希槽。每个 Redis 节点负责处理一部分哈希槽的数据。这种方式可以确保数据在节点之间的均衡分布，并且如果一个节点出现故障，只有它负责的哈希槽会受到影响。</p><h4 id="使用-Redis-事务"><a href="#使用-Redis-事务" class="headerlink" title="使用 Redis 事务"></a>使用 Redis 事务</h4><p>Redis 事务可以确保一组命令在执行时是原子的，即它们要么全部执行成功，要么全部不执行。使用 Redis 事务可以确保多个命令同时执行，而不会中断或交叉执行，从而保证数据的一致性。</p><h4 id="使用-Redis-锁"><a href="#使用-Redis-锁" class="headerlink" title="使用 Redis 锁"></a>使用 Redis 锁</h4><p>Redis 锁可以确保在给定的时间内只有一个客户端可以访问给定的数据。使用锁可以防止并发访问同一数据，从而确保数据的一致性。</p><h4 id="使用-Redis-主从复制"><a href="#使用-Redis-主从复制" class="headerlink" title="使用 Redis 主从复制"></a>使用 Redis 主从复制</h4><p>Redis 主从复制可以确保在一个 Redis 主节点上进行的写操作会被复制到所有的从节点上。这种方式可以确保数据在所有节点之间的一致性，即使某些节点发生故障。</p><p>总之，保持数据的一致性需要考虑多个方面，包括数据分片、数据迁移、事务、锁和复制等。在使用 Redis 分布式时，需要根据实际情况选择适合的方法来确保数据的一致性。</p><h3 id="redis-锁怎么使用"><a href="#redis-锁怎么使用" class="headerlink" title="redis 锁怎么使用"></a>redis 锁怎么使用</h3><p>在 Redis 中使用锁可以避免并发访问同一资源导致的数据不一致问题。Redis 锁可以使用以下几种方式实现：</p><h4 id="使用-SETNX-命令"><a href="#使用-SETNX-命令" class="headerlink" title="使用 SETNX 命令"></a>使用 SETNX 命令</h4><p>SETNX 命令用于设置一个键值对，如果该键不存在，则设置成功。可以使用 SETNX 命令来实现锁的功能，例如：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$redis</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Redis</span>();<br><span class="hljs-variable">$redis</span>-&gt;<span class="hljs-title function_ invoke__">connect</span>(<span class="hljs-string">&#x27;127.0.0.1&#x27;</span>, <span class="hljs-number">6379</span>);<br><br><span class="hljs-variable">$lock_key</span> = <span class="hljs-string">&#x27;my_lock&#x27;</span>;<br><span class="hljs-variable">$lock_timeout</span> = <span class="hljs-number">10</span>;<br><br><span class="hljs-variable">$lock</span> = <span class="hljs-variable">$redis</span>-&gt;<span class="hljs-title function_ invoke__">setnx</span>(<span class="hljs-variable">$lock_key</span>, <span class="hljs-number">1</span>);<br><span class="hljs-keyword">if</span> (<span class="hljs-variable">$lock</span>) &#123;<br>    <span class="hljs-comment">// 获取锁成功，设置过期时间</span><br>    <span class="hljs-variable">$redis</span>-&gt;<span class="hljs-title function_ invoke__">expire</span>(<span class="hljs-variable">$lock_key</span>, <span class="hljs-variable">$lock_timeout</span>);<br>    <span class="hljs-comment">// 处理业务逻辑</span><br>    <span class="hljs-comment">// ...</span><br>    <span class="hljs-comment">// 释放锁</span><br>    <span class="hljs-variable">$redis</span>-&gt;<span class="hljs-title function_ invoke__">del</span>(<span class="hljs-variable">$lock_key</span>);<br>&#125; <span class="hljs-keyword">else</span> &#123;<br><span class="hljs-comment">// 获取锁失败，等待一段时间后重试</span><br><span class="hljs-title function_ invoke__">usleep</span>(<span class="hljs-number">10000</span>);<br><span class="hljs-comment">// ...</span><br>&#125;<br></code></pre></td></tr></table></figure><p>在这里，首先使用 SETNX 命令尝试获取锁。如果 SETNX 返回 1，则表示获取锁成功，可以执行业务逻辑，然后使用 DEL 命令释放锁。如果 SETNX 返回 0，则表示获取锁失败，等待一段时间后重试。</p><h1 id="使用-Redis-Lua-脚本"><a href="#使用-Redis-Lua-脚本" class="headerlink" title="使用 Redis Lua 脚本"></a>使用 Redis Lua 脚本</h1><p>Redis Lua 脚本可以在 Redis 服务器端执行，可以确保操作的原子性。可以使用 Redis Lua 脚本来实现锁的功能，例如：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$redis</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Redis</span>();<br><span class="hljs-variable">$redis</span>-&gt;<span class="hljs-title function_ invoke__">connect</span>(<span class="hljs-string">&#x27;127.0.0.1&#x27;</span>, <span class="hljs-number">6379</span>);<br><br><span class="hljs-variable">$lock_key</span> = <span class="hljs-string">&#x27;my_lock&#x27;</span>;<br><span class="hljs-variable">$lock_timeout</span> = <span class="hljs-number">10</span>;<br><br><span class="hljs-variable">$script</span> = <span class="hljs-string">&quot;</span><br><span class="hljs-string">if redis.call(&#x27;setnx&#x27;, KEYS[1], 1) == 1 then</span><br><span class="hljs-string">redis.call(&#x27;expire&#x27;, KEYS[1], ARGV[1])</span><br><span class="hljs-string">return 1</span><br><span class="hljs-string">else</span><br><span class="hljs-string">return 0</span><br><span class="hljs-string">end</span><br><span class="hljs-string">&quot;</span>;<br><br><span class="hljs-keyword">while</span> (<span class="hljs-literal">true</span>) &#123;<br><span class="hljs-variable">$result</span> = <span class="hljs-variable">$redis</span>-&gt;<span class="hljs-keyword">eval</span>(<span class="hljs-variable">$script</span>, [<span class="hljs-variable">$lock_key</span>, <span class="hljs-variable">$lock_timeout</span>], <span class="hljs-number">1</span>);<br><span class="hljs-keyword">if</span> (<span class="hljs-variable">$result</span>) &#123;<br>        <span class="hljs-comment">// 获取锁成功，处理业务逻辑</span><br>        <span class="hljs-comment">// ...</span><br>        <span class="hljs-comment">// 释放锁</span><br>        <span class="hljs-variable">$redis</span>-&gt;<span class="hljs-title function_ invoke__">del</span>(<span class="hljs-variable">$lock_key</span>);<br><span class="hljs-keyword">break</span>;<br>&#125; <span class="hljs-keyword">else</span> &#123;<br><span class="hljs-comment">// 获取锁失败，等待一段时间后重试</span><br><span class="hljs-title function_ invoke__">usleep</span>(<span class="hljs-number">10000</span>);<br><span class="hljs-comment">// ...</span><br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>在这里，使用 Redis Lua 脚本尝试获取锁。如果脚本返回 1，则表示获取锁成功，可以执行业务逻辑，然后使用 DEL 命令释放锁。如果脚本返回 0，则表示获取锁失败，等待一段时间后重试。</p><h3 id="使用-Redis-锁需要注意以下几点："><a href="#使用-Redis-锁需要注意以下几点：" class="headerlink" title="使用 Redis 锁需要注意以下几点："></a>使用 Redis 锁需要注意以下几点：</h3><p>确保锁的过期时间足够长，以免在执行业务逻辑时锁过期导致的并发问题。</p><p>在获取锁失败后，需要等待一段时间后重试，避免一直尝试获取锁导致 Redis 的性能问题。</p><p>在使用 SETNX 命令或 Redis Lua 脚本获取锁时，需要确</p><h1 id="laravel-如何使用-redis-锁"><a href="#laravel-如何使用-redis-锁" class="headerlink" title="laravel 如何使用 redis 锁"></a>laravel 如何使用 redis 锁</h1><p>在 Laravel 中使用 Redis 锁可以通过 Illuminate\Support\Facades\Redis facade 类来实现。</p><p>Laravel 的 Redis 锁使用了 predis&#x2F;predis 包提供的 Predis\Client 类来连接 Redis 服务器。</p><p>以下是在 Laravel 中使用 Redis 锁的示例代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">use</span> <span class="hljs-title">Illuminate</span>\<span class="hljs-title">Support</span>\<span class="hljs-title">Facades</span>\<span class="hljs-title">Redis</span>;<br><br><span class="hljs-variable">$lockKey</span> = <span class="hljs-string">&#x27;my_lock&#x27;</span>;<br><span class="hljs-variable">$lockTimeout</span> = <span class="hljs-number">10</span>;<br><br><span class="hljs-variable">$lock</span> = <span class="hljs-title class_">Redis</span>::<span class="hljs-title function_ invoke__">set</span>(<span class="hljs-variable">$lockKey</span>, <span class="hljs-number">1</span>, <span class="hljs-string">&#x27;NX&#x27;</span>, <span class="hljs-string">&#x27;EX&#x27;</span>, <span class="hljs-variable">$lockTimeout</span>);<br><span class="hljs-keyword">if</span> (<span class="hljs-variable">$lock</span>) &#123;<br><span class="hljs-comment">// 获取锁成功，设置过期时间</span><br><span class="hljs-comment">// 处理业务逻辑</span><br><span class="hljs-comment">// ...</span><br><span class="hljs-comment">// 释放锁</span><br><span class="hljs-title class_">Redis</span>::<span class="hljs-title function_ invoke__">del</span>(<span class="hljs-variable">$lockKey</span>);<br>&#125; <span class="hljs-keyword">else</span> &#123;<br><span class="hljs-comment">// 获取锁失败，等待一段时间后重试</span><br><span class="hljs-title function_ invoke__">usleep</span>(<span class="hljs-number">10000</span>);<br><span class="hljs-comment">// ...</span><br>&#125;<br></code></pre></td></tr></table></figure><p>在这里，首先使用 Redis::set() 方法尝试获取锁。如果 Redis::set() 方法返回 true，则表示获取锁成功，可以执行业务逻辑，然后使用 Redis::del() 方法释放锁。如果 Redis::set() 方法返回 false，则表示获取锁失败，等待一段时间后重试。</p><p>需要注意的是，在 Redis::set() 方法中，第三个参数 ‘NX’ 表示只有在键不存在时才设置键值对，第四个参数 ‘EX’ 表示设置键的过期时间为 $lockTimeout 秒。</p><h1 id="Redis-缓存击穿"><a href="#Redis-缓存击穿" class="headerlink" title="Redis 缓存击穿"></a>Redis 缓存击穿</h1><p>Redis 缓存击穿是指缓存中不存在的数据，而对这个数据的请求量很大，导致请求直接打到数据库上，从而造成数据库压力过</p><h3 id="设置热点数据永远不过期"><a href="#设置热点数据永远不过期" class="headerlink" title="设置热点数据永远不过期"></a>设置热点数据永远不过期</h3><p>热点数据是指访问频率高的数据，可以将其缓存时间设置为永久有效。这样就能够保证即使缓存失效，Redis 也能够从数据库中获取数据并重新放入缓存中。</p><h3 id="布隆过滤器"><a href="#布隆过滤器" class="headerlink" title="布隆过滤器"></a>布隆过滤器</h3><p>布隆过滤器可以用于快速判断某个数据是否存在于缓存中。如果布隆过滤器判断数据不存在于缓存中，则不会向数据库发出查询请求，从而减轻数据库的压力。如果布隆过滤器判断数据存在于缓存中，则直接返回缓存中的数据。</p><h3 id="互斥锁"><a href="#互斥锁" class="headerlink" title="互斥锁"></a>互斥锁</h3><p>使用互斥锁可以保证同时只有一个线程去查询数据库，其他线程需要等待查询结果。如果在等待查询结果的过程中缓存中已经存在数据，那么等待的线程就可以直接从缓存中获取数据。</p><h3 id="缓存预热"><a href="#缓存预热" class="headerlink" title="缓存预热"></a>缓存预热</h3><p>缓存预热是指在系统启动时，将一些常用的数据提前加载到缓存中，这样可以避免在用户请求到来时，缓存中没有数据，需要查询数据库的情况。缓存预热可以通过定时任务或者在系统启动时自动加载的方式实现。</p><h3 id="数据库限流"><a href="#数据库限流" class="headerlink" title="数据库限流"></a>数据库限流</h3><p>在缓存击穿发生时，数据库会承受大量的请求，可能会导致数据库宕机。为了避免这种情况的发生，可以在数据库层面设置限流，限制每个 IP 的最大请求量，以减轻数据库的压力。</p><p>总之，解决 Redis 缓存击穿问题的方法是多种多样的，可以根据具体情况选择合适的方法。</p><h1 id="缓存穿透"><a href="#缓存穿透" class="headerlink" title="缓存穿透"></a>缓存穿透</h1><p>缓存穿透是指访问缓存中不存在的数据，而这些数据又不存在于数据库中，导致每次请求都会直接打到数据库上，从而造成数据库压力过大。<br>缓存穿透可能会因为缓存中不存在的数据被频繁请求而导致应用程序的性能下降甚至崩溃。常见的缓存穿透攻击是利用请求中的参数进行攻击，攻击者可以通过恶意构造参数，使得每个请求都不命中缓存，最终导致缓存穿透。</p><h3 id="设置缓存空对象"><a href="#设置缓存空对象" class="headerlink" title="设置缓存空对象"></a>设置缓存空对象</h3><p>如果查询到某个数据不存在于数据库中，可以将这个数据的缓存设置为空对象，这样在下一次请求时，就能够直接从缓存中获取数据，而不需要查询数据库。</p><h3 id="布隆过滤器-1"><a href="#布隆过滤器-1" class="headerlink" title="布隆过滤器"></a>布隆过滤器</h3><p>布隆过滤器可以用于快速判断某个数据是否存在于缓存中，如果数据不存在于缓存中，则直接返回，不会向数据库发出查询请求。</p><h3 id="缓存预热-1"><a href="#缓存预热-1" class="headerlink" title="缓存预热"></a>缓存预热</h3><p>缓存预热是指在系统启动时，将一些常用的数据提前加载到缓存中，这样可以避免在用户请求到来时，缓存中没有数据，需要查询数据库的情况。缓存预热可以通过定时任务或者在系统启动时自动加载的方式实现。</p><h3 id="限制用户请求参数"><a href="#限制用户请求参数" class="headerlink" title="限制用户请求参数"></a>限制用户请求参数</h3><p>可以对用户请求的参数进行限制，比如只接受数值类型的参数或者进行数据格式的校验。这样就能够避免攻击者通过恶意构造参数来攻击应用程序。</p><h3 id="数据库层面的限流"><a href="#数据库层面的限流" class="headerlink" title="数据库层面的限流"></a>数据库层面的限流</h3><p>在缓存穿透发生时，数据库会承受大量的请求，可能会导致数据库宕机。为了避免这种情况的发生，可以在数据库层面设置限流，限制每个 IP 的最大请求量，以减轻数据库的压力。</p><h1 id="缓存雪崩"><a href="#缓存雪崩" class="headerlink" title="缓存雪崩"></a>缓存雪崩</h1><p>缓存雪崩是指在使用缓存系统时，由于缓存服务器或系统故障或重启等原因，导致缓存中的大量数据失效或者同时失效，导致大量请求直接访问数据库或后端系统，造成数据库或后端系统压力骤增，甚至导致系统崩溃的现象。</p><h2 id="缓存雪崩的原因主要有以下几点："><a href="#缓存雪崩的原因主要有以下几点：" class="headerlink" title="缓存雪崩的原因主要有以下几点："></a>缓存雪崩的原因主要有以下几点：</h2><p>缓存服务器宕机：当缓存服务器宕机时，所有的请求都将直接访问后端系统，导致后端系统压力骤增。</p><p>缓存数据过期：当缓存数据的过期时间相同或者相近，且在某一时刻都失效时，会导致大量的请求直接访问后端系统，导致系统压力骤增。</p><p>缓存数据集中在某个时间段访问：当某个热点数据集中在某个时间段访问时，会导致大量的请求直接访问后端系统，导致系统压力骤增。</p><h3 id="设置合理的缓存过期时间"><a href="#设置合理的缓存过期时间" class="headerlink" title="设置合理的缓存过期时间"></a>设置合理的缓存过期时间</h3><p>缓存过期时间应尽量分散，避免出现同时失效的情况，同时应考虑业务数据的实际情况来设置合理的过期时间。</p><h3 id="加入缓存预热机制"><a href="#加入缓存预热机制" class="headerlink" title="加入缓存预热机制"></a>加入缓存预热机制</h3><p>在系统启动或低峰期，提前将数据加载到缓存中，避免高峰期缓存数据的集中失效。</p><h3 id="分布式缓存集群"><a href="#分布式缓存集群" class="headerlink" title="分布式缓存集群"></a>分布式缓存集群</h3><p>使用多个缓存服务器组成缓存集群，提高系统的可用性和容错性，避免单点故障。</p><h3 id="限流降级"><a href="#限流降级" class="headerlink" title="限流降级"></a>限流降级</h3><p>当缓存失效时，可以采用限流降级等机制，避免大量请求直接访问后端系统，导致系统压力骤增。</p><h3 id="监控预警"><a href="#监控预警" class="headerlink" title="监控预警"></a>监控预警</h3><p>对缓存系统进行监控，及时发现缓存失效或者异常情况，采取相应的应对措施，避免对系统造成影响。</p><h1 id="布隆过滤器-2"><a href="#布隆过滤器-2" class="headerlink" title="布隆过滤器"></a>布隆过滤器</h1><p>布隆过滤器是一种快速判断一个元素是否存在于一个集合中的算法，它的原理是将每个元素通过多个哈希函数映射到一个位图中的多个位上，如果这些位都被设置为 1，则说明这个元素可能存在于集合中，如果任何一个位为 0，则说明这个元素一定不存在于集合中。布隆过滤器可能会出现误判，即判断某个元素存在于集合中，实际上这个元素并不存在于集合中，但误判的概率很小，可以通过适当增加哈希函数的个数和位图的大小来降低误判率。</p><h3 id="创建"><a href="#创建" class="headerlink" title="创建"></a>创建</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">use</span> <span class="hljs-title">Illuminate</span>\<span class="hljs-title">Support</span>\<span class="hljs-title">Facades</span>\<span class="hljs-title">Redis</span>;<br><br><span class="hljs-comment">// 创建名为 myfilter 的布隆过滤器，可以容纳 1000 个元素，误判率为 0.01</span><br><span class="hljs-title class_">Redis</span>::<span class="hljs-title function_ invoke__">command</span>(<span class="hljs-string">&#x27;BF.RESERVE&#x27;</span>, [<span class="hljs-string">&#x27;myfilter&#x27;</span>, <span class="hljs-string">&#x27;0.01&#x27;</span>, <span class="hljs-string">&#x27;1000&#x27;</span>]);<br><br></code></pre></td></tr></table></figure><h3 id="添加元素"><a href="#添加元素" class="headerlink" title="添加元素"></a>添加元素</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">use</span> <span class="hljs-title">Illuminate</span>\<span class="hljs-title">Support</span>\<span class="hljs-title">Facades</span>\<span class="hljs-title">Redis</span>;<br><br><span class="hljs-comment">// 向名为 myfilter 的布隆过滤器中添加元素 foo</span><br><span class="hljs-title class_">Redis</span>::<span class="hljs-title function_ invoke__">command</span>(<span class="hljs-string">&#x27;BF.ADD&#x27;</span>, [<span class="hljs-string">&#x27;myfilter&#x27;</span>, <span class="hljs-string">&#x27;foo&#x27;</span>]);<br></code></pre></td></tr></table></figure><h3 id="查询"><a href="#查询" class="headerlink" title="查询"></a>查询</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">use</span> <span class="hljs-title">Illuminate</span>\<span class="hljs-title">Support</span>\<span class="hljs-title">Facades</span>\<span class="hljs-title">Redis</span>;<br><br><span class="hljs-comment">// 查询元素 foo 是否存在于名为 myfilter 的布隆过滤器中</span><br><span class="hljs-variable">$isExists</span> = <span class="hljs-title class_">Redis</span>::<span class="hljs-title function_ invoke__">command</span>(<span class="hljs-string">&#x27;BF.EXISTS&#x27;</span>, [<span class="hljs-string">&#x27;myfilter&#x27;</span>, <span class="hljs-string">&#x27;foo&#x27;</span>]);<br><br><span class="hljs-keyword">if</span> (<span class="hljs-variable">$isExists</span>) &#123;<br>    <span class="hljs-comment">// 元素存在于布隆过滤器中</span><br>&#125; <span class="hljs-keyword">else</span> &#123;<br>    <span class="hljs-comment">// 元素不存在于布隆过滤器中</span><br>&#125;<br></code></pre></td></tr></table></figure><h3 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h3><p>需要注意的是，删除布隆过滤器将会清空该过滤器中存储的所有元素，因此需要谨慎操作。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">use</span> <span class="hljs-title">Illuminate</span>\<span class="hljs-title">Support</span>\<span class="hljs-title">Facades</span>\<span class="hljs-title">Redis</span>;<br><br><span class="hljs-comment">// 删除名为 myfilter 的布隆过滤器</span><br><span class="hljs-title class_">Redis</span>::<span class="hljs-title function_ invoke__">command</span>(<span class="hljs-string">&#x27;BF.DEL&#x27;</span>, [<span class="hljs-string">&#x27;myfilter&#x27;</span>]);<br></code></pre></td></tr></table></figure><h1 id="RDB-持久化"><a href="#RDB-持久化" class="headerlink" title="RDB 持久化"></a>RDB 持久化</h1><p>RDB 持久化是将 Redis 数据库快照存储到磁盘中。当执行 RDB 持久化时，Redis 将其数据写入一个快照文件中，快照文件是一个压缩过的二进制文件，包含了 Redis 数据库在某个时间点上的所有数据。快照文件可以用于在 Redis 重启时重新加载数据。</p><p>可以通过在 Redis 配置文件中设置 save 指令来配置 RDB 持久化，该指令可以设置 Redis 数据库在指定时间内发生了指定数量的修改，就自动执行一次快照操作。例如，以下配置表示如果 Redis 数据库在 900 秒内发生了至少 1 次修改，则自动执行一次快照操作：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">save <span class="hljs-number">900</span> <span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><h1 id="AOF-持久化"><a href="#AOF-持久化" class="headerlink" title="AOF 持久化"></a>AOF 持久化</h1><p>AOF 持久化是将 Redis 执行的每个写命令记录到磁盘上。当 Redis 重启时，它会读取 AOF 文件中的所有写命令，并重新执行这些命令，从而重新构建数据库状态。AOF 文件是一个文本文件，可以通过查看文件内容来了解 Redis 的写操作历史记录。</p><p>可以通过在 Redis 配置文件中设置 appendonly 指令来启用 AOF 持久化。该指令可以设置 AOF 文件的存储方式，包括 appendfsync always、appendfsync everysec 和 appendfsync no 三种模式。例如，以下配置表示 Redis 每秒钟将 AOF 缓冲区中的所有写命令同步到磁盘上：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php">appendonly yes<br>appendfsync everysec<br></code></pre></td></tr></table></figure><p>综合来说，RDB 持久化更适合用于数据量较大的 Redis 数据库，而 AOF 持久化更适合用于对数据持久化的要求较高的 Redis 数据库。可以根据实际需求来选择持久化方式。同时，还可以通过使用 AOF 和 RDB 持久化的组合方式，来提高 Redis 的数据可靠性和可用性。</p><h1 id="哨兵"><a href="#哨兵" class="headerlink" title="哨兵"></a>哨兵</h1><p>Redis 哨兵（Sentinel）是 Redis 的高可用性解决方案，它用于监控 Redis 实例的运行状态，并在 Redis 实例发生故障时自动进行故障转移，从而保证 Redis 的高可用性。</p><h2 id="Redis-哨兵主要包括以下几个组件："><a href="#Redis-哨兵主要包括以下几个组件：" class="headerlink" title="Redis 哨兵主要包括以下几个组件："></a>Redis 哨兵主要包括以下几个组件：</h2><h3 id="Sentinel-进程"><a href="#Sentinel-进程" class="headerlink" title="Sentinel 进程"></a>Sentinel 进程</h3><p>Sentinel 进程是 Redis 哨兵的核心组件，用于监控 Redis 实例的运行状态，并在 Redis 实例发生故障时进行故障转移。</p><h3 id="Redis-服务器集群"><a href="#Redis-服务器集群" class="headerlink" title="Redis 服务器集群"></a>Redis 服务器集群</h3><p>Redis 服务器集群由多个 Redis 实例组成，其中一个实例作为主节点，其他实例作为从节点。</p><h3 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h3><p>Redis 哨兵的配置文件包含了 Redis 实例和 Sentinel 进程的配置信息。</p><h2 id="Redis-哨兵的工作流程如下"><a href="#Redis-哨兵的工作流程如下" class="headerlink" title="Redis 哨兵的工作流程如下"></a>Redis 哨兵的工作流程如下</h2><p>Sentinel 进程监控 Redis 实例的运行状态，包括主节点和从节点。</p><p>如果 Sentinel 进程发现主节点宕机，它会选择一个从节点作为新的主节点，然后将其他从节点切换到新的主节点上。</p><p>Sentinel 进程会将新的主节点信息广播给其他 Sentinel 进程，并要求它们也切换到新的主节点上。</p><p>当主节点重新启动并重新加入 Redis 集群时，Sentinel 进程会将其作为从节点添加到集群中，从而使其重新成为从节点。</p><p>Sentinel 进程还可以执行自动故障转移、客户端重定向和提供 Redis 集群的监控报告等功能。</p><h4 id="在配置-Redis-哨兵时，需要指定-Sentinel-进程的配置文件、Redis-实例的地址和端口号等信息。配置完成后，可以通过运行-Sentinel-进程来启动-Redis-哨兵，Sentinel-进程会自动执行-Redis-实例的监控和故障转移等操作。"><a href="#在配置-Redis-哨兵时，需要指定-Sentinel-进程的配置文件、Redis-实例的地址和端口号等信息。配置完成后，可以通过运行-Sentinel-进程来启动-Redis-哨兵，Sentinel-进程会自动执行-Redis-实例的监控和故障转移等操作。" class="headerlink" title="在配置 Redis 哨兵时，需要指定 Sentinel 进程的配置文件、Redis 实例的地址和端口号等信息。配置完成后，可以通过运行 Sentinel 进程来启动 Redis 哨兵，Sentinel 进程会自动执行 Redis 实例的监控和故障转移等操作。"></a>在配置 Redis 哨兵时，需要指定 Sentinel 进程的配置文件、Redis 实例的地址和端口号等信息。配置完成后，可以通过运行 Sentinel 进程来启动 Redis 哨兵，Sentinel 进程会自动执行 Redis 实例的监控和故障转移等操作。</h4><h3 id="配置-Redis-哨兵"><a href="#配置-Redis-哨兵" class="headerlink" title="配置 Redis 哨兵"></a>配置 Redis 哨兵</h3><h5 id="编辑配置文件：打开-Redis-的配置文件-redis-conf，在其中添加以下配置项"><a href="#编辑配置文件：打开-Redis-的配置文件-redis-conf，在其中添加以下配置项" class="headerlink" title="编辑配置文件：打开 Redis 的配置文件 redis.conf，在其中添加以下配置项"></a>编辑配置文件：打开 Redis 的配置文件 redis.conf，在其中添加以下配置项</h5><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs php">sentinel monitor mymaster <span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span> <span class="hljs-number">6379</span> <span class="hljs-number">2</span><br>sentinel down-after-milliseconds mymaster <span class="hljs-number">3000</span><br>sentinel parallel-syncs mymaster <span class="hljs-number">1</span><br>sentinel failover-timeout mymaster <span class="hljs-number">180000</span><br></code></pre></td></tr></table></figure><p>这些配置项指定了要监控的 Redis 实例的名称、IP 地址和端口号，以及 Sentinel 进程在发现 Redis 实例宕机后执行故障转移的时间和方式等信息。</p><h5 id="启动-Sentinel-进程：启动-Sentinel-进程需要指定配置文件的路径，例如："><a href="#启动-Sentinel-进程：启动-Sentinel-进程需要指定配置文件的路径，例如：" class="headerlink" title="启动 Sentinel 进程：启动 Sentinel 进程需要指定配置文件的路径，例如："></a>启动 Sentinel 进程：启动 Sentinel 进程需要指定配置文件的路径，例如：</h5><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">redis-sentinel /path/to/sentinel.conf<br></code></pre></td></tr></table></figure><p>运行该命令后，Sentinel 进程会根据配置文件的信息自动执行 Redis 实例的监控和故障转移等操作。</p><h5 id="检查-Sentinel-进程状态：可以使用以下命令检查-Sentinel-进程的状态："><a href="#检查-Sentinel-进程状态：可以使用以下命令检查-Sentinel-进程的状态：" class="headerlink" title="检查 Sentinel 进程状态：可以使用以下命令检查 Sentinel 进程的状态："></a>检查 Sentinel 进程状态：可以使用以下命令检查 Sentinel 进程的状态：</h5><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs php">redis-cli -p <span class="hljs-number">26379</span> sentinel master mymaster<br>redis-cli -p <span class="hljs-number">26379</span> sentinel slaves mymaster<br>redis-cli -p <span class="hljs-number">26379</span> sentinel get-master-addr-by-name mymaster<br><br></code></pre></td></tr></table></figure><h4 id="测试故障转移：为了测试-Sentinel-进程的故障转移功能，可以手动停止-Redis-实例的主节点，然后查看-Sentinel-进程是否能够自动执行故障转移并将从节点升级为主节点。"><a href="#测试故障转移：为了测试-Sentinel-进程的故障转移功能，可以手动停止-Redis-实例的主节点，然后查看-Sentinel-进程是否能够自动执行故障转移并将从节点升级为主节点。" class="headerlink" title="测试故障转移：为了测试 Sentinel 进程的故障转移功能，可以手动停止 Redis 实例的主节点，然后查看 Sentinel 进程是否能够自动执行故障转移并将从节点升级为主节点。"></a>测试故障转移：为了测试 Sentinel 进程的故障转移功能，可以手动停止 Redis 实例的主节点，然后查看 Sentinel 进程是否能够自动执行故障转移并将从节点升级为主节点。</h4>]]></content>
    
    
    
    <tags>
      
      <tag>Redis</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Git 规范</title>
    <link href="/2023/05/03/git/"/>
    <url>/2023/05/03/git/</url>
    
    <content type="html"><![CDATA[<h1 id="生成证书"><a href="#生成证书" class="headerlink" title="生成证书"></a>生成证书</h1><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs excel">ssh-keygen -<span class="hljs-built_in">t</span> rsa -C <span class="hljs-string">&quot;18734351007@163.com&quot;</span><br></code></pre></td></tr></table></figure><h1 id="操作规范"><a href="#操作规范" class="headerlink" title="操作规范"></a>操作规范</h1><h3 id="拉取分支代码"><a href="#拉取分支代码" class="headerlink" title="拉取分支代码"></a>拉取分支代码</h3><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">git <span class="hljs-keyword">clone</span> <span class="hljs-title">xxx</span> -b <span class="hljs-keyword">string</span><br></code></pre></td></tr></table></figure><h3 id="创建本地分支，开发-amp-修复…"><a href="#创建本地分支，开发-amp-修复…" class="headerlink" title="创建本地分支，开发&amp;修复…"></a>创建本地分支，开发&amp;修复…</h3><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs armasm"><span class="hljs-symbol">git</span> checkout -<span class="hljs-keyword">b</span> feat/xxxx<br></code></pre></td></tr></table></figure><h3 id="开发完成后"><a href="#开发完成后" class="headerlink" title="开发完成后"></a>开发完成后</h3><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">git <span class="hljs-built_in">add</span> .<br>git commit -m <span class="hljs-string">&quot;feat: do something&quot;</span> <span class="hljs-comment">--all</span><br>git <span class="hljs-built_in">log</span><span class="hljs-comment"> //查看CommitID</span><br></code></pre></td></tr></table></figure><h3 id="切换测试分支，把改动代码合并"><a href="#切换测试分支，把改动代码合并" class="headerlink" title="切换测试分支，把改动代码合并"></a>切换测试分支，把改动代码合并</h3><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs arcade">git checkout staging<br>git cherry-pick &#123;CommitID&#125;<br>git <span class="hljs-built_in">push</span><br></code></pre></td></tr></table></figure><h3 id="创建-PR"><a href="#创建-PR" class="headerlink" title="创建 PR"></a>创建 PR</h3><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs avrasm">git checkout feat/xxxx<br>git <span class="hljs-keyword">push</span><br><span class="hljs-meta"># push完成之后会看见，合并链接。</span><br></code></pre></td></tr></table></figure><h3 id="commit"><a href="#commit" class="headerlink" title="commit"></a>commit</h3><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs maxima">feat：新功能（<span class="hljs-built_in">feature</span>）<br><span class="hljs-built_in">fix</span>：修补bug<br>docs：文档（documentation）<br><span class="hljs-built_in">style</span>： 格式（不影响代码运行的变动）<br>refactor：重构（即不是新增功能，也不是修改bug的代码变动）<br>test：增加测试<br>chore：构建过程或辅助工具的变动<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Git</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Git</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Docker 部署Redis</title>
    <link href="/2023/05/03/redis/"/>
    <url>/2023/05/03/redis/</url>
    
    <content type="html"><![CDATA[<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs php">version: <span class="hljs-string">&#x27;3.1&#x27;</span><br>services:<br>  redis:<br>    image: redis:<span class="hljs-number">6.2</span><br>    restart: always<br>    container_name: redis <span class="hljs-comment"># redis 容器的名称</span><br>    ports:<br>      - <span class="hljs-string">&quot;6379:6379&quot;</span><br>    volumes:<br>      - <span class="hljs-variable">$PWD</span>/redis/data/:/data<br>      <span class="hljs-comment">#- $PWD/redis/redis.conf:/usr/local/etc/redis/redis.conf # redis.conf https://redis.io/topics/config</span><br>    <span class="hljs-comment">#command:</span><br>      <span class="hljs-comment">#/bin/bash -c &quot;redis-server /usr/local/etc/redis/redis.conf&quot;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Docker</category>
      
      <category>Redis</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Docker</tag>
      
      <tag>Redis</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Docker 部署 Rabbitmq</title>
    <link href="/2023/05/03/rabbitmq/"/>
    <url>/2023/05/03/rabbitmq/</url>
    
    <content type="html"><![CDATA[<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs php">version: <span class="hljs-string">&#x27;3.1&#x27;</span><br>services:<br>  rabbitmq:<br>    image: rabbitmq:<span class="hljs-number">3.7</span>.<span class="hljs-number">7</span>-management<br>    restart: always<br>    container_name: rabbitmq <span class="hljs-comment">#mysql 容器</span><br>    ports:<br>      - <span class="hljs-string">&quot;15672:15672&quot;</span><br>      - <span class="hljs-string">&quot;5672:5672&quot;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Docker</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Docker</tag>
      
      <tag>Rabbitmq</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>jenkins</title>
    <link href="/2023/05/03/jenkins/"/>
    <url>/2023/05/03/jenkins/</url>
    
    <content type="html"><![CDATA[<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs php">version: <span class="hljs-string">&quot;3.1&quot;</span><br>services:<br>  nginx:<br>    restart: always <span class="hljs-comment">#docker 启动这个容器也跟着启动</span><br>    image: jenkins/jenkins:lts-jdk11<br>    container_name: jenkins <span class="hljs-comment">#容器的名称</span><br>    ports:<br>      - <span class="hljs-number">8181</span>:<span class="hljs-number">8080</span><br>      - <span class="hljs-number">50001</span>:<span class="hljs-number">50000</span><br>    volumes:<br>      - <span class="hljs-variable">$PWD</span>/jenkins_home:/<span class="hljs-keyword">var</span>/jenkins_home<br>      - <span class="hljs-variable">$PWD</span>/run/docker.sock:/<span class="hljs-keyword">var</span>/run/docker.sock<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Docker</category>
      
      <category>Jenkins</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Docker</tag>
      
      <tag>Jenkins</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>腾讯Im 加入聊天池 系统发送自定义消息 加入群组 创建群组 获取群成员列表 检测用户是否在加入Im 更改未读状态 拉取聊天记录 设置个人资料</title>
    <link href="/2023/05/03/im/"/>
    <url>/2023/05/03/im/</url>
    
    <content type="html"><![CDATA[<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs armasm"><span class="hljs-symbol">composer</span> <span class="hljs-meta">require</span> <span class="hljs-meta">code</span>-lives/im<br></code></pre></td></tr></table></figure><h1 id="Im"><a href="#Im" class="headerlink" title="Im"></a>Im</h1><p>腾讯 Im 加入聊天池 系统发送自定义消息 加入群组 创建群组 获取群成员列表 检测用户是否在加入 Im 更改未读状态 拉取聊天记录 设置个人资料</p><h2 id="设置参数"><a href="#设置参数" class="headerlink" title="设置参数"></a>设置参数</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs php">im_id      Im 申请的id<br><br>im_key     Im 申请的key<br><br>admin_id   Im 管理员账号【选填】用于发送一些消息。比如 A和B在聊天  拿着A账号给B发送一条消息 或者 创建群组 查询群组等<br><br></code></pre></td></tr></table></figure><h2 id="生成-UserSig"><a href="#生成-UserSig" class="headerlink" title="生成 UserSig"></a>生成 UserSig</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$Im</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Im</span>\api\<span class="hljs-title function_ invoke__">Im</span>(<span class="hljs-variable">$im_id</span>,<span class="hljs-variable">$im_key</span>);<br><span class="hljs-variable">$Im</span>-&gt;<span class="hljs-title function_ invoke__">genUserSig</span>(<span class="hljs-variable">$uid</span>);<br></code></pre></td></tr></table></figure><h2 id="把用户-uid-导入到-Im-的聊天配置中【相当于加入该项目的群】"><a href="#把用户-uid-导入到-Im-的聊天配置中【相当于加入该项目的群】" class="headerlink" title="把用户 uid 导入到 Im 的聊天配置中【相当于加入该项目的群】"></a>把用户 uid 导入到 Im 的聊天配置中【相当于加入该项目的群】</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$Im</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Im</span>\api\<span class="hljs-title function_ invoke__">Im</span>(<span class="hljs-variable">$im_id</span>,<span class="hljs-variable">$im_key</span>,<span class="hljs-variable">$admin_id</span>);<br><span class="hljs-variable">$Im</span>-&gt;<span class="hljs-title function_ invoke__">account_import</span>(<span class="hljs-variable">$uid</span>,<span class="hljs-variable">$nickname</span>,<span class="hljs-variable">$images</span>); <span class="hljs-comment">//用户的uid 姓名 头像</span><br>返回类型 <span class="hljs-literal">true</span>  <span class="hljs-literal">false</span><br></code></pre></td></tr></table></figure><h2 id="设置个人资料"><a href="#设置个人资料" class="headerlink" title="设置个人资料"></a>设置个人资料</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$Im</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Im</span>\api\<span class="hljs-title function_ invoke__">Im</span>(<span class="hljs-variable">$im_id</span>,<span class="hljs-variable">$im_key</span>,<span class="hljs-variable">$admin_id</span>);<br><span class="hljs-variable">$Im</span>-&gt;<span class="hljs-title function_ invoke__">set_info</span>(<span class="hljs-variable">$uid</span>,<span class="hljs-variable">$data</span>); <span class="hljs-comment">//用户的uid 用户字段配置</span><br>返回类型 <span class="hljs-literal">true</span>  <span class="hljs-literal">false</span><br></code></pre></td></tr></table></figure><h2 id="检测用户是否在加入-Im"><a href="#检测用户是否在加入-Im" class="headerlink" title="检测用户是否在加入 Im"></a>检测用户是否在加入 Im</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$Im</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Im</span>\api\<span class="hljs-title function_ invoke__">Im</span>(<span class="hljs-variable">$im_id</span>,<span class="hljs-variable">$im_key</span>,<span class="hljs-variable">$admin_id</span>);<br><span class="hljs-variable">$Im</span>-&gt;<span class="hljs-title function_ invoke__">check_bind</span>(<span class="hljs-variable">$uid</span>); <span class="hljs-comment">//用户uid</span><br>返回类型 <span class="hljs-literal">true</span>  <span class="hljs-literal">false</span><br></code></pre></td></tr></table></figure><h2 id="管理员发送自定义消息-new-的必须带-admin-id"><a href="#管理员发送自定义消息-new-的必须带-admin-id" class="headerlink" title="管理员发送自定义消息[new 的必须带 _admin_id]"></a>管理员发送自定义消息[new 的必须带 _admin_id]</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$Im</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Im</span>\api\<span class="hljs-title function_ invoke__">Im</span>(<span class="hljs-variable">$im_id</span>,<span class="hljs-variable">$im_key</span>,<span class="hljs-variable">$admin_id</span>);<br><span class="hljs-variable">$Im</span>-&gt;<span class="hljs-title function_ invoke__">from_to</span>(<span class="hljs-variable">$from_id</span>,<span class="hljs-variable">$to_id</span>,<span class="hljs-variable">$content</span>);  <span class="hljs-comment">//发送人id 接收人id 内容自定义的数组或字符串</span><br>返回类型 <span class="hljs-literal">true</span>  <span class="hljs-literal">false</span><br></code></pre></td></tr></table></figure><h2 id="设置用户的某个单聊会话的消息全部已读-new-的必须带-admin-id"><a href="#设置用户的某个单聊会话的消息全部已读-new-的必须带-admin-id" class="headerlink" title="设置用户的某个单聊会话的消息全部已读[new 的必须带 _admin_id]"></a>设置用户的某个单聊会话的消息全部已读[new 的必须带 _admin_id]</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$Im</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Im</span>\api\<span class="hljs-title function_ invoke__">Im</span>(<span class="hljs-variable">$im_id</span>,<span class="hljs-variable">$im_key</span>,<span class="hljs-variable">$admin_id</span>);<br><span class="hljs-variable">$Im</span>-&gt;<span class="hljs-title function_ invoke__">msg_read</span>(<span class="hljs-variable">$from_id</span>,<span class="hljs-variable">$to_id</span>);  <span class="hljs-comment">//发送人id 接收人id 内容自定义的数组或字符串</span><br>返回类型 <span class="hljs-literal">true</span>  <span class="hljs-literal">false</span><br></code></pre></td></tr></table></figure><h2 id="查询群组里面有多少人"><a href="#查询群组里面有多少人" class="headerlink" title="查询群组里面有多少人"></a>查询群组里面有多少人</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$Im</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Im</span>\api\<span class="hljs-title function_ invoke__">Im</span>(<span class="hljs-variable">$im_id</span>,<span class="hljs-variable">$im_key</span>,<span class="hljs-variable">$admin_id</span>);<br><span class="hljs-variable">$Im</span>-&gt;<span class="hljs-title function_ invoke__">get_work_list</span>(<span class="hljs-variable">$work_name</span>,<span class="hljs-variable">$offset</span>,<span class="hljs-variable">$limit</span>);  <span class="hljs-comment">//群名称  offset 类似于分页 limit 每页几条</span><br>返回类型 <span class="hljs-keyword">array</span>()  <span class="hljs-literal">false</span><br></code></pre></td></tr></table></figure><h2 id="加入群聊"><a href="#加入群聊" class="headerlink" title="加入群聊"></a>加入群聊</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$Im</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Im</span>\api\<span class="hljs-title function_ invoke__">Im</span>(<span class="hljs-variable">$im_id</span>,<span class="hljs-variable">$im_key</span>,<span class="hljs-variable">$admin_id</span>);<br><span class="hljs-variable">$Im</span>-&gt;<span class="hljs-title function_ invoke__">add_work</span>(<span class="hljs-variable">$work_name</span>,<span class="hljs-variable">$uid</span>);  <span class="hljs-comment">//群名称  用户uid</span><br>返回类型 <span class="hljs-literal">true</span>  <span class="hljs-literal">false</span><br></code></pre></td></tr></table></figure><h2 id="创建群聊"><a href="#创建群聊" class="headerlink" title="创建群聊"></a>创建群聊</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$Im</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Im</span>\api\<span class="hljs-title function_ invoke__">Im</span>(<span class="hljs-variable">$im_id</span>,<span class="hljs-variable">$im_key</span>,<span class="hljs-variable">$admin_id</span>);<br><span class="hljs-variable">$Im</span>-&gt;<span class="hljs-title function_ invoke__">create_work</span>(<span class="hljs-variable">$create_id</span>，<span class="hljs-variable">$group_name</span>);  <span class="hljs-comment">//创建人id  群名称</span><br>返回类型 群id  <span class="hljs-literal">false</span><br></code></pre></td></tr></table></figure><h2 id="消息已读"><a href="#消息已读" class="headerlink" title="消息已读"></a>消息已读</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$Im</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Im</span>\api\<span class="hljs-title function_ invoke__">Im</span>(<span class="hljs-variable">$im_id</span>,<span class="hljs-variable">$im_key</span>,<span class="hljs-variable">$admin_id</span>);<br><span class="hljs-variable">$Im</span>-&gt;<span class="hljs-title function_ invoke__">msg_read</span>(<span class="hljs-variable">$from_id</span>，<span class="hljs-variable">$to_id</span>);  <span class="hljs-comment">//fromy_id 操作用户  to_id 被读用户</span><br>返回类型 群id  <span class="hljs-literal">false</span><br></code></pre></td></tr></table></figure><h2 id="拉取聊天记录"><a href="#拉取聊天记录" class="headerlink" title="拉取聊天记录"></a>拉取聊天记录</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$Im</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Im</span>\api\<span class="hljs-title function_ invoke__">Im</span>(<span class="hljs-variable">$im_id</span>,<span class="hljs-variable">$im_key</span>,<span class="hljs-variable">$admin_id</span>);<br><span class="hljs-variable">$Im</span>-&gt;<span class="hljs-title function_ invoke__">get_history</span>(<span class="hljs-variable">$parm</span>);  <span class="hljs-comment">//$parm[&#x27;ChatType&#x27;]消息类型 $parm[&#x27;MsgTime&#x27;] 时间戳 2021010221=2021年10月1日21时-21时59分记录</span><br>返回类型 群id  <span class="hljs-literal">false</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Composer</category>
      
      <category>PHP</category>
      
      <category>腾讯IM</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Composer</tag>
      
      <tag>PHP</tag>
      
      <tag>腾讯IM</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>腾讯 移动推送 TPNS</title>
    <link href="/2023/05/03/tencent-app-push/"/>
    <url>/2023/05/03/tencent-app-push/</url>
    
    <content type="html"><![CDATA[<p><a href="https://cloud.tencent.com/document/product/548/39059">官方接口文档</a></p><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">composer</span> require code-lives/app-push-tpns <span class="hljs-number">1</span>.<span class="hljs-number">1</span>.<span class="hljs-number">0</span><br></code></pre></td></tr></table></figure><h1 id="配置参数说明"><a href="#配置参数说明" class="headerlink" title="配置参数说明"></a>配置参数说明</h1><blockquote><p>需要配置的参数</p></blockquote><table><thead><tr><th>参数名字</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>appid</td><td>string</td><td>申请的 appid</td></tr><tr><td>secretKey</td><td>string</td><td>申请的 appsecretkey</td></tr><tr><td>environment</td><td>string</td><td>用户指定推送环境，仅限 iOS 平台推送使用 默认 product；推送生产环境；dev 推送开发环境</td></tr></tbody></table><h3 id="Config-Demo"><a href="#Config-Demo" class="headerlink" title="Config Demo"></a>Config Demo</h3><blockquote><p>本地 config 的配置</p></blockquote><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs dart">$config = [<br>    <span class="hljs-string">&#x27;appid&#x27;</span> =&gt; <span class="hljs-string">&#x27;&#x27;</span>,<br>    <span class="hljs-string">&#x27;secretKey&#x27;</span> =&gt; <span class="hljs-string">&#x27;&#x27;</span>,<br>    <span class="hljs-string">&#x27;environment&#x27;</span>=&gt;<span class="hljs-string">&#x27;&#x27;</span><br>];<br></code></pre></td></tr></table></figure><h1 id="全量推送"><a href="#全量推送" class="headerlink" title="全量推送"></a>全量推送</h1><blockquote><p>给所有安装 app 的用户发送消息。</p></blockquote><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs arcade"><span class="hljs-symbol">$co</span>ntent=[<br>    <span class="hljs-string">&#x27;title&#x27;</span>=&gt;<span class="hljs-string">&#x27;标题&#x27;</span>,<br>    <span class="hljs-string">&#x27;content&#x27;</span>=&gt;<span class="hljs-string">&#x27;内容&#x27;</span><br>    ];<br><span class="hljs-symbol">$app</span>_push = <span class="hljs-keyword">new</span> AppPush(<span class="hljs-symbol">$co</span>nfig);<br><span class="hljs-symbol">$app</span>_push-&gt;send_all(<span class="hljs-symbol">$co</span>ntent,<span class="hljs-string">&#x27;notify&#x27;</span>);<br></code></pre></td></tr></table></figure><h1 id="单账号推送或多账号推送"><a href="#单账号推送或多账号推送" class="headerlink" title="单账号推送或多账号推送"></a>单账号推送或多账号推送</h1><blockquote><p>一对一给用户发送消息 或 多个账号发送消息</p></blockquote><table><thead><tr><th>参数名字</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>content</td><td>string</td><td>内容</td></tr><tr><td>account</td><td>array</td><td>根据数量判断 单账号或多账号推送</td></tr><tr><td>message_type</td><td>string</td><td>默认：notify(可不传);notify：通知;message：透传消息&#x2F;静默消息</td></tr></tbody></table><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-variable">$account</span>=[<span class="hljs-string">&#x27;one&#x27;</span>];<span class="hljs-regexp">//</span>单账号推送<br><span class="hljs-variable">$account</span>=[<span class="hljs-string">&#x27;one&#x27;</span>,<span class="hljs-string">&#x27;two&#x27;</span>];<span class="hljs-regexp">//</span>多个账号推送<br><span class="hljs-variable">$app_push</span>-&gt;send_account(<span class="hljs-variable">$content</span>, <span class="hljs-variable">$account</span>,<span class="hljs-variable">$message_type</span>);<br></code></pre></td></tr></table></figure><h1 id="单设备推送或多设备推送"><a href="#单设备推送或多设备推送" class="headerlink" title="单设备推送或多设备推送"></a>单设备推送或多设备推送</h1><blockquote><p>单或多设备推送 传递数量判断</p></blockquote><table><thead><tr><th>参数名字</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>content</td><td>string</td><td>内容</td></tr><tr><td>token</td><td>array</td><td>根据数量判断 单设备或多设备</td></tr><tr><td>message_type</td><td>string</td><td>默认：notify(可不传);notify：通知;message：透传消息&#x2F;静默消息</td></tr></tbody></table><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-variable">$token</span>=[<span class="hljs-string">&#x27;one&#x27;</span>];<span class="hljs-regexp">//</span>单设备推送<br><span class="hljs-variable">$token</span>=[<span class="hljs-string">&#x27;one&#x27;</span>,<span class="hljs-string">&#x27;two&#x27;</span>];<span class="hljs-regexp">//</span>多个设备推送<br><span class="hljs-variable">$app_push</span>-&gt;send_token(<span class="hljs-variable">$content</span>, <span class="hljs-variable">$token</span>,<span class="hljs-variable">$message_type</span>);<br></code></pre></td></tr></table></figure><h1 id="标签推送"><a href="#标签推送" class="headerlink" title="标签推送"></a>标签推送</h1><blockquote><p>tag 字段根据开发文档 tag_items 字段 自定义</p></blockquote><table><thead><tr><th>参数名字</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>content</td><td>string</td><td>内容</td></tr><tr><td>tag</td><td>array</td><td>根据开发文档 tag_items 字段 封装</td></tr><tr><td>message_type</td><td>string</td><td>默认：notify(可不传); notify：通知;message：透传消息&#x2F;静默消息</td></tr></tbody></table><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arcade"><span class="hljs-symbol">$app</span>_push-&gt;send_tag(<span class="hljs-symbol">$co</span>ntent, <span class="hljs-symbol">$tag</span>,<span class="hljs-symbol">$message</span>_type);<br></code></pre></td></tr></table></figure><h1 id="标签绑定与解绑"><a href="#标签绑定与解绑" class="headerlink" title="标签绑定与解绑"></a>标签绑定与解绑</h1><table><thead><tr><th>参数名字</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>operator_type</td><td>int</td><td>类型看官方文档 1-10</td></tr><tr><td>array</td><td>array</td><td>operator_type(1-8) [‘token_list’&#x3D;&gt;] operator_type(9-10) [‘tag_token_list’&#x3D;&gt;]</td></tr><tr><td>tag_array</td><td>array</td><td>operator_type &#x3D; 1,2,3,4,6,7,8 时 [‘tag_list’&#x3D;&gt;] operator_type(9-10)可不传递</td></tr></tbody></table><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">//</span><span class="hljs-number">1</span>-<span class="hljs-number">8</span><br><span class="hljs-variable">$operator_type</span> = <span class="hljs-number">1</span>;<br><span class="hljs-variable">$array</span> = [<span class="hljs-string">&#x27;token_list&#x27;</span> =&gt; []];<br><span class="hljs-variable">$tag_array</span> = [<span class="hljs-string">&#x27;tag_list&#x27;</span> =&gt; []];<br><span class="hljs-variable">$app_push</span>-&gt;set_tag(<span class="hljs-variable">$operator_type</span>, <span class="hljs-variable">$array</span> = [], <span class="hljs-variable">$tag_array</span> = []);<br><br><span class="hljs-regexp">//</span><span class="hljs-number">9</span>-<span class="hljs-number">10</span><br><span class="hljs-variable">$operator_type</span> = <span class="hljs-number">9</span>;<br><span class="hljs-variable">$array</span> = [<span class="hljs-string">&#x27;tag_token_list&#x27;</span> =&gt; []];<br><span class="hljs-variable">$app_push</span>-&gt;set_tag(<span class="hljs-variable">$operator_type</span>, <span class="hljs-variable">$array</span> = []);<br></code></pre></td></tr></table></figure><h1 id="删除标签下所有设备"><a href="#删除标签下所有设备" class="headerlink" title="删除标签下所有设备"></a>删除标签下所有设备</h1><table><thead><tr><th>参数名字</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>tag_list</td><td>array</td><td>待删除标签列表：”tag_list”: [“test_tag_3_Ik0N0”, “test_tag_2_Ik0N0”]</td></tr></tbody></table><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs livescript">$app_push-&gt;delete_tag([<span class="hljs-string">&#x27;tag_list&#x27;</span>=&gt;[]]);<br></code></pre></td></tr></table></figure><h1 id="账号绑定与解绑"><a href="#账号绑定与解绑" class="headerlink" title="账号绑定与解绑"></a>账号绑定与解绑</h1><blockquote><p>array 根据开发文档-&gt;账号相关接口-&gt;账号绑定与解绑</p></blockquote><table><thead><tr><th>参数名字</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>operator_type</td><td>int</td><td>类型看官方文档</td></tr><tr><td>array</td><td>array</td><td>查看文档</td></tr></tbody></table><figure class="highlight sml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sml">$operator_type = <span class="hljs-number">1</span>;<br>$<span class="hljs-built_in">array</span> = [<span class="hljs-symbol">&#x27;account_list&#x27;</span> =&gt; <span class="hljs-literal">[]</span>];<br>$<span class="hljs-built_in">array</span> = [<span class="hljs-symbol">&#x27;token_list&#x27;</span> =&gt; <span class="hljs-literal">[]</span>];<br>$<span class="hljs-built_in">array</span> = [<span class="hljs-symbol">&#x27;token_accounts&#x27;</span> =&gt; <span class="hljs-literal">[]</span>];<br>$app_push-&gt;account_save($operator_type, $<span class="hljs-built_in">array</span>);<br></code></pre></td></tr></table></figure><h1 id="账号查询"><a href="#账号查询" class="headerlink" title="账号查询"></a>账号查询</h1><blockquote><p>array 根据开发文档-&gt;账号相关接口-&gt;账号设备绑定查询</p></blockquote><table><thead><tr><th>参数名字</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>operator_type</td><td>int</td><td>类型看官方文档</td></tr><tr><td>array</td><td>array</td><td>查看文档</td></tr></tbody></table><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs arcade"><span class="hljs-symbol">$operator</span>_type = <span class="hljs-number">1</span>;<br><span class="hljs-symbol">$array</span> = [<span class="hljs-string">&#x27;account_list&#x27;</span> =&gt; []];<br><span class="hljs-symbol">$array</span> = [<span class="hljs-string">&#x27;token_list&#x27;</span> =&gt; []];<br><span class="hljs-symbol">$app</span>_push-&gt;account_query(<span class="hljs-symbol">$operator</span>_type, <span class="hljs-symbol">$array</span>);<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Composer</category>
      
      <category>PHP</category>
      
      <category>APP消息推送</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Composer</tag>
      
      <tag>PHP</tag>
      
      <tag>TPNS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>使用docker 搭建mysql</title>
    <link href="/2023/05/03/docker-mysql/"/>
    <url>/2023/05/03/docker-mysql/</url>
    
    <content type="html"><![CDATA[<h1 id="拉取"><a href="#拉取" class="headerlink" title="拉取"></a>拉取</h1><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">git <span class="hljs-keyword">clone</span> <span class="hljs-title">git</span>@github.com:code-lives/docker-mysql.git<br></code></pre></td></tr></table></figure><h1 id="运行开启"><a href="#运行开启" class="headerlink" title="运行开启"></a>运行开启</h1><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">docker-compose up -d</span><br></code></pre></td></tr></table></figure><h1 id="关闭"><a href="#关闭" class="headerlink" title="关闭"></a>关闭</h1><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">docker-compose down</span><br></code></pre></td></tr></table></figure><h1 id="mysql-进入-mysql-创建一个-test-的远程连接账号-（本地不需要）"><a href="#mysql-进入-mysql-创建一个-test-的远程连接账号-（本地不需要）" class="headerlink" title="mysql 进入 mysql 创建一个 test 的远程连接账号 （本地不需要）"></a>mysql 进入 mysql 创建一个 test 的远程连接账号 （本地不需要）</h1><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">USER</span> <span class="hljs-string">&#x27;test&#x27;</span>@<span class="hljs-string">&#x27;%&#x27;</span> IDENTIFIED <span class="hljs-keyword">WITH</span> mysql_native_password <span class="hljs-keyword">BY</span> <span class="hljs-string">&#x27;123456&#x27;</span>;<br><span class="hljs-keyword">GRANT</span> <span class="hljs-keyword">ALL</span> <span class="hljs-keyword">PRIVILEGES</span> <span class="hljs-keyword">ON</span> *.* <span class="hljs-keyword">TO</span> <span class="hljs-string">&#x27;test&#x27;</span>@<span class="hljs-string">&#x27;%&#x27;</span>;<br>FLUSH <span class="hljs-keyword">PRIVILEGES</span>;<br></code></pre></td></tr></table></figure><h1 id="mysql-远程连接-进入容器创建账号"><a href="#mysql-远程连接-进入容器创建账号" class="headerlink" title="mysql 远程连接(进入容器创建账号)"></a>mysql 远程连接(进入容器创建账号)</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">地址 127.0.0.1<br>端口 3306<br>账号 <span class="hljs-built_in">test</span><br>密码 123456<br></code></pre></td></tr></table></figure><h1 id="数据库导入问题"><a href="#数据库导入问题" class="headerlink" title="数据库导入问题"></a>数据库导入问题</h1><h6 id="数据库字段类型【timestamp】默认值-CURRENT-TIMESTAMP-出现：datetime-value-‘0000-00-00-00-00-00’"><a href="#数据库字段类型【timestamp】默认值-CURRENT-TIMESTAMP-出现：datetime-value-‘0000-00-00-00-00-00’" class="headerlink" title="数据库字段类型【timestamp】默认值 CURRENT_TIMESTAMP 出现：datetime value: ‘0000-00-00 00:00:00’"></a>数据库字段类型【timestamp】默认值 CURRENT_TIMESTAMP 出现：datetime value: ‘0000-00-00 00:00:00’</h6><ol><li>查询</li></ol><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gams">SHOW <span class="hljs-keyword">VARIABLES</span> LIKE <span class="hljs-comment">&#x27;sql_mode%&#x27;</span>;<br></code></pre></td></tr></table></figure><ol start="2"><li>先复制出一份</li></ol><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">删除里面的 NO_ZERO_IN_DATE,NO_ZERO_DATE（每个人的sql_mode 不一样 先查询自己的在替换）<br></code></pre></td></tr></table></figure><ol start="3"><li>结果 mysql 配置文件自行修改【mysqld.cnf】</li></ol><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[mysqld]</span><br><span class="hljs-attr">sql_mode</span>=<span class="hljs-string">&quot;ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION&quot;</span><br><span class="hljs-comment">#sql_mode=&quot;ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION&quot;</span><br></code></pre></td></tr></table></figure><h1 id="每天凌晨一点备份（linux-服务器）-crontab-自行修改-copy-sh-文件路径-和-crontab-路径"><a href="#每天凌晨一点备份（linux-服务器）-crontab-自行修改-copy-sh-文件路径-和-crontab-路径" class="headerlink" title="每天凌晨一点备份（linux 服务器） crontab 自行修改 copy.sh 文件路径 和 crontab 路径"></a>每天凌晨一点备份（linux 服务器） crontab 自行修改 copy.sh 文件路径 和 crontab 路径</h1><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">0 </span><span class="hljs-number">1</span> * * *  /mysql/copy.sh<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Docker</category>
      
      <category>Mysql</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Docker</tag>
      
      <tag>Mysql</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>微信小程序、抖音小程序、百度小程序、支付宝小程序、快手小程序集合（支付、手机号解密、获取Token、模版消息、支付异步通知、退款、订单查询）</title>
    <link href="/2023/05/03/pay/"/>
    <url>/2023/05/03/pay/</url>
    
    <content type="html"><![CDATA[<table><thead><tr><th align="center">第三方</th><th align="center">token</th><th align="center">openid</th><th align="center">支付</th><th align="center">回调</th><th align="center">退款</th><th align="center">订单查询</th><th align="center">解密手机号</th><th align="center">分账</th><th align="center">模版消息</th></tr></thead><tbody><tr><td align="center">微信小程序</td><td align="center">✓</td><td align="center">✓</td><td align="center">✓</td><td align="center">✓</td><td align="center">✓</td><td align="center">✓</td><td align="center">✓</td><td align="center">x</td><td align="center">✓</td></tr><tr><td align="center">百度小程序</td><td align="center">✓</td><td align="center">✓</td><td align="center">✓</td><td align="center">✓</td><td align="center">✓</td><td align="center">✓</td><td align="center">✓</td><td align="center">x</td><td align="center">✓</td></tr><tr><td align="center">抖音小程序</td><td align="center">✓</td><td align="center">✓</td><td align="center">✓</td><td align="center">✓</td><td align="center">✓</td><td align="center">✓</td><td align="center">✓</td><td align="center">✓</td><td align="center">✓</td></tr><tr><td align="center">快手小程序</td><td align="center">✓</td><td align="center">✓</td><td align="center">✓</td><td align="center">✓</td><td align="center">✓</td><td align="center">✓</td><td align="center">✓</td><td align="center">✓</td><td align="center">x</td></tr><tr><td align="center">支付宝小程序</td><td align="center">x</td><td align="center">✓</td><td align="center">✓</td><td align="center">✓</td><td align="center">✓</td><td align="center">✓</td><td align="center">✓</td><td align="center">x</td><td align="center">✓</td></tr><tr><td align="center">微信 h5</td><td align="center">x</td><td align="center">x</td><td align="center">✓</td><td align="center">✓</td><td align="center">✓</td><td align="center">✓</td><td align="center">x</td><td align="center">x</td><td align="center">x</td></tr><tr><td align="center">微信 APP</td><td align="center">x</td><td align="center">✓</td><td align="center">✓</td><td align="center">✓</td><td align="center">✓</td><td align="center">✓</td><td align="center">x</td><td align="center">x</td><td align="center">x</td></tr><tr><td align="center">微信公众号</td><td align="center">x</td><td align="center">x</td><td align="center">✓</td><td align="center">✓</td><td align="center">✓</td><td align="center">✓</td><td align="center">x</td><td align="center">x</td><td align="center">✓</td></tr></tbody></table><h3 id="⚠️-注意"><a href="#⚠️-注意" class="headerlink" title="⚠️ 注意"></a>⚠️ 注意</h3><blockquote><p>金额单位分 100&#x3D;1 元</p></blockquote><blockquote><p>微信支付未使用 APIv3 接口规则</p></blockquote><blockquote><p>返回结果 array 由开发者自行判断</p></blockquote><blockquote><p>抖音小程序由字节小程序转变而来，支持多端（头条、抖音、今日头条等关联应用）</p></blockquote><h3 id="官方文档"><a href="#官方文档" class="headerlink" title="官方文档"></a>官方文档</h3><p><a href="https://pay.weixin.qq.com/wiki/doc/api/wxa/wxa_api.php?chapter=9_1">微信小程序接口文档</a></p><p><a href="https://smartprogram.baidu.com/docs/develop/function/tune_up_2.0/">百度小程序接口文档</a></p><p><a href="https://mp.kuaishou.com/docs/develop/server/epay/interfaceDefinition.html">快手小程序接口文档</a></p><p><a href="https://developer.open-douyin.com/docs/resource/zh-CN/mini-app/introduction/overview/">抖音小程序接口文档</a></p><p><a href="https://opendocs.alipay.com/mini/03l5wn">支付宝小程序接口文档</a></p><h1 id="安装说明"><a href="#安装说明" class="headerlink" title="安装说明"></a>安装说明</h1><pre><code class="hljs">composer require code-lives/applet-pays 5.7</code></pre><h1 id="预下单"><a href="#预下单" class="headerlink" title="预下单"></a>预下单</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-comment">// 第一种使用方法 Factory:: ide 自动提示 Weixin</span><br><span class="hljs-variable">$pay</span>= <span class="hljs-title class_">\Applet\Pay\Factory</span>::<span class="hljs-title function_ invoke__">Weixin</span>()-&gt;<span class="hljs-title function_ invoke__">init</span>(<span class="hljs-variable">$config</span>)-&gt;<span class="hljs-title function_ invoke__">set</span>(<span class="hljs-string">&quot;订单号&quot;</span>,<span class="hljs-string">&quot;金额&quot;</span>,<span class="hljs-string">&quot;描述&quot;</span>)-&gt;<span class="hljs-title function_ invoke__">getParam</span>();<br><br><span class="hljs-comment">// 第二种方法</span><br><span class="hljs-variable">$PayName</span>=<span class="hljs-string">&#x27;Baidu&#x27;</span>;<span class="hljs-comment">//百度</span><br><span class="hljs-variable">$pay</span>= <span class="hljs-title class_">\Applet\Pay\Factory</span>::<span class="hljs-title function_ invoke__">getInstance</span>(<span class="hljs-variable">$PayName</span>)-&gt;<span class="hljs-title function_ invoke__">init</span>(<span class="hljs-variable">$config</span>)-&gt;<span class="hljs-title function_ invoke__">set</span>(<span class="hljs-string">&quot;订单号&quot;</span>,<span class="hljs-string">&quot;金额&quot;</span>,<span class="hljs-string">&quot;描述&quot;</span>)-&gt;<span class="hljs-title function_ invoke__">getParam</span>();<br><br><span class="hljs-variable">$PayName</span>=<span class="hljs-string">&#x27;Byte&#x27;</span>;<span class="hljs-comment">//抖音</span><br><span class="hljs-variable">$pay</span>= <span class="hljs-title class_">\Applet\Pay\Factory</span>::<span class="hljs-title function_ invoke__">getInstance</span>(<span class="hljs-variable">$PayName</span>)-&gt;<span class="hljs-title function_ invoke__">init</span>(<span class="hljs-variable">$config</span>)-&gt;<span class="hljs-title function_ invoke__">set</span>(<span class="hljs-string">&quot;订单号&quot;</span>,<span class="hljs-string">&quot;金额&quot;</span>,<span class="hljs-string">&quot;描述&quot;</span>,<span class="hljs-string">&quot;描述&quot;</span>)-&gt;<span class="hljs-title function_ invoke__">getParam</span>();<br><br><span class="hljs-variable">$PayName</span>=<span class="hljs-string">&#x27;Weixin&#x27;</span>;<span class="hljs-comment">//微信</span><br><span class="hljs-variable">$pay</span>= <span class="hljs-title class_">\Applet\Pay\Factory</span>::<span class="hljs-title function_ invoke__">getInstance</span>(<span class="hljs-variable">$PayName</span>)-&gt;<span class="hljs-title function_ invoke__">init</span>(<span class="hljs-variable">$config</span>)-&gt;<span class="hljs-title function_ invoke__">set</span>(<span class="hljs-string">&quot;订单号&quot;</span>,<span class="hljs-string">&quot;金额&quot;</span>,<span class="hljs-string">&quot;描述&quot;</span>,<span class="hljs-string">&quot;openid&quot;</span>)-&gt;<span class="hljs-title function_ invoke__">getParam</span>();<br><br><span class="hljs-variable">$PayName</span>=<span class="hljs-string">&#x27;Kuaishou&#x27;</span>;<span class="hljs-comment">//快手</span><br><span class="hljs-variable">$pay</span>= <span class="hljs-title class_">\Applet\Pay\Factory</span>::<span class="hljs-title function_ invoke__">getInstance</span>(<span class="hljs-variable">$PayName</span>)-&gt;<span class="hljs-title function_ invoke__">init</span>(<span class="hljs-variable">$config</span>)-&gt;<span class="hljs-title function_ invoke__">set</span>(<span class="hljs-string">&quot;订单号&quot;</span>,<span class="hljs-string">&quot;金额&quot;</span>,<span class="hljs-string">&quot;描述&quot;</span>,<span class="hljs-string">&#x27;openid&#x27;</span>, <span class="hljs-string">&#x27;access_token&#x27;</span>)-&gt;<span class="hljs-title function_ invoke__">getParam</span>();<br><br><span class="hljs-variable">$PayName</span>=<span class="hljs-string">&#x27;Ali&#x27;</span>;<span class="hljs-comment">//支付宝小程序</span><br><span class="hljs-variable">$pay</span>= <span class="hljs-title class_">\Applet\Pay\Factory</span>::<span class="hljs-title function_ invoke__">getInstance</span>(<span class="hljs-variable">$PayName</span>)-&gt;<span class="hljs-title function_ invoke__">init</span>(<span class="hljs-variable">$config</span>)-&gt;<span class="hljs-title function_ invoke__">set</span>(<span class="hljs-string">&quot;订单号&quot;</span>,<span class="hljs-string">&quot;金额&quot;</span>,<span class="hljs-string">&quot;描述&quot;</span>,<span class="hljs-string">&#x27;openid&#x27;</span>)-&gt;<span class="hljs-title function_ invoke__">getParam</span>();<br><br><span class="hljs-variable">$PayName</span>=<span class="hljs-string">&#x27;Weixin&#x27;</span>;<span class="hljs-comment">//微信公众号【appid 和secret 换成公众号的】</span><br><span class="hljs-variable">$pay</span>= <span class="hljs-title class_">\Applet\Pay\Factory</span>::<span class="hljs-title function_ invoke__">getInstance</span>(<span class="hljs-variable">$PayName</span>)-&gt;<span class="hljs-title function_ invoke__">init</span>(<span class="hljs-variable">$config</span>)-&gt;<span class="hljs-title function_ invoke__">set</span>(<span class="hljs-string">&quot;订单号&quot;</span>,<span class="hljs-string">&quot;金额&quot;</span>,<span class="hljs-string">&quot;描述&quot;</span>,<span class="hljs-string">&quot;openid&quot;</span>)-&gt;<span class="hljs-title function_ invoke__">getParam</span>();<br><br><span class="hljs-variable">$PayName</span>=<span class="hljs-string">&#x27;Weixin&#x27;</span>;<span class="hljs-comment">//微信H5【appid 和secret 换成公众号的】</span><br><span class="hljs-variable">$pay</span>= <span class="hljs-title class_">\Applet\Pay\Factory</span>::<span class="hljs-title function_ invoke__">getInstance</span>(<span class="hljs-variable">$PayName</span>)-&gt;<span class="hljs-title function_ invoke__">init</span>(<span class="hljs-variable">$config</span>)-&gt;<span class="hljs-title function_ invoke__">set</span>(<span class="hljs-string">&quot;订单号&quot;</span>,<span class="hljs-string">&quot;金额&quot;</span>,<span class="hljs-string">&quot;描述&quot;</span>)-&gt;<span class="hljs-title function_ invoke__">getH5Param</span>();<br><br><span class="hljs-variable">$PayName</span>=<span class="hljs-string">&#x27;Weixin&#x27;</span>;<span class="hljs-comment">//微信APP (没有openid)</span><br><span class="hljs-variable">$pay</span>= <span class="hljs-title class_">\Applet\Pay\Factory</span>::<span class="hljs-title function_ invoke__">getInstance</span>(<span class="hljs-variable">$PayName</span>)-&gt;<span class="hljs-title function_ invoke__">init</span>(<span class="hljs-variable">$config</span>)-&gt;<span class="hljs-title function_ invoke__">set</span>(<span class="hljs-string">&quot;订单号&quot;</span>,<span class="hljs-string">&quot;金额&quot;</span>,<span class="hljs-string">&quot;描述&quot;</span>)-&gt;<span class="hljs-title function_ invoke__">getParam</span>();<br><br></code></pre></td></tr></table></figure><h1 id="百度小程序"><a href="#百度小程序" class="headerlink" title="百度小程序"></a>百度小程序</h1><h3 id="Config"><a href="#Config" class="headerlink" title="Config"></a>Config</h3><table><thead><tr><th>参数名字</th><th>类型</th><th>必须</th><th>说明</th></tr></thead><tbody><tr><td>appkey</td><td>string</td><td>是</td><td>百度小程序 appkey</td></tr><tr><td>payappKey</td><td>string</td><td>是</td><td>百度小程序支付 appkey</td></tr><tr><td>appSecret</td><td>string</td><td>是</td><td>百度小程序 aapSecret</td></tr><tr><td>dealId</td><td>int</td><td>是</td><td>百度小程序支付凭证</td></tr><tr><td>isSkipAudit</td><td>int</td><td>是</td><td>默认为 0； 0：不跳过开发者业务方审核；1：跳过开发者业务方审核。</td></tr><tr><td>rsaPriKeyStr</td><td>string</td><td>是</td><td>私钥（只需要一行长串，不需要文件）</td></tr><tr><td>rsaPubKeyStr</td><td>string</td><td>是</td><td>百度小程序支付的平台公钥(支付回调需要)</td></tr><tr><td>notifyUrl</td><td>string</td><td>否</td><td>异步回调地址</td></tr><tr><td>refundNotifyUrl</td><td>string</td><td>否</td><td>退款异步回调地址</td></tr></tbody></table><h3 id="token"><a href="#token" class="headerlink" title="token"></a>token</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$PayName</span>=<span class="hljs-string">&#x27;Baidu&#x27;</span>;<span class="hljs-comment">//设置驱动</span><br><span class="hljs-variable">$data</span>= <span class="hljs-title class_">\Applet\Pay\Factory</span>::<span class="hljs-title function_ invoke__">getInstance</span>(<span class="hljs-variable">$PayName</span>)-&gt;<span class="hljs-title function_ invoke__">init</span>(<span class="hljs-variable">$config</span>)-&gt;<span class="hljs-title function_ invoke__">getToken</span>();<br></code></pre></td></tr></table></figure><table><thead><tr><th>返回参数</th><th>类型</th><th>必须</th><th>说明</th></tr></thead><tbody><tr><td>expires_in</td><td>string</td><td>是</td><td>凭证有效时间，单位：秒</td></tr><tr><td>session_key</td><td>string</td><td>是</td><td>session_key</td></tr><tr><td>access_token</td><td>string</td><td>是</td><td>获取到的凭证</td></tr></tbody></table><h3 id="openid"><a href="#openid" class="headerlink" title="openid"></a>openid</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$PayName</span>=<span class="hljs-string">&#x27;Baidu&#x27;</span>;<span class="hljs-comment">//设置驱动</span><br><span class="hljs-variable">$code</span>=<span class="hljs-string">&quot;&quot;</span>;<br><span class="hljs-variable">$data</span>= <span class="hljs-title class_">\Applet\Pay\Factory</span>::<span class="hljs-title function_ invoke__">getInstance</span>(<span class="hljs-variable">$PayName</span>)-&gt;<span class="hljs-title function_ invoke__">init</span>(<span class="hljs-variable">$config</span>)-&gt;<span class="hljs-title function_ invoke__">getOpenid</span>(<span class="hljs-variable">$code</span>);<br></code></pre></td></tr></table></figure><table><thead><tr><th>返回参数</th><th>类型</th><th>必须</th><th>说明</th></tr></thead><tbody><tr><td>session_key</td><td>string</td><td>是</td><td>session_key</td></tr><tr><td>openid</td><td>string</td><td>是</td><td>用户 openid</td></tr></tbody></table><h3 id="解密手机号"><a href="#解密手机号" class="headerlink" title="解密手机号"></a>解密手机号</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$PayName</span>=<span class="hljs-string">&#x27;Baidu&#x27;</span>;<span class="hljs-comment">//设置驱动</span><br><span class="hljs-variable">$data</span>= <span class="hljs-title class_">\Applet\Pay\Factory</span>::<span class="hljs-title function_ invoke__">getInstance</span>(<span class="hljs-variable">$PayName</span>)-&gt;<span class="hljs-title function_ invoke__">init</span>(<span class="hljs-variable">$config</span>)-&gt;<span class="hljs-title function_ invoke__">decryptPhone</span>(<span class="hljs-variable">$session_key</span>, <span class="hljs-variable">$iv</span>, <span class="hljs-variable">$ciphertext</span>);<br><span class="hljs-keyword">echo</span> <span class="hljs-variable">$phone</span>[<span class="hljs-string">&#x27;mobile&#x27;</span>];<br></code></pre></td></tr></table></figure><h3 id="百度订单查询"><a href="#百度订单查询" class="headerlink" title="百度订单查询"></a>百度订单查询</h3><table><thead><tr><th>参数名字</th><th>类型</th><th>必须</th><th>说明</th></tr></thead><tbody><tr><td>access_token</td><td>string</td><td>是</td><td>根据上面的获取 token</td></tr><tr><td>tpOrderId</td><td>string</td><td>是</td><td>平台订单号</td></tr></tbody></table><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$PayName</span>=<span class="hljs-string">&#x27;Baidu&#x27;</span>;<span class="hljs-comment">//设置驱动</span><br><span class="hljs-variable">$Baidu</span> = <span class="hljs-title class_">\Applet\Pay\Factory</span>::<span class="hljs-title function_ invoke__">getInstance</span>(<span class="hljs-string">&#x27;Baidu&#x27;</span>)-&gt;<span class="hljs-title function_ invoke__">init</span>(<span class="hljs-variable">$config</span>);<br><span class="hljs-variable">$order</span> = [<br>        <span class="hljs-string">&#x27;tpOrderId&#x27;</span> =&gt; <span class="hljs-string">&#x27;&#x27;</span>,<span class="hljs-comment">//订单号</span><br>        <span class="hljs-string">&#x27;access_token&#x27;</span> =&gt; <span class="hljs-variable">$Baidu</span>-&gt;<span class="hljs-title function_ invoke__">getToken</span>()[<span class="hljs-string">&#x27;access_token&#x27;</span>],<br>    ];<br><span class="hljs-variable">$data</span> = <span class="hljs-variable">$Baidu</span>-&gt;<span class="hljs-title function_ invoke__">findOrder</span>(<span class="hljs-variable">$order</span>);<br></code></pre></td></tr></table></figure><h3 id="百度退款"><a href="#百度退款" class="headerlink" title="百度退款"></a>百度退款</h3><table><thead><tr><th>参数名字</th><th>类型</th><th>必须</th><th>说明</th></tr></thead><tbody><tr><td>access_token</td><td>string</td><td>是</td><td>根据上面的获取 token</td></tr><tr><td>bizRefundBatchId</td><td>int</td><td>是</td><td>百度平台的订单号</td></tr><tr><td>isSkipAudit</td><td>int</td><td>是</td><td>默认为 0； 0：不跳过开发者业务方审核；1：跳过开发者业务方审核。</td></tr><tr><td>orderId</td><td>int</td><td>是</td><td>百度平台的订单号</td></tr><tr><td>refundReason</td><td>string</td><td>是</td><td>退款描述</td></tr><tr><td>refundType</td><td>int</td><td>是</td><td>退款类型 1：用户发起退款；2：开发者业务方客服退款；3：开发者服务异常退款。百度小程序支付的平台公钥</td></tr><tr><td>tpOrderId</td><td>string</td><td>是</td><td>自己平台订单号</td></tr><tr><td>userId</td><td>int</td><td>是</td><td>用户 uid（不是自己平台 uid）</td></tr></tbody></table><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$order</span> = [<br><span class="hljs-string">&#x27;token&#x27;</span> =&gt; <span class="hljs-string">&#x27;abcd&#x27;</span>,<br><span class="hljs-string">&#x27;bizRefundBatchId&#x27;</span> =&gt; <span class="hljs-number">123456</span>,<span class="hljs-comment">//百度平台订单号</span><br><span class="hljs-string">&#x27;isSkipAudit&#x27;</span> =&gt; <span class="hljs-number">1</span>,<br><span class="hljs-string">&#x27;orderId&#x27;</span> =&gt; <span class="hljs-number">123456</span>,<br><span class="hljs-string">&#x27;refundReason&#x27;</span> =&gt; <span class="hljs-string">&#x27;测试退款&#x27;</span>,<br><span class="hljs-string">&#x27;refundType&#x27;</span> =&gt; <span class="hljs-number">2</span>,<span class="hljs-comment">//</span><br><span class="hljs-string">&#x27;tpOrderId&#x27;</span> =&gt; <span class="hljs-string">&#x27;123&#x27;</span>,<span class="hljs-comment">//自己平台订单号</span><br><span class="hljs-string">&#x27;userId&#x27;</span> =&gt; <span class="hljs-number">123</span>,<br>];<br><span class="hljs-variable">$data</span>= <span class="hljs-title class_">\Applet\Pay\Factory</span>::<span class="hljs-title function_ invoke__">getInstance</span>(<span class="hljs-variable">$PayName</span>)-&gt;<span class="hljs-title function_ invoke__">init</span>(<span class="hljs-variable">$config</span>)-&gt;<span class="hljs-title function_ invoke__">applyOrderRefund</span>(<span class="hljs-variable">$order</span>);<br></code></pre></td></tr></table></figure><h3 id="百度小程序模版消息"><a href="#百度小程序模版消息" class="headerlink" title="百度小程序模版消息"></a>百度小程序模版消息</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$data</span> = [<br>    <span class="hljs-string">&quot;touser_openId&quot;</span> =&gt; <span class="hljs-string">&quot;&quot;</span>,<br>    <span class="hljs-string">&quot;template_id&quot;</span> =&gt; <span class="hljs-string">&quot;&quot;</span>,<br>    <span class="hljs-string">&quot;page&quot;</span> =&gt; <span class="hljs-string">&quot;pages/index/index&quot;</span>,<br>    <span class="hljs-string">&quot;subscribe_id&quot;</span> =&gt; <span class="hljs-string">&#x27;百度from组件subscribe-id 一致&#x27;</span>,<br>    <span class="hljs-string">&quot;data&quot;</span> =&gt; <span class="hljs-title function_ invoke__">json_encode</span>([<br>        <span class="hljs-string">&#x27;keyword1&#x27;</span> =&gt; [<span class="hljs-string">&#x27;value&#x27;</span> =&gt; <span class="hljs-string">&quot;第一个参数&quot;</span>],<br>        <span class="hljs-string">&#x27;keyword2&#x27;</span> =&gt; [<span class="hljs-string">&#x27;value&#x27;</span> =&gt; <span class="hljs-string">&quot;第二个参数&quot;</span>],<br>        <span class="hljs-string">&#x27;keyword3&#x27;</span> =&gt;  [<span class="hljs-string">&#x27;value&#x27;</span> =&gt; <span class="hljs-string">&quot;第三个参数&quot;</span>],<br>    ])<br>];<br><span class="hljs-variable">$data</span>= <span class="hljs-title class_">\Applet\Pay\Factory</span>::<span class="hljs-title function_ invoke__">getInstance</span>(<span class="hljs-variable">$PayName</span>)-&gt;<span class="hljs-title function_ invoke__">init</span>(<span class="hljs-variable">$config</span>)-&gt;<span class="hljs-title function_ invoke__">sendMsg</span>(<span class="hljs-variable">$data</span>,<span class="hljs-variable">$token</span>);<br><span class="hljs-variable">$data</span>=[<br>   <span class="hljs-string">&quot;errno&quot;</span> =&gt; <span class="hljs-number">0</span>,<br>    <span class="hljs-string">&quot;msg&quot;</span> =&gt; <span class="hljs-string">&quot;success&quot;</span>,<br>    <span class="hljs-string">&quot;data&quot;</span> =&gt; <span class="hljs-keyword">array</span>=&gt; [<br>    <span class="hljs-string">&quot;msg_key&quot;</span> =&gt; <span class="hljs-number">1663314134696897</span><br>  ]<br>]<br></code></pre></td></tr></table></figure><h1 id="抖音小程序"><a href="#抖音小程序" class="headerlink" title="抖音小程序"></a>抖音小程序</h1><h3 id="Config-1"><a href="#Config-1" class="headerlink" title="Config"></a>Config</h3><table><thead><tr><th>参数名字</th><th>类型</th><th>必须</th><th>说明</th></tr></thead><tbody><tr><td>token</td><td>string</td><td>是</td><td>担保交易回调的 Token(令牌)</td></tr><tr><td>salt</td><td>string</td><td>是</td><td>担保交易的 SALT</td></tr><tr><td>merchant_id</td><td>string</td><td>是</td><td>担保交易的商户号</td></tr><tr><td>app_id</td><td>int</td><td>是</td><td>小程序的 APP_ID</td></tr><tr><td>secret</td><td>string</td><td>是</td><td>小程序的 APP_SECRET</td></tr><tr><td>notify_url</td><td>string</td><td>是</td><td>支付回调 url</td></tr><tr><td>settle_url</td><td>string</td><td>否</td><td>分账回调 url,没有默认支付回调 url</td></tr></tbody></table><h3 id="token-1"><a href="#token-1" class="headerlink" title="token"></a>token</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$PayName</span>=<span class="hljs-string">&#x27;Byte&#x27;</span>;<span class="hljs-comment">//驱动</span><br><span class="hljs-variable">$data</span>= <span class="hljs-title class_">\Applet\Pay\Factory</span>::<span class="hljs-title function_ invoke__">getInstance</span>(<span class="hljs-variable">$PayName</span>)-&gt;<span class="hljs-title function_ invoke__">init</span>(<span class="hljs-variable">$config</span>)-&gt;<span class="hljs-title function_ invoke__">getToken</span>();<br></code></pre></td></tr></table></figure><table><thead><tr><th>返回参数</th><th>类型</th><th>必须</th><th>说明</th></tr></thead><tbody><tr><td>expires_in</td><td>string</td><td>是</td><td>凭证有效时间，单位：秒</td></tr><tr><td>access_token</td><td>string</td><td>是</td><td>获取到的凭证</td></tr></tbody></table><h3 id="openid-1"><a href="#openid-1" class="headerlink" title="openid"></a>openid</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$PayName</span>=<span class="hljs-string">&#x27;Byte&#x27;</span>;<span class="hljs-comment">//设置驱动</span><br><span class="hljs-variable">$code</span>=<span class="hljs-string">&quot;&quot;</span>;<br><span class="hljs-variable">$anonymous_code</span>=<span class="hljs-string">&quot;&quot;</span>;<span class="hljs-comment">//可以不传</span><br><span class="hljs-variable">$data</span>= <span class="hljs-title class_">\Applet\Pay\Factory</span>::<span class="hljs-title function_ invoke__">getInstance</span>(<span class="hljs-variable">$PayName</span>)-&gt;<span class="hljs-title function_ invoke__">init</span>(<span class="hljs-variable">$config</span>)-&gt;<span class="hljs-title function_ invoke__">getOpenid</span>(<span class="hljs-variable">$code</span>,<span class="hljs-variable">$anonymous_code</span>);<br></code></pre></td></tr></table></figure><table><thead><tr><th>返回参数</th><th>类型</th><th>必须</th><th>说明</th></tr></thead><tbody><tr><td>session_key</td><td>string</td><td>是</td><td>session_key</td></tr><tr><td>openid</td><td>string</td><td>是</td><td>用户 openid</td></tr><tr><td>unionid</td><td>string</td><td>是</td><td>unionid</td></tr></tbody></table><h3 id="解密手机号-1"><a href="#解密手机号-1" class="headerlink" title="解密手机号"></a>解密手机号</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$PayName</span>=<span class="hljs-string">&#x27;Baidu&#x27;</span>;<span class="hljs-comment">//设置驱动</span><br><span class="hljs-variable">$data</span>= <span class="hljs-title class_">\Applet\Pay\Factory</span>::<span class="hljs-title function_ invoke__">getInstance</span>(<span class="hljs-variable">$PayName</span>)-&gt;<span class="hljs-title function_ invoke__">init</span>(<span class="hljs-variable">$config</span>)-&gt;<span class="hljs-title function_ invoke__">decryptPhone</span>(<span class="hljs-variable">$session_key</span>, <span class="hljs-variable">$iv</span>, <span class="hljs-variable">$encryptedData</span>);<br><span class="hljs-keyword">echo</span> <span class="hljs-variable">$phone</span>[<span class="hljs-string">&#x27;phoneNumber&#x27;</span>];<br></code></pre></td></tr></table></figure><h3 id="订单查询"><a href="#订单查询" class="headerlink" title="订单查询"></a>订单查询</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$PayName</span>=<span class="hljs-string">&#x27;Byte&#x27;</span>;<span class="hljs-comment">//设置驱动</span><br><span class="hljs-variable">$Baidu</span> = <span class="hljs-title class_">\Applet\Pay\Factory</span>::<span class="hljs-title function_ invoke__">getInstance</span>(<span class="hljs-variable">$payName</span>)-&gt;<span class="hljs-title function_ invoke__">init</span>(<span class="hljs-variable">$config</span>);<br><span class="hljs-variable">$data</span> = <span class="hljs-variable">$Baidu</span>-&gt;<span class="hljs-title function_ invoke__">findOrder</span>(<span class="hljs-string">&quot;订单号&quot;</span>);<br></code></pre></td></tr></table></figure><h3 id="分账"><a href="#分账" class="headerlink" title="分账"></a>分账</h3><table><thead><tr><th>参数名字</th><th>类型</th><th>必须</th><th>说明</th></tr></thead><tbody><tr><td>out_order_no</td><td>string</td><td>是</td><td>平台订单号</td></tr><tr><td>out_settle_no</td><td>string</td><td>是</td><td>自定义订单号</td></tr><tr><td>settle_desc</td><td>int</td><td>是</td><td>分账描述</td></tr><tr><td>cp_extra</td><td>string</td><td>是</td><td>开发者自定义字段，回调原样回传</td></tr></tbody></table><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$PayName</span>=<span class="hljs-string">&#x27;Byte&#x27;</span>;<span class="hljs-comment">//设置驱动</span><br><span class="hljs-variable">$Baidu</span> = <span class="hljs-title class_">\Applet\Pay\Factory</span>::<span class="hljs-title function_ invoke__">getInstance</span>(<span class="hljs-variable">$payName</span>)-&gt;<span class="hljs-title function_ invoke__">init</span>(<span class="hljs-variable">$config</span>);<br><span class="hljs-variable">$data</span> = <span class="hljs-variable">$Baidu</span>-&gt;<span class="hljs-title function_ invoke__">settle</span>(<span class="hljs-variable">$order</span>);<br></code></pre></td></tr></table></figure><h3 id="退款"><a href="#退款" class="headerlink" title="退款"></a>退款</h3><table><thead><tr><th>参数名字</th><th>类型</th><th>必须</th><th>说明</th></tr></thead><tbody><tr><td>out_order_no</td><td>string</td><td>是</td><td>平台订单号</td></tr><tr><td>out_refund_no</td><td>int</td><td>是</td><td>自定义订单号</td></tr><tr><td>reason</td><td>int</td><td>是</td><td>退款说明</td></tr><tr><td>refund_amount</td><td>string</td><td>是</td><td>退款金额</td></tr></tbody></table><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$order</span> = [<br>        <span class="hljs-string">&#x27;out_order_no&#x27;</span> =&gt; <span class="hljs-string">&#x27;&#x27;</span>,<br>        <span class="hljs-string">&#x27;out_refund_no&#x27;</span> =&gt; <span class="hljs-title function_ invoke__">time</span>() . <span class="hljs-string">&#x27;refund&#x27;</span>,<br>        <span class="hljs-string">&#x27;reason&#x27;</span> =&gt; <span class="hljs-string">&#x27;就想退款，咋滴&#x27;</span>,<br>        <span class="hljs-string">&#x27;refund_amount&#x27;</span> =&gt; <span class="hljs-number">1</span>, <span class="hljs-comment">//退款金额</span><br>    ];<br><span class="hljs-variable">$data</span>= <span class="hljs-title class_">\Applet\Pay\Factory</span>::<span class="hljs-title function_ invoke__">getInstance</span>(<span class="hljs-variable">$PayName</span>)-&gt;<span class="hljs-title function_ invoke__">init</span>(<span class="hljs-variable">$config</span>)-&gt;<span class="hljs-title function_ invoke__">applyOrderRefund</span>(<span class="hljs-variable">$order</span>);<br><span class="hljs-comment">//返回  [err_no] =&gt; 1</span><br><span class="hljs-comment">//     [err_tips] =&gt; 成功</span><br><span class="hljs-comment">//     [refund_no] =&gt; 1212</span><br></code></pre></td></tr></table></figure><h3 id="模版消息"><a href="#模版消息" class="headerlink" title="模版消息"></a>模版消息</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$data</span> = [<br>        <span class="hljs-string">&#x27;tpl_id&#x27;</span> =&gt;  <span class="hljs-string">&quot;模版id&quot;</span>,<br>        <span class="hljs-string">&quot;open_id&quot;</span> =&gt; <span class="hljs-variable">$parm</span>[<span class="hljs-string">&#x27;openid&#x27;</span>],<br>        <span class="hljs-string">&#x27;data&#x27;</span> =&gt; [<br>            <span class="hljs-string">&#x27;律师&#x27;</span> =&gt; <span class="hljs-string">&quot;张三&quot;</span>,<br>            <span class="hljs-string">&quot;回复时间&quot;</span> =&gt; <span class="hljs-title function_ invoke__">date</span>(<span class="hljs-string">&#x27;Y-m-d H:i:s&#x27;</span>, <span class="hljs-title function_ invoke__">time</span>()),<br>            <span class="hljs-string">&quot;回复内容&quot;</span> =&gt; <span class="hljs-string">&quot;我回复你啦&quot;</span>,<br>        ],<br>        <span class="hljs-string">&quot;page&quot;</span> =&gt; <span class="hljs-string">&quot;pages/index/index&quot;</span>,<br>    ];<br><span class="hljs-variable">$data</span>= <span class="hljs-title class_">\Applet\Pay\Factory</span>::<span class="hljs-title function_ invoke__">getInstance</span>(<span class="hljs-variable">$PayName</span>)-&gt;<span class="hljs-title function_ invoke__">init</span>(<span class="hljs-variable">$config</span>)-&gt;<span class="hljs-title function_ invoke__">sendMsg</span>(<span class="hljs-variable">$data</span>,<span class="hljs-variable">$token</span>);<br><br></code></pre></td></tr></table></figure><h1 id="微信小程序"><a href="#微信小程序" class="headerlink" title="微信小程序"></a>微信小程序</h1><h3 id="Config-2"><a href="#Config-2" class="headerlink" title="Config"></a>Config</h3><table><thead><tr><th>参数名字</th><th>类型</th><th>必须</th><th>说明</th></tr></thead><tbody><tr><td>appid</td><td>int</td><td>是</td><td>小程序 appid</td></tr><tr><td>secret</td><td>int</td><td>是</td><td>小程序 secret</td></tr><tr><td>mch_id</td><td>string</td><td>是</td><td>商户 mch_id</td></tr><tr><td>mch_key</td><td>string</td><td>是</td><td>商户 mch_key</td></tr><tr><td>notify_url</td><td>string</td><td>是</td><td>异步地址</td></tr><tr><td>cert_pem</td><td>string</td><td>是</td><td>cert_pem 证书</td></tr><tr><td>key_pem</td><td>string</td><td>是</td><td>key_pem 证书</td></tr><tr><td>trade_type</td><td>string</td><td>是</td><td>默认为：JSAPI。MWEB：代表微信 H5 、JSAPI：公众号或小程序</td></tr></tbody></table><h3 id="token-2"><a href="#token-2" class="headerlink" title="token"></a>token</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$PayName</span>=<span class="hljs-string">&#x27;Weixin&#x27;</span>;<span class="hljs-comment">//驱动</span><br><span class="hljs-variable">$data</span>= <span class="hljs-title class_">\Applet\Pay\Factory</span>::<span class="hljs-title function_ invoke__">getInstance</span>(<span class="hljs-variable">$PayName</span>)-&gt;<span class="hljs-title function_ invoke__">init</span>(<span class="hljs-variable">$config</span>)-&gt;<span class="hljs-title function_ invoke__">getToken</span>();<br></code></pre></td></tr></table></figure><table><thead><tr><th>返回参数</th><th>类型</th><th>必须</th><th>说明</th></tr></thead><tbody><tr><td>expires_in</td><td>string</td><td>是</td><td>凭证有效时间，单位：秒</td></tr><tr><td>access_token</td><td>string</td><td>是</td><td>获取到的凭证</td></tr></tbody></table><h3 id="openid-2"><a href="#openid-2" class="headerlink" title="openid"></a>openid</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$PayName</span>=<span class="hljs-string">&#x27;Weixin&#x27;</span>;<span class="hljs-comment">//设置驱动</span><br><span class="hljs-variable">$code</span>=<span class="hljs-string">&quot;&quot;</span>;<br><span class="hljs-variable">$data</span>= <span class="hljs-title class_">\Applet\Pay\Factory</span>::<span class="hljs-title function_ invoke__">getInstance</span>(<span class="hljs-variable">$PayName</span>)-&gt;<span class="hljs-title function_ invoke__">init</span>(<span class="hljs-variable">$config</span>)-&gt;<span class="hljs-title function_ invoke__">getOpenid</span>(<span class="hljs-variable">$code</span>);<br></code></pre></td></tr></table></figure><table><thead><tr><th>返回参数</th><th>类型</th><th>必须</th><th>说明</th></tr></thead><tbody><tr><td>session_key</td><td>string</td><td>是</td><td>session_key</td></tr><tr><td>openid</td><td>string</td><td>是</td><td>用户 openid</td></tr><tr><td>unionid</td><td>string</td><td>是</td><td>unionid</td></tr></tbody></table><h3 id="微信解密手机号"><a href="#微信解密手机号" class="headerlink" title="微信解密手机号"></a>微信解密手机号</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$PayName</span>=<span class="hljs-string">&#x27;Weixin&#x27;</span>;<span class="hljs-comment">//设置驱动</span><br><span class="hljs-variable">$data</span>= <span class="hljs-title class_">\Applet\Pay\Factory</span>::<span class="hljs-title function_ invoke__">getInstance</span>(<span class="hljs-variable">$PayName</span>)-&gt;<span class="hljs-title function_ invoke__">init</span>(<span class="hljs-variable">$config</span>)-&gt;<span class="hljs-title function_ invoke__">decryptPhone</span>(<span class="hljs-variable">$session_key</span>, <span class="hljs-variable">$iv</span>, <span class="hljs-variable">$encryptedData</span>);<br><span class="hljs-keyword">echo</span> <span class="hljs-variable">$phone</span>[<span class="hljs-string">&#x27;phoneNumber&#x27;</span>];<br></code></pre></td></tr></table></figure><h3 id="微信订单查询"><a href="#微信订单查询" class="headerlink" title="微信订单查询"></a>微信订单查询</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$PayName</span>=<span class="hljs-string">&#x27;Weixin&#x27;</span>;<span class="hljs-comment">//设置驱动</span><br><span class="hljs-variable">$Baidu</span> = <span class="hljs-title class_">\Applet\Pay\Factory</span>::<span class="hljs-title function_ invoke__">getInstance</span>(<span class="hljs-variable">$payName</span>)-&gt;<span class="hljs-title function_ invoke__">init</span>(<span class="hljs-variable">$config</span>);<br><span class="hljs-variable">$data</span> = <span class="hljs-variable">$Baidu</span>-&gt;<span class="hljs-title function_ invoke__">findOrder</span>(<span class="hljs-string">&quot;订单号&quot;</span>);<br></code></pre></td></tr></table></figure><h3 id="微信退款"><a href="#微信退款" class="headerlink" title="微信退款"></a>微信退款</h3><table><thead><tr><th>参数名字</th><th>类型</th><th>必须</th><th>说明</th></tr></thead><tbody><tr><td>out_trade_no</td><td>string</td><td>是</td><td>平台订单号</td></tr><tr><td>out_refund_no</td><td>string</td><td>是</td><td>自定义订单号</td></tr><tr><td>refund_fee</td><td>int</td><td>是</td><td>退款金额</td></tr><tr><td>total_fee</td><td>int</td><td>是</td><td>订单金额</td></tr><tr><td>refund_desc</td><td>string</td><td>是</td><td>退款原因</td></tr></tbody></table><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$order</span> = [<br>        <span class="hljs-string">&#x27;out_trade_no&#x27;</span> =&gt; <span class="hljs-string">&#x27;123&#x27;</span>,<br>        <span class="hljs-string">&#x27;total_fee&#x27;</span> =&gt; <span class="hljs-number">0.01</span>,<br>        <span class="hljs-string">&#x27;out_refund_no&#x27;</span> =&gt; <span class="hljs-title function_ invoke__">time</span>(),<br>        <span class="hljs-string">&#x27;refund_fee&#x27;</span> =&gt; <span class="hljs-number">0.01</span>,<br>    ];<br><span class="hljs-variable">$data</span>= <span class="hljs-title class_">\Applet\Pay\Factory</span>::<span class="hljs-title function_ invoke__">getInstance</span>(<span class="hljs-variable">$PayName</span>)-&gt;<span class="hljs-title function_ invoke__">init</span>(<span class="hljs-variable">$config</span>)-&gt;<span class="hljs-title function_ invoke__">applyOrderRefund</span>(<span class="hljs-variable">$order</span>);<br></code></pre></td></tr></table></figure><h3 id="微信小程序模版消息"><a href="#微信小程序模版消息" class="headerlink" title="微信小程序模版消息"></a>微信小程序模版消息</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$data</span> = [<br>    <span class="hljs-string">&quot;touser&quot;</span> =&gt; <span class="hljs-string">&quot;&quot;</span>,<br>    <span class="hljs-string">&quot;template_id&quot;</span> =&gt; <span class="hljs-string">&quot;&quot;</span>,<br>    <span class="hljs-string">&quot;page&quot;</span> =&gt; <span class="hljs-string">&quot;pages/index/index&quot;</span>,<br>    <span class="hljs-string">&quot;miniprogram_state&quot;</span> =&gt; <span class="hljs-string">&quot;developer&quot;</span>,<br>    <span class="hljs-string">&quot;lang&quot;</span> =&gt; <span class="hljs-string">&quot;zh_CN&quot;</span>,<br>    <span class="hljs-string">&quot;data&quot;</span> =&gt; [<br>        <span class="hljs-string">&#x27;thing6&#x27;</span> =&gt; [<span class="hljs-string">&#x27;value&#x27;</span> =&gt; <span class="hljs-string">&quot;第一个参数&#123;&#123;thing6.DATA&#125;&#125;&quot;</span>],<br>        <span class="hljs-string">&#x27;thing7&#x27;</span> =&gt; [<span class="hljs-string">&#x27;value&#x27;</span> =&gt; <span class="hljs-string">&quot;第二个参数&#123;&#123;thing7.DATA&#125;&#125;&quot;</span>],<br>        <span class="hljs-string">&#x27;time8&#x27;</span> =&gt;  [<span class="hljs-string">&#x27;value&#x27;</span> =&gt; <span class="hljs-string">&quot;第三个参数&#123;&#123;time8.DATA&#125;&#125;&quot;</span>],<br>],<br><span class="hljs-variable">$data</span>= <span class="hljs-title class_">\Applet\Pay\Factory</span>::<span class="hljs-title function_ invoke__">getInstance</span>(<span class="hljs-variable">$PayName</span>)-&gt;<span class="hljs-title function_ invoke__">init</span>(<span class="hljs-variable">$config</span>)-&gt;<span class="hljs-title function_ invoke__">sendMsg</span>(<span class="hljs-variable">$data</span>,<span class="hljs-variable">$token</span>);<br><span class="hljs-variable">$data</span>=[<br>    <span class="hljs-string">&quot;errcode&quot;</span> =&gt; <span class="hljs-number">0</span><br>    <span class="hljs-string">&quot;errmsg&quot;</span> =&gt; <span class="hljs-string">&quot;ok&quot;</span><br>    <span class="hljs-string">&quot;msgid&quot;</span> =&gt; <span class="hljs-number">123456</span><br>]<br></code></pre></td></tr></table></figure><h1 id="支付宝小程序"><a href="#支付宝小程序" class="headerlink" title="支付宝小程序"></a>支付宝小程序</h1><blockquote><p>使用密钥进行签名解密，没有使用证书签名解密。</p></blockquote><blockquote><p>订单查询、退款、参数设置可以设置其他，具体看文档。</p></blockquote><blockquote><p>返回值 看官方文档，每个返回值都不一样，自行判断，如 openid 返回[alipay_system_oauth_token_response] 退款返回[alipay_trade_create_response]</p></blockquote><h3 id="Config-3"><a href="#Config-3" class="headerlink" title="Config"></a>Config</h3><table><thead><tr><th>参数名字</th><th>类型</th><th>必须</th><th>说明</th></tr></thead><tbody><tr><td>appid</td><td>string</td><td>是</td><td>小程序 appid</td></tr><tr><td>secret</td><td>string</td><td>是</td><td>小程序 AES 用于手机号解密</td></tr><tr><td>privateKey</td><td>string</td><td>是</td><td>应用私钥（开发工具生成）</td></tr><tr><td>publicKey</td><td>string</td><td>是</td><td>支付宝公钥（支付宝后台下载）</td></tr><tr><td>notify_url</td><td>string</td><td>是</td><td>异步回调地址</td></tr></tbody></table><h3 id="支付宝小程序-openid"><a href="#支付宝小程序-openid" class="headerlink" title="支付宝小程序 openid"></a>支付宝小程序 openid</h3><blockquote><p>getOpenid 获取支付宝的用户 user_id 类似于微信的 openid</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$PayName</span>=<span class="hljs-string">&#x27;Ali&#x27;</span>;<span class="hljs-comment">//设置驱动</span><br><span class="hljs-variable">$code</span>=<span class="hljs-string">&quot;&quot;</span>;<br><span class="hljs-variable">$data</span>= <span class="hljs-title class_">\Applet\Pay\Factory</span>::<span class="hljs-title function_ invoke__">getInstance</span>(<span class="hljs-variable">$PayName</span>)-&gt;<span class="hljs-title function_ invoke__">init</span>(<span class="hljs-variable">$config</span>)-&gt;<span class="hljs-title function_ invoke__">getOpenid</span>(<span class="hljs-variable">$code</span>);<br><span class="hljs-comment">//返回参数</span><br><span class="hljs-variable">$data</span> = <span class="hljs-keyword">array</span>(<br>    [alipay_system_oauth_token_response] =&gt; <span class="hljs-title function_ invoke__">Array</span><br>        (<br>            [access_token] =&gt; <span class="hljs-number">123</span><br>            [alipay_user_id] =&gt; <span class="hljs-number">123</span><br>            [auth_start] =&gt; <span class="hljs-number">2023</span>-<span class="hljs-number">03</span>-<span class="hljs-number">26</span> <span class="hljs-number">20</span>:<span class="hljs-number">56</span>:<span class="hljs-number">36</span><br>            [expires_in] =&gt; <span class="hljs-number">1296000</span><br>            [re_expires_in] =&gt; <span class="hljs-number">2592000</span><br>            [refresh_token] =&gt; auth<br>            [user_id] =&gt; <span class="hljs-number">123</span><br>        )<br>    [sign] =&gt;<br>    )<br></code></pre></td></tr></table></figure><h3 id="支付宝小程序解密手机号"><a href="#支付宝小程序解密手机号" class="headerlink" title="支付宝小程序解密手机号"></a>支付宝小程序解密手机号</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$PayName</span>=<span class="hljs-string">&#x27;Ali&#x27;</span>;<span class="hljs-comment">//设置驱动</span><br><span class="hljs-variable">$data</span>= <span class="hljs-title class_">\Applet\Pay\Factory</span>::<span class="hljs-title function_ invoke__">getInstance</span>(<span class="hljs-variable">$PayName</span>)-&gt;<span class="hljs-title function_ invoke__">init</span>(<span class="hljs-variable">$config</span>)-&gt;<span class="hljs-title function_ invoke__">decryptPhone</span>(<span class="hljs-variable">$session_key</span>, <span class="hljs-variable">$iv</span>, <span class="hljs-variable">$encryptedData</span>);<br><span class="hljs-keyword">echo</span> <span class="hljs-variable">$phone</span>[<span class="hljs-string">&#x27;mobile&#x27;</span>];<br></code></pre></td></tr></table></figure><h3 id="支付宝小程序订单查询"><a href="#支付宝小程序订单查询" class="headerlink" title="支付宝小程序订单查询"></a>支付宝小程序订单查询</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$PayName</span>=<span class="hljs-string">&#x27;Ali&#x27;</span>;<span class="hljs-comment">//设置驱动</span><br><span class="hljs-variable">$Baidu</span> = <span class="hljs-title class_">\Applet\Pay\Factory</span>::<span class="hljs-title function_ invoke__">getInstance</span>(<span class="hljs-variable">$payName</span>)-&gt;<span class="hljs-title function_ invoke__">init</span>(<span class="hljs-variable">$config</span>);<br><span class="hljs-variable">$data</span> = <span class="hljs-variable">$Baidu</span>-&gt;<span class="hljs-title function_ invoke__">findOrder</span>([<span class="hljs-string">&#x27;out_trade_no&#x27;</span> =&gt; <span class="hljs-string">&#x27;1679838318&#x27;</span>]);<br></code></pre></td></tr></table></figure><h3 id="支付宝小程序退款"><a href="#支付宝小程序退款" class="headerlink" title="支付宝小程序退款"></a>支付宝小程序退款</h3><table><thead><tr><th>参数名字</th><th>类型</th><th>必须</th><th>说明</th></tr></thead><tbody><tr><td>out_trade_no</td><td>string</td><td>是</td><td>平台订单号</td></tr><tr><td>refund_amount</td><td>int</td><td>是</td><td>退款金额</td></tr></tbody></table><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$orders</span> = [<br>        <span class="hljs-string">&#x27;out_order_no&#x27;</span> =&gt; <span class="hljs-variable">$order</span>[<span class="hljs-string">&#x27;out_order_no&#x27;</span>],<br>        <span class="hljs-string">&#x27;refund_amount&#x27;</span> =&gt; <span class="hljs-variable">$order</span>[<span class="hljs-string">&#x27;refund_amount&#x27;</span>],<br>    ];<br><span class="hljs-variable">$PayName</span>=<span class="hljs-string">&#x27;Ali&#x27;</span>;<span class="hljs-comment">//设置驱动</span><br><span class="hljs-variable">$data</span>= <span class="hljs-title class_">\Applet\Pay\Factory</span>::<span class="hljs-title function_ invoke__">getInstance</span>(<span class="hljs-variable">$PayName</span>)-&gt;<span class="hljs-title function_ invoke__">init</span>(<span class="hljs-variable">$config</span>)-&gt;<span class="hljs-title function_ invoke__">applyOrderRefund</span>(<span class="hljs-variable">$order</span>);<br></code></pre></td></tr></table></figure><h3 id="支付宝小程序模版消息"><a href="#支付宝小程序模版消息" class="headerlink" title="支付宝小程序模版消息"></a>支付宝小程序模版消息</h3><p>模版消息设置比较麻烦。需要先到开发平台添加进入小程序进行产品绑定，在去商家平台设置<a href="https://opendocs.alipay.com/b/03ksho">文档</a></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$data</span> = [<br>        <span class="hljs-string">&#x27;to_user_id&#x27;</span> =&gt; <span class="hljs-string">&#x27;用户uid&#x27;</span>,<br>        <span class="hljs-string">&#x27;user_template_id&#x27;</span> =&gt; <span class="hljs-string">&#x27;模版id&#x27;</span>,<br>        <span class="hljs-string">&#x27;page&#x27;</span> =&gt; <span class="hljs-string">&#x27;pages/index/index&#x27;</span>,<br>        <span class="hljs-string">&#x27;data&#x27;</span> =&gt; <span class="hljs-title function_ invoke__">json_encode</span>([<br>            <span class="hljs-string">&#x27;keyword1&#x27;</span> =&gt; [<span class="hljs-string">&#x27;value&#x27;</span> =&gt; <span class="hljs-string">&#x27;1&#x27;</span>],<br>            <span class="hljs-string">&#x27;keyword2&#x27;</span> =&gt;  [<span class="hljs-string">&#x27;value&#x27;</span> =&gt; <span class="hljs-string">&#x27;2&#x27;</span>],<br>            <span class="hljs-string">&#x27;keyword3&#x27;</span> =&gt; [<span class="hljs-string">&#x27;value&#x27;</span> =&gt; <span class="hljs-string">&#x27;3&#x27;</span>],<br>        ]),<br>    ];<br><span class="hljs-variable">$data</span>= <span class="hljs-title class_">\Applet\Pay\Factory</span>::<span class="hljs-title function_ invoke__">getInstance</span>(<span class="hljs-variable">$PayName</span>)-&gt;<span class="hljs-title function_ invoke__">init</span>(<span class="hljs-variable">$config</span>)-&gt;<span class="hljs-title function_ invoke__">sendMsg</span>(<span class="hljs-variable">$data</span>,<span class="hljs-variable">$token</span>);<br></code></pre></td></tr></table></figure><h1 id="快手小程序"><a href="#快手小程序" class="headerlink" title="快手小程序"></a>快手小程序</h1><h3 id="Config-4"><a href="#Config-4" class="headerlink" title="Config"></a>Config</h3><table><thead><tr><th>参数名字</th><th>类型</th><th>必须</th><th>说明</th></tr></thead><tbody><tr><td>app_id</td><td>int</td><td>是</td><td>小程序 appid</td></tr><tr><td>app_secret</td><td>int</td><td>是</td><td>小程序 secret</td></tr><tr><td>notify_url</td><td>string</td><td>是</td><td>回调地址</td></tr><tr><td>settle_url</td><td>string</td><td>是</td><td>结算回调地址，没有就默认 notify_url</td></tr><tr><td>type</td><td>int</td><td>是</td><td>类目</td></tr></tbody></table><h3 id="openid-3"><a href="#openid-3" class="headerlink" title="openid"></a>openid</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$PayName</span>=<span class="hljs-string">&#x27;Kuaishou&#x27;</span>;<span class="hljs-comment">//设置驱动</span><br><span class="hljs-variable">$code</span>=<span class="hljs-string">&quot;&quot;</span>;<br><span class="hljs-variable">$data</span>= <span class="hljs-title class_">\Applet\Pay\Factory</span>::<span class="hljs-title function_ invoke__">getInstance</span>(<span class="hljs-variable">$PayName</span>)-&gt;<span class="hljs-title function_ invoke__">init</span>(<span class="hljs-variable">$config</span>)-&gt;<span class="hljs-title function_ invoke__">getOpenid</span>(<span class="hljs-variable">$code</span>);<br></code></pre></td></tr></table></figure><table><thead><tr><th>返回参数</th><th>类型</th><th>必须</th><th>说明</th></tr></thead><tbody><tr><td>session_key</td><td>string</td><td>是</td><td>session_key</td></tr><tr><td>open_id</td><td>string</td><td>是</td><td>用户 open_id</td></tr><tr><td>result</td><td>string</td><td>是</td><td>状态 1 是成功</td></tr></tbody></table><h3 id="快手解密手机号"><a href="#快手解密手机号" class="headerlink" title="快手解密手机号"></a>快手解密手机号</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$PayName</span>=<span class="hljs-string">&#x27;Kuaishou&#x27;</span>;<span class="hljs-comment">//设置驱动</span><br><span class="hljs-variable">$data</span>= <span class="hljs-title class_">\Applet\Pay\Factory</span>::<span class="hljs-title function_ invoke__">getInstance</span>(<span class="hljs-variable">$PayName</span>)-&gt;<span class="hljs-title function_ invoke__">init</span>(<span class="hljs-variable">$config</span>)-&gt;<span class="hljs-title function_ invoke__">decryptPhone</span>(<span class="hljs-variable">$session_key</span>, <span class="hljs-variable">$iv</span>, <span class="hljs-variable">$encryptedData</span>);<br><span class="hljs-keyword">echo</span> <span class="hljs-variable">$phone</span>[<span class="hljs-string">&#x27;phoneNumber&#x27;</span>];<br></code></pre></td></tr></table></figure><h3 id="快手订单查询"><a href="#快手订单查询" class="headerlink" title="快手订单查询"></a>快手订单查询</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$PayName</span>=<span class="hljs-string">&#x27;Kuaishou&#x27;</span>;<span class="hljs-comment">//设置驱动</span><br><span class="hljs-variable">$Baidu</span> = <span class="hljs-title class_">\Applet\Pay\Factory</span>::<span class="hljs-title function_ invoke__">getInstance</span>(<span class="hljs-variable">$payName</span>)-&gt;<span class="hljs-title function_ invoke__">init</span>(<span class="hljs-variable">$config</span>);<br><span class="hljs-variable">$data</span> = <span class="hljs-variable">$Baidu</span>-&gt;<span class="hljs-title function_ invoke__">findOrder</span>(<span class="hljs-string">&quot;订单号&quot;</span>,<span class="hljs-variable">$access_token</span>);<br></code></pre></td></tr></table></figure><h3 id="快手退款"><a href="#快手退款" class="headerlink" title="快手退款"></a>快手退款</h3><table><thead><tr><th>参数名字</th><th>类型</th><th>必须</th><th>说明</th></tr></thead><tbody><tr><td>out_trade_no</td><td>string</td><td>是</td><td>平台订单号</td></tr><tr><td>out_refund_no</td><td>strging</td><td>是</td><td>自定义订单号</td></tr><tr><td>refund_amount</td><td>int</td><td>是</td><td>退款金额</td></tr><tr><td>reason</td><td>string</td><td>是</td><td>退款原因</td></tr><tr><td>access_token</td><td>string</td><td>是</td><td>access_token</td></tr><tr><td>attach</td><td>string</td><td>否</td><td>自定义</td></tr></tbody></table><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$orders</span> = [<br>        <span class="hljs-string">&#x27;out_order_no&#x27;</span> =&gt; <span class="hljs-variable">$order</span>[<span class="hljs-string">&#x27;out_order_no&#x27;</span>],<br>        <span class="hljs-string">&#x27;out_refund_no&#x27;</span> =&gt; <span class="hljs-variable">$order</span>[<span class="hljs-string">&#x27;out_refund_no&#x27;</span>],<br>        <span class="hljs-string">&#x27;reason&#x27;</span> =&gt; <span class="hljs-variable">$order</span>[<span class="hljs-string">&#x27;reason&#x27;</span>],<br>        <span class="hljs-string">&#x27;attach&#x27;</span> =&gt; <span class="hljs-variable">$order</span>[<span class="hljs-string">&#x27;attach&#x27;</span>],<br>    ];<br><span class="hljs-variable">$data</span>= <span class="hljs-title class_">\Applet\Pay\Factory</span>::<span class="hljs-title function_ invoke__">getInstance</span>(<span class="hljs-variable">$PayName</span>)-&gt;<span class="hljs-title function_ invoke__">init</span>(<span class="hljs-variable">$config</span>)-&gt;<span class="hljs-title function_ invoke__">applyOrderRefund</span>(<span class="hljs-variable">$order</span>);<br></code></pre></td></tr></table></figure><h3 id="快手结算"><a href="#快手结算" class="headerlink" title="快手结算"></a>快手结算</h3><table><thead><tr><th>参数名字</th><th>类型</th><th>必须</th><th>说明</th></tr></thead><tbody><tr><td>out_order_no</td><td>string</td><td>是</td><td>平台订单号</td></tr><tr><td>out_settle_no</td><td>string</td><td>是</td><td>自定义订单号</td></tr><tr><td>reason</td><td>string</td><td>是</td><td>退款原因</td></tr><tr><td>access_token</td><td>string</td><td>是</td><td>access_token</td></tr><tr><td>attach</td><td>string</td><td>否</td><td>自定义</td></tr></tbody></table><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-comment">//注意 需要设置回调 notify_url  在config 设置 settle_url 如果没有 默认为 notify_url</span><br><span class="hljs-variable">$orders</span> = [<br>        <span class="hljs-string">&#x27;out_order_no&#x27;</span> =&gt; <span class="hljs-variable">$order</span>[<span class="hljs-string">&#x27;out_order_no&#x27;</span>],<br>        <span class="hljs-string">&#x27;out_settle_no&#x27;</span> =&gt; <span class="hljs-variable">$order</span>[<span class="hljs-string">&#x27;out_settle_no&#x27;</span>],<br>        <span class="hljs-string">&#x27;reason&#x27;</span> =&gt; <span class="hljs-variable">$order</span>[<span class="hljs-string">&#x27;reason&#x27;</span>],<br>        <span class="hljs-string">&#x27;attach&#x27;</span> =&gt; <span class="hljs-variable">$order</span>[<span class="hljs-string">&#x27;attach&#x27;</span>],<br>    ];<br><span class="hljs-variable">$data</span>= <span class="hljs-title class_">\Applet\Pay\Factory</span>::<span class="hljs-title function_ invoke__">getInstance</span>(<span class="hljs-variable">$PayName</span>)-&gt;<span class="hljs-title function_ invoke__">init</span>(<span class="hljs-variable">$config</span>)-&gt;<span class="hljs-title function_ invoke__">settle</span>(<span class="hljs-variable">$order</span>,<span class="hljs-variable">$access_token</span>);<br></code></pre></td></tr></table></figure><h3 id="快手小程序模版消息"><a href="#快手小程序模版消息" class="headerlink" title="快手小程序模版消息"></a>快手小程序模版消息</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$data</span> = [<br>    <span class="hljs-string">&quot;open_id&quot;</span> =&gt; <span class="hljs-string">&quot;&quot;</span>,<br>    <span class="hljs-string">&quot;tpl_id&quot;</span> =&gt; <span class="hljs-string">&quot;&quot;</span>,<br>    <span class="hljs-string">&quot;page&quot;</span> =&gt; <span class="hljs-string">&quot;pages/index/index&quot;</span>,<br>    <span class="hljs-string">&quot;data&quot;</span> =&gt; [<br>        <span class="hljs-string">&#x27;key1&#x27;</span> =&gt;  <span class="hljs-string">&quot;第一个&quot;</span>,<br>        <span class="hljs-string">&#x27;key2&#x27;</span> =&gt;  <span class="hljs-string">&quot;第二个&quot;</span>,<br>        <span class="hljs-string">&#x27;key3&#x27;</span> =&gt;  <span class="hljs-string">&quot;第三个&quot;</span>,<br>    ]<br>];<br><span class="hljs-variable">$data</span>= <span class="hljs-title class_">\Applet\Pay\Factory</span>::<span class="hljs-title function_ invoke__">getInstance</span>(<span class="hljs-variable">$PayName</span>)-&gt;<span class="hljs-title function_ invoke__">init</span>(<span class="hljs-variable">$config</span>)-&gt;<span class="hljs-title function_ invoke__">sendMsg</span>(<span class="hljs-variable">$data</span>,<span class="hljs-variable">$token</span>);<br><span class="hljs-variable">$data</span>=[<br>    <span class="hljs-string">&quot;err_no&quot;</span> =&gt; <span class="hljs-number">1001</span>,<br>    <span class="hljs-string">&quot;err_tips&quot;</span> =&gt; <span class="hljs-string">&quot;该用户未订阅&quot;</span><br>]<br></code></pre></td></tr></table></figure><h1 id="微信-APP"><a href="#微信-APP" class="headerlink" title="微信 APP"></a>微信 APP</h1><h3 id="Config-5"><a href="#Config-5" class="headerlink" title="Config"></a>Config</h3><table><thead><tr><th>参数名字</th><th>类型</th><th>必须</th><th>说明</th></tr></thead><tbody><tr><td>appid</td><td>int</td><td>是</td><td>开发平台 appid</td></tr><tr><td>secret</td><td>int</td><td>是</td><td>开放平台 secret</td></tr><tr><td>mch_id</td><td>string</td><td>是</td><td>商户 mch_id</td></tr><tr><td>mch_key</td><td>string</td><td>是</td><td>商户 mch_key</td></tr><tr><td>trade_type</td><td>string</td><td>是</td><td>APP</td></tr><tr><td>notify_url</td><td>string</td><td>是</td><td>异步地址</td></tr></tbody></table><h1 id="异步通知"><a href="#异步通知" class="headerlink" title="异步通知"></a>异步通知</h1><h2 id="抖音"><a href="#抖音" class="headerlink" title="抖音"></a>抖音</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$pay</span> = <span class="hljs-title class_">\Applet\Pay\Factory</span>::<span class="hljs-title function_ invoke__">getInstance</span>(<span class="hljs-string">&#x27;Byte&#x27;</span>)-&gt;<span class="hljs-title function_ invoke__">init</span>(<span class="hljs-variable">$config</span>);<br><span class="hljs-variable">$status</span> = <span class="hljs-variable">$pay</span>-&gt;<span class="hljs-title function_ invoke__">notifyCheck</span>(); <span class="hljs-comment">//验证</span><br><span class="hljs-keyword">if</span> (<span class="hljs-variable">$status</span>) &#123;<br>    <span class="hljs-variable">$orderSn</span> = <span class="hljs-variable">$pay</span>-&gt;<span class="hljs-title function_ invoke__">getNotifyOrder</span>(); <span class="hljs-comment">//订单数据$orderSn[&#x27;msg&#x27;][&#x27;cp_orderno&#x27;] $orderSn[&#x27;msg&#x27;][&#x27;seller_uid&#x27;]</span><br>    <span class="hljs-keyword">switch</span> (<span class="hljs-variable">$orderSn</span>[<span class="hljs-string">&#x27;type&#x27;</span>]) &#123;<br>        <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;payment&#x27;</span>: <span class="hljs-comment">// 支付相关回调</span><br>            <span class="hljs-comment">/**</span><br><span class="hljs-comment">             *业务处理</span><br><span class="hljs-comment">            */</span><br>            <span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">json_encode</span>([<span class="hljs-string">&#x27;err_no&#x27;</span> =&gt; <span class="hljs-number">0</span>, <span class="hljs-string">&#x27;err_tips&#x27;</span> =&gt; <span class="hljs-string">&#x27;success&#x27;</span>]);<span class="hljs-keyword">exit</span>; <span class="hljs-comment">// 操作成功需要给头条返回的信息</span><br>            <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;refund&#x27;</span>: <span class="hljs-comment">// 退款相关回调</span><br>            <span class="hljs-comment">/**</span><br><span class="hljs-comment">             *业务处理</span><br><span class="hljs-comment">            */</span><br>            <span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">json_encode</span>([<span class="hljs-string">&#x27;err_no&#x27;</span> =&gt; <span class="hljs-number">0</span>, <span class="hljs-string">&#x27;err_tips&#x27;</span> =&gt; <span class="hljs-string">&#x27;success&#x27;</span>]);<span class="hljs-keyword">exit</span>; <span class="hljs-comment">// 操作成功需要给头条返回的信息</span><br>            <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;settle&#x27;</span>: <span class="hljs-comment">// 分账相关回调</span><br>            <span class="hljs-comment">/**</span><br><span class="hljs-comment">             *业务处理</span><br><span class="hljs-comment">            */</span><br>            <span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">json_encode</span>([<span class="hljs-string">&#x27;err_no&#x27;</span> =&gt; <span class="hljs-number">0</span>, <span class="hljs-string">&#x27;err_tips&#x27;</span> =&gt; <span class="hljs-string">&#x27;success&#x27;</span>]);<span class="hljs-keyword">exit</span>; <span class="hljs-comment">// 操作成功需要给头条返回的信息</span><br>            <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">default</span>: <span class="hljs-comment">// 未知数据</span><br>            <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;数据异常&#x27;</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="微信回调-通用微信-H5-支付、小程序、微信公众号-记得改-config-配置"><a href="#微信回调-通用微信-H5-支付、小程序、微信公众号-记得改-config-配置" class="headerlink" title="微信回调(通用微信 H5 支付、小程序、微信公众号) 记得改 config 配置"></a>微信回调(通用微信 H5 支付、小程序、微信公众号) 记得改 config 配置</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$pay</span> = <span class="hljs-title class_">\Applet\Pay\Factory</span>::<span class="hljs-title function_ invoke__">getInstance</span>(<span class="hljs-string">&#x27;Weixin&#x27;</span>)-&gt;<span class="hljs-title function_ invoke__">init</span>(<span class="hljs-variable">$config</span>);<br><span class="hljs-variable">$status</span> = <span class="hljs-variable">$pay</span>-&gt;<span class="hljs-title function_ invoke__">notifyCheck</span>();<span class="hljs-comment">//验证</span><br><span class="hljs-keyword">if</span>(<span class="hljs-variable">$status</span>)&#123;<br>    <span class="hljs-variable">$order</span> = <span class="hljs-variable">$pay</span>-&gt;<span class="hljs-title function_ invoke__">getNotifyOrder</span>();<span class="hljs-comment">//订单数据</span><br>    <span class="hljs-comment">//$order[&#x27;out_trade_no&#x27;]//平台订单号</span><br>    <span class="hljs-comment">//$order[&#x27;transaction_id&#x27;]//微信订单号</span><br>    <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;success&#x27;</span>;<span class="hljs-keyword">exit</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="百度小程序回调"><a href="#百度小程序回调" class="headerlink" title="百度小程序回调"></a>百度小程序回调</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$pay</span> = <span class="hljs-title class_">\Applet\Pay\Factory</span>::<span class="hljs-title function_ invoke__">getInstance</span>(<span class="hljs-string">&#x27;Baidu&#x27;</span>)-&gt;<span class="hljs-title function_ invoke__">init</span>(<span class="hljs-variable">$config</span>);<br><span class="hljs-variable">$status</span> = <span class="hljs-variable">$pay</span>-&gt;<span class="hljs-title function_ invoke__">notifyCheck</span>();<span class="hljs-comment">//验证</span><br><span class="hljs-keyword">if</span>(<span class="hljs-variable">$status</span>)&#123;<br>    <span class="hljs-variable">$order</span> = <span class="hljs-variable">$pay</span>-&gt;<span class="hljs-title function_ invoke__">getNotifyOrder</span>();<br>    <span class="hljs-comment">//$order[&#x27;tpOrderId&#x27;]</span><br>    <span class="hljs-comment">//$order[&#x27;orderId&#x27;]</span><br>    <span class="hljs-comment">//$order[&#x27;userId&#x27;]</span><br>    <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;success&#x27;</span>;<span class="hljs-keyword">exit</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="快手小程序-1"><a href="#快手小程序-1" class="headerlink" title="快手小程序"></a>快手小程序</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$pay</span> = <span class="hljs-title class_">\Applet\Pay\Factory</span>::<span class="hljs-title function_ invoke__">getInstance</span>(<span class="hljs-string">&#x27;Kuaishou&#x27;</span>)-&gt;<span class="hljs-title function_ invoke__">init</span>(<span class="hljs-variable">$config</span>);<br><span class="hljs-variable">$status</span> = <span class="hljs-variable">$pay</span>-&gt;<span class="hljs-title function_ invoke__">notifyCheck</span>(); <span class="hljs-comment">//验证</span><br><span class="hljs-keyword">if</span> (<span class="hljs-variable">$status</span>) &#123;<br>    <span class="hljs-variable">$order</span> = <span class="hljs-variable">$pay</span>-&gt;<span class="hljs-title function_ invoke__">getNotifyOrder</span>(); <span class="hljs-comment">//订单数据</span><br>    <span class="hljs-comment">//$order[&#x27;data&#x27;][&#x27;out_order_no&#x27;]//平台订单号</span><br>    <span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">json_encode</span>([<span class="hljs-string">&#x27;result&#x27;</span> =&gt; <span class="hljs-number">1</span>, <span class="hljs-string">&#x27;message_id&#x27;</span> =&gt; <span class="hljs-variable">$order</span>[<span class="hljs-string">&#x27;message_id&#x27;</span>]]);<span class="hljs-keyword">exit</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="支付宝小程序-1"><a href="#支付宝小程序-1" class="headerlink" title="支付宝小程序"></a>支付宝小程序</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$pay</span> = <span class="hljs-title class_">\Applet\Pay\Factory</span>::<span class="hljs-title function_ invoke__">getInstance</span>(<span class="hljs-string">&#x27;Ali&#x27;</span>)-&gt;<span class="hljs-title function_ invoke__">init</span>(<span class="hljs-variable">$config</span>);<br><span class="hljs-variable">$status</span> = <span class="hljs-variable">$pay</span>-&gt;<span class="hljs-title function_ invoke__">notifyCheck</span>(); <span class="hljs-comment">//验证</span><br><span class="hljs-keyword">if</span> (<span class="hljs-variable">$status</span>) &#123;<br>    <span class="hljs-variable">$order</span> = <span class="hljs-variable">$pay</span>-&gt;<span class="hljs-title function_ invoke__">getNotifyOrder</span>(); <span class="hljs-comment">//订单数据</span><br>    <span class="hljs-comment">//$order[&#x27;out_trade_no&#x27;]//平台订单号</span><br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Composer</category>
      
      <category>PHP</category>
      
      <category>小程序支付</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Composer</tag>
      
      <tag>PHP</tag>
      
      <tag>小程序支付</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World!</title>
    <link href="/2023/04/28/hello-world/"/>
    <url>/2023/04/28/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
